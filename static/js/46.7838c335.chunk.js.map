{"version":3,"sources":["desktop/pages/Faucet/Faucet.js","components/Button/Button.js","components/Faucet/Faucet.js"],"names":["lang","Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","status","setStatus","useState","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","beforeAction","current","style","display","afterAction","useEffect","async","detail","account","res","pool","bTokenId","loadApproveStatus","onClick","approve","success","alert","ref","marginRight","inject","observer","bToken","hasConnectWallet","class","mintTERC20","chainId","target","href"],"mappings":"qJAAA,sCAIe,oBAAS,KAACA,IACvB,OACE,8BACE,cAAC,IAAD,CAAQA,KAAMA,Q,iCCPpB,qDACe,SAASC,GAAO,QAACC,EAAD,UAASC,EAAT,SAAmBC,EAAnB,MAA4BC,EAA5B,WAAkCC,EAAlC,aAA6CC,EAA7C,OAA0DC,EAA1D,KAAiEC,EAAjE,KAAsET,IACnG,MAAOU,EAAQC,GAAaC,mBAASR,EAAW,WAAa,YACtDS,EAAYC,GAAiBF,oBAAS,IACtCG,EAASC,GAAcJ,oBAAS,IAChCK,EAAYC,GAAiBN,mBAASV,GACvCiB,EAAUC,iBAAO,MAcjBC,EAAe,KACnBV,EAAU,YACVK,GAAW,GACXG,EAAQG,UAAYH,EAAQG,QAAQC,MAAMC,QAAU,iBAGhDC,EAAc,KAClBN,EAAQG,UAAYH,EAAQG,QAAQC,MAAMC,QAAU,QACpDb,EAAU,WACVK,GAAW,IA0Cb,OAbAU,qBAAU,KA1BgBC,WACxB,GAAGpB,GAAgBC,GAAUA,EAAOoB,OAAOC,QAAQ,CACjD,MAAMC,QAAYtB,EAAOK,WAAWJ,EAAKsB,KAAKtB,EAAKuB,UACnDlB,EAAcgB,KAwBhBG,GACO,SACN,CAACzB,EAAOC,EAAKF,IAEhBmB,qBAAU,KACLxB,GACDgB,EAAchB,GAET,SAEN,CAACA,IAGF,yBAAQC,UAAWA,EAAW+B,QAtBjB,KACVrB,EA3CWc,WACd,GAAc,YAAXjB,EACD,OAEFW,UACqBhB,KAEnBC,GAAcA,IAEhBmB,KAmCES,GAdYP,WACdN,WACkBb,EAAO2B,QAAQ1B,EAAKsB,KAAKtB,EAAKuB,WACzCI,QACLtB,GAAc,IAEdA,GAAc,GACduB,MAAMrC,EAAK,oBAEbyB,KAOEU,IAkBF,UACI,sBAAMhC,UAAU,mBAAhB,SACE,sBAAMmC,IAAKnB,EACThB,UAAU,2CACVoB,MAAO,CAACC,QAAU,OAAQe,YAAc,SAGzCxB,EAAUf,EAAI,QAAea,EAAaI,EAAajB,EAAI,a,iCC/EtE,0CAoDewC,gBAAO,SAAPA,CAAiBC,aA/ChC,UAAgB,OAACjC,EAAO,GAAR,KAAWR,IACzB,MAAM0C,EACM,6CADNA,EAEM,6CAENC,EAAmB,IAAMnC,GAAUA,EAAOoB,QAAUpB,EAAOoB,OAAOC,QAmBxE,OACE,sBAAK1B,UAAU,aAAf,UACE,qBAAKyC,MAAM,QAAX,SACG5C,EAAK,0BAER,qBAAK4C,MAAM,OAAX,SACE,cAAC,IAAD,CAAQzC,UAAU,MAAME,MAvBZsB,UAChB,GAAGgB,IAAmB,QACJE,aAAWrC,EAAOoB,OAAOkB,QAAQJ,EAAalC,EAAOoB,OAAOC,UACrEO,UAoBqClC,QAASF,EAAI,MAAWA,KAAMA,MAE1E,qBAAK4C,MAAM,OAAX,SACA,cAAC,IAAD,CAAQzC,UAAU,MAAME,MAlBVsB,UAChB,GAAGgB,IAAmB,QACJE,aAAWrC,EAAOoB,OAAOkB,QAAQJ,EAAalC,EAAOoB,OAAOC,UACrEO,UAemClC,QAASF,EAAI,MAAWA,KAAMA,MAExE,qBAAK4C,MAAM,YAAX,SACG5C,EAAK,eAER,qBAAK4C,MAAM,MAAX,SACE,mBAAGG,OAAO,SAASC,KAAK,2CAAxB,SACGhD,EAAI","file":"static/js/46.7838c335.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\n\nimport Faucet from '../../../components/Faucet/Faucet'\nimport './faucet.less'\nexport default function({lang}){\n  return(\n    <div>\n      <Faucet lang={lang} />\n    </div>\n  )\n}","import {useState,useRef,useEffect} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [isApproved, setIsApproved] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [buttonText, setbuttonText] = useState(btnText)\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    beforeAction()\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    afterAction()\n  }\n\n  const beforeAction = ()  => {\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n  }\n\n  const afterAction = () => {\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  const loadApproveStatus = async () => {\n    if(checkApprove && wallet && wallet.detail.account){\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\n      setIsApproved(res);\n    }\n  }\n  const approve = async () => {\n    beforeAction();\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\n    if(res.success){\n      setIsApproved(true);\n    } else {\n      setIsApproved(false)\n      alert(lang['approve-failed'])\n    }\n    afterAction();\n  }\n\n  const action = () => {\n    if(isApproved){\n      onClick();\n    } else {\n      approve();\n    }\n  }\n\n  useEffect(() => {\n    loadApproveStatus();\n    return () => {};\n  }, [wallet,spec,checkApprove]);\n\n  useEffect(() => {\n    if(btnText){\n      setbuttonText(btnText)\n    }\n    return () => {\n    }\n  }, [btnText])\n\n  return(\n    <button className={className} onClick={action} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\n        </button>\n  )\n}","/* eslint-disable react/jsx-no-target-blank */\nimport React,{useEffect,useState} from 'react'\nimport {inject,observer} from 'mobx-react'\nimport Button from '../Button/Button'\nimport {mintTERC20} from '../../lib/web3js/indexV2'\nfunction Faucet({wallet={},lang}){\n  const bToken = {\n    \"tbusd\" : \"0xaa2B8115c094445e96C2CD951c17a30F41867323\",\n    \"tweth\" : \"0x8e60B350FA4fbaF209712bB721373364DE858A5d\",\n  }\n  const hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n  \n  const mintTBUSD = async ()=>{\n    if(hasConnectWallet()){\n      let res = await mintTERC20(wallet.detail.chainId,bToken.tbusd,wallet.detail.account)\n      if(res.success){\n\n      }\n    }\n  }\n  const mintTWETH = async ()=>{\n    if(hasConnectWallet()){\n      let res = await mintTERC20(wallet.detail.chainId,bToken.tweth,wallet.detail.account)\n      if(res.success){\n        \n      }\n    }\n  }\n\n  return(\n    <div className='faucet-box'>\n      <div class='title'>\n        {lang['obtain-testnet-token']}\n      </div>\n      <div class='BUSD'>\n        <Button className='btn' click={mintTBUSD} btnText={lang['tbusd']} lang={lang} />\n      </div>\n      <div class='WETH'>\n      <Button className='btn' click={mintTWETH} btnText={lang['tweth']} lang={lang} />\n      </div>\n      <div class='go-to-bnb'>\n        {lang['go-to-bnb']}\n      </div>\n      <div class='BNB'>\n        <a target=\"_blank\" href='https://testnet.binance.org/faucet-smart'>\n          {lang['bnb']}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default inject('wallet')(observer(Faucet))"],"sourceRoot":""}