{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["env","DeriEnv","get","chainInfo","config","inject","observer","wallet","lang","currentTab","setCurrentTab","useState","history","useHistory","isController","setIsController","version","chainId","symbol","baseToken","address","type","useParams","query","useQuery","networkText","name","props","url","has","useEffect","detail","account","async","res","isPoolController","catch","e","console","log","isPoolAdmin","openConfigListCache","update","openConfigList","poolInfoClass","classnames","className","onClick","push","goToMining"],"mappings":"4KAAA,wHAYA,MAAMA,EAAMC,IAAQC,OACd,UAACC,GAAaC,EAAOJ,GAoEZK,sBAAO,SAAPA,CAAiBC,aAlEhC,UAAgB,OAACC,EAAD,KAAQC,IACvB,MAAOC,EAAWC,GAAiBC,mBAAS,aACtCC,EAAUC,wBACTC,EAAaC,GAAmBJ,oBAAS,IAC1C,QAACK,EAAD,QAASC,EAAT,OAAiBC,EAAjB,UAAwBC,EAAxB,QAAkCC,EAAlC,KAA0CC,GAASC,sBACnDC,EAAQC,cACRC,EAActB,EAAUc,IAAYd,EAAUc,GAASS,KACvDC,EAAQ,CAACX,UAAQC,UAAQC,SAAOC,YAAUC,UAAQb,SAAOc,OAAKb,QAC9DoB,EAAO,cAAaZ,GAAW,QAAQC,KAAWI,KAAQH,KAAUC,KAAaC,IACpFG,EAAMM,IAAI,iBACZF,EAAK,YAAkBJ,EAAMrB,IAAI,gBAE/BqB,EAAMM,IAAI,cACZF,EAAK,SAAeJ,EAAMrB,IAAI,aAiB/B4B,qBAAU,KAfqBvB,GAAUA,EAAOwB,QAAUxB,EAAOwB,OAAOC,SAiBvD,iBAAZhB,IAfeiB,WACnB,IAAIC,QAAYC,aAAiB5B,EAAOwB,OAAOd,QAAQG,EAAQb,EAAOwB,OAAOC,SAASI,OAAMC,GAAKC,QAAQC,IAAIF,KAC7GtB,EAAgBmB,IAcdM,GAXoBP,iBAChBQ,KAAoBC,UAWxBC,MAGD,CAACpC,EAAOA,EAAOwB,OAAOX,IAExB,MAAMwB,EAAgBC,IAAW,cAAcpC,EAAW,CAAC,YAA0B,iBAAZO,IACzE,OACG,sBAAK8B,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATzB,GAAgE,OAAZL,GAAgC,YAAZA,GAAqC,iBAAZA,GAA0C,WAAZA,EAA9G,GAAEG,OAAeM,IAAwJ,GAAEP,KAAUC,OAAeM,MAE1M,iBAAZT,GAA8B,qBAAK8B,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,IAAMrC,EAAc,aAA/D,SACGF,EAAK,2BAIZ,qBAAKsC,UAAU,YAAf,SACE,cAAC,IAAD,IAAqBnB,MAErBb,GAA4B,iBAAZE,GAA+B,mCAChD,qBAAK8B,UAAU,aAAf,SACC,wBAAQC,QAAS,IA/BDnB,KACnBhB,EAAQoC,KAAKpB,IA8BaqB,CAAWrB,GAAlC,SACEpB,EAAK","file":"static/js/48.5c83c829.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\nimport {useParams,useHistory} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport './mining.less'\nimport './zh-mining.less'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst history = useHistory();\n\tconst [isController,setIsController] = useState(false)\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].name;\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\n\tconst url = `/addsymbol/${version || 'v1'}/${chainId}/${type}/${symbol}/${baseToken}/${address}`\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n\n\tconst isPoolAdmin = async () => {\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account).catch(e => console.log(e))\n\t\tsetIsController(res)\n\t}\n\n\tconst openConfigList = async ()=>{\n\t\tawait openConfigListCache.update()\n\t}\n\n\tconst goToMining = (url)=>{\n\t\thistory.push(url)\n\t}\n\n\tuseEffect(()=>{\n\t\tif(hasConnectWallet()){\n\t\t\tif(version === 'v2_lite_open'){\n\t\t\t\tisPoolAdmin()\n\t\t\t\topenConfigList()\n\t\t\t}\n\t\t}\n\t},[wallet,wallet.detail,address])\n\n\tconst poolInfoClass = classnames('mining-info',currentTab,{'open-zone' : version === 'v2_lite_open'})\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  (version === 'v2' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\n\t\t\t\t\t</div>\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t</div>\n\t\t\t{(isController && version === 'v2_lite_open') && <>\n\t\t\t\t<div className='add-symbol'>\n\t\t\t\t\t<button onClick={() => goToMining(url)} >\n\t\t\t\t\t\t{lang['add-symbol']}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</>}\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}