{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/contract/database/database_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api_v2.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/Intl.js","model/Config.js","lib/web3js/shared/utils/convert.js","model/Version.js","utils/utils.js","../lang).)*/.json$","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","withModal","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","WithModal","props","state","modalIsOpen","this","className","overlayMerged","Object","assign","mergedStyle","isOpen","style","portalClassName","intl","locale","onClose","inject","observer","data-title","DeriEnv","_deriEnv","get","set","value","Error","getChainProviderUrls","chainId","res","provider_urls","filter","i","length","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","factory","klass","instances","address","key","keys","includes","deepClone","obj","clone","forEach","Array","isArray","from","shuffleArray","urls","newUrls","index","Math","floor","random","concat","splice","getBlockNumber","url","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","Web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","startsWith","normalizeChainId","chainIds","toString","normalizeAddress","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","prop","validateIsArray","getChainProviderUrl","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","web3Factory","web3InstanceMap","isBrowser","isJsDom","window","ethereum","providerUrl","getLastUpdatedBlockNumber","contractAddress","getStorageAt","hexToNumber","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","events","amount","toBlock","es","e","catchApiError","func","methodName","defaultValue","console","log","catchTxApiError","result","success","transaction","error","getOracleConfigList","version","config","getConfig","oracle","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","isUsedRestOracle","symbol","mapToSymbol","mapToSymbolInternal","values","indexOf","getOracleConfig","oracles","filteredByChainId","c","processConfigV2","bToken","s","validateConfigV2Lite","processConfigV2Lite","map","symbolId","getJsonConfig","configs","jsonConfig","JSON","parse","pools","expendPoolConfigV2","pool","bTokens","symbols","pToken","lToken","router","initialBlock","bTokenId","bTokenSymbol","unit","flat","expendPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","getPoolConfigList","getFilteredPoolConfigList","poolAddress","poolConfigList","check","getPoolConfig","undefined","getPoolVersion","acc","v","_getPoolConfig","find","p","getPoolConfig2","bTokenCount","symbolCount","getPoolBTokenList","bTokenAddress","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolV1ConfigList","dToken","MiningVault","retired","getLpConfigList","type","getMiningVaultRouterConfig","filteredConfig","MiningVaultRouter","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","lTokenAddress","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getMiningVaultConfig","getPoolV1Config","pTokenAddress","dTokenAdress","MinningVaultAddress","getBrokerConfig","brokerManager","getBrokerConfigList","getOracleUrl","baseUrl","toLowerCase","addSymbolParam","getPriceFromRest","getPriceInfo","price","deriToNatural","stringify","retry","fetch","mode","cache","ok","json","priceInfo","status","data","getPriceInfos","symbolList","method","headers","body","RestOracle","getPrice","getOraclePrice","oracleFactory","decimal","MAX_GAS_AMOUNT","ContractBase","contractAbi","Contract","_init","methods","call","join","accountAddress","gas","estimateGas","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","errorMessage","_estimatedGas","txRaw","numberToHex","encodeABI","request","params","_getTransactionReceipt","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","WrappedOracle","_call","instanceMap","DatabaseBaseContract","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","CONTRACT_ABI","DatabaseWormholeContract","DatabaseAirdropContract","BToken","_balanceOf","decimals","bg","allowance","gt","_transact","BrokerManager","brokerAddress","PTokenAirdrop","databaseFactory","databaseInstanceMap","database","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","DeriContract","MiningVaultPool","WormholeContract","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","r","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getUserInfo","userAddress","db","getValues","catch","err","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","PerpetualPool","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","discount","pnl","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","volume","abs","times","PerpetualPoolRouter","isMaximum","priceInfos","processAsset","lastCumulativePnl","LToken","processPosition","cost","lastCumulativeFundingRate","PToken","perpetualPoolFactory","perpetualPoolRouterFactory","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getSlpLiquidityInfo","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","message","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","timestamp","getStateValues","stateValues","parameters","args1","fundingRatePerBlock","liquidityUsed","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getClpLiquidityInfo","totalSupply","maxRemovableShares","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","wsInstance","_ws","ws","io","transports","path","id","getOrSet","wsOnPromise","event","sendTradeTxToWorkerQuene","methodCall","send","addSlpLiquidity2","res2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","unlockLp","addLpLiquidity","removeLpLiquidity","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getHttpBase","fetchJson","opts","resp","fetchRestApi","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","liquidateHistoryOnline","getSpecification","addresses","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","bTokenIdList","symbolIdList","getBToken","getAsset","parameterInfo","bTokenInfo","lTokenAsset","getSymbol","totalPnl","approximatePnl","perpetualPoolRouter","validation","_prices","split","symbolInfo","bTokenDiscounts","bTokenMultiplier","symbolConfigList","getPosition","getMargins","getPositions","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","_getFundingRate","promiseList","bTokenInfoList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","perpetualPoolLiteAbi","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","operator","PerpetualPoolLiteViewer","PerpetualPoolLite","viewerAddress","viewers","poolLiteViewer","getPoolLiteViewerConfig","viewer","getActiveSymbolIds","activeSymbolIds","getOffChainOracleSymbols","activeSymbols","liquidatorQualifierAddress","prices","_updateOffchainSymbols","_getSymbolPrices","LTokenLite","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","symbolIds","getMargin","priceIndex","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryV2","require","lang","page","test","pageName","Intl","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","Config","setAll","current","isV2","cur","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","hexToString","hexToUtf8","hexToNumberString","toFixed","toNumber","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","Version","makeAutoObservable","setCurrent","isV1","isV2Lite","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","MaskWrapper","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e24439f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return 'https://testnetapi.deri.finance';\r\n    //return 'http://localhost:8082';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 10,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // using metaMask ethereum object\r\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else if (isBrowser() && !isJsDom()) {\r\n        // MetaMask plugin is not installed in the browser\r\n        throw new Error('Please install MetaMask first');\r\n      } else {\r\n        const providerUrl = await getChainProviderUrl(chainId);\r\n        web3InstanceMap[chainId] = new Web3(\r\n          new Web3.providers.HttpProvider(providerUrl)\r\n        );\r\n        return web3InstanceMap[chainId];\r\n      }\r\n    },\r\n  };\r\n})();","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","export const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    //console.log(`${methodName}: `, err)\r\n    console.log(`${methodName}: ${err}`)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n","import { getConfig } from './config';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getConfig(version, env)\r\n  return config.oracle\r\n};\r\n\r\nconst bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n};\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index !== -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport { isUsedRestOracle, mapToBToken, mapToSymbol } from './oracle';\r\n\r\nconst validateConfigV2 = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['bTokens'], 'bTokens');\r\n  config['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processConfigV2 = (config) => {\r\n  // process config\r\n  config['bTokenCount'] = config['bTokens'].length;\r\n  config['symbolCount'] = config['symbols'].length;\r\n  config['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validateConfigV2Lite = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2Lite = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst getJsonConfig = (version, env) => {\r\n  env =  env || DeriEnv.get();\r\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\r\n    configs = configs[version]\r\n  }\r\n  if (['prod', 'dev'].includes(env)){\r\n    //console.log(env)\r\n    if (configs && configs[env]) {\r\n      //console.log(configs[env])\r\n      const pools = configs[env].pools;\r\n      if (pools && Array.isArray(pools)) {\r\n        if (version === 'v2') {\r\n          for (let i = 0; i < pools.length; i++) {\r\n            processConfigV2(pools[i]);\r\n            validateConfigV2(pools[i]);\r\n          }\r\n        } else if (version === 'v2_lite') {\r\n          for (let i = 0; i < pools.length; i++) {\r\n            processConfigV2Lite(pools[i]);\r\n            validateConfigV2Lite(pools[i]);\r\n          }\r\n        }\r\n      }\r\n      //console.log(configs[env])\r\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\r\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n      return configs[env];\r\n    }\r\n  }\r\n  throw new Error(\r\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n  );\r\n};\r\n\r\nexport const getConfig = (version='v2', env) => {\r\n  return getJsonConfig(version, env);\r\n};\r\n","import { getConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nconst expendPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expendPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          router: pool.router,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite',\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\r\n  const config = getConfig(version, env)\r\n  if (version === 'v2') {\r\n    return expendPoolConfigV2(config)\r\n  } else if (version === 'v2_lite') {\r\n    return expendPoolConfigV2Lite(config)\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  // check the bToken in v2_lite\r\n  if (version === 'v2_lite') {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  //console.log('pools', pools)\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  const config = getConfig(version, DeriEnv.get())\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool\r\n  }\r\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolLiteViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const config = getConfig(version, DeriEnv.get())\r\n  const viewers = config.poolLiteViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getpoolLiteViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { getConfig } from './config';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getConfig(version)\r\n  return config.brokerManager\r\n};\r\n\r\nexport const getBrokerConfig = (chainId, version) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import { getOracleConfig, mapToSymbolInternal } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory } from '../factory/oracle';\r\nimport { deriToNatural } from './convert';\r\n\r\nexport const getOracleUrl = (symbol) => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? 'https://oracle4.deri.finance/get_signed_price'\r\n      : 'https://oracle2.deri.finance/get_signed_price';\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol.toLowerCase()}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol) => {\r\n  const res = await getPriceInfo(symbol)\r\n  if (res.price) {\r\n    return deriToNatural(res.price).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  let url = getOracleUrl(symbol);\r\n  //console.log(`getPriceInfo url: ${url}`)\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(2): ${symbol} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n      // const priceInfo = await getPriceInfo(symbol)\r\n      // return deriToNatural(priceInfo.price).toString()\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(chainId, symbol, version);\r\n  // console.log('oracle config',config)\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args.join(',')}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        // ignore the metamask error\r\n      }\r\n    }\r\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}","import { isUsedRestOracle } from '../config';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n","import Web3 from 'web3';\r\nimport { getDBProviderUrls } from '../../config/database';\r\nimport { getLatestRPCServer } from '../../utils';\r\n\r\nexport class DatabaseBaseContract {\r\n  constructor(contractAddress, contractAbi) {\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n  _init() {\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\r\n    this.contract = new this.web3.eth.Contract(\r\n      this.contractAbi,\r\n      this.contractAddress\r\n    );\r\n  }\r\n\r\n  async updateProviderUrl() {\r\n    if (!this.providerUrl) {\r\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrls());\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  async _call(method, args) {\r\n    let res\r\n    let retry = 3\r\n    while(retry > 0) {\r\n      try {\r\n        await this.updateProviderUrl();\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch (err) {\r\n        this.providerUrl = null\r\n        console.log(err.toString())\r\n      }\r\n      retry -= 1\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\r\n    }\r\n    return res\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base';\r\n\r\n/* eslint-disable */\r\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, DB_CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\n\r\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"0x608060405234801561001057600080fd5b506040516112c63803806112c683398101604081905261002f91610066565b60008054336001600160a01b031991821617909155600380549091166001600160a01b039290921691909117905546600455610094565b600060208284031215610077578081fd5b81516001600160a01b038116811461008d578182fd5b9392505050565b611223806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b0509b1116100975780639a8a0592116100665780639a8a0592146101c85780639d76ea58146101d0578063b06faf62146101d8578063f77c4791146101e0576100f5565b80636b0509b114610185578063701422691461018d57806379a87b19146101a057806392eefe9b146101b5576100f5565b806351dfdb48116100d357806351dfdb4814610137578063560ebbd11461014a57806358c700a31461016a578063677528cb14610172576100f5565b806306fdde03146100fa57806320606b7014610118578063325564ec1461012d575b600080fd5b6101026101e8565b60405161010f9190610dbf565b60405180910390f35b610120610209565b60405161010f9190610d48565b61013561022d565b005b610135610145366004610bab565b6103a1565b61015d610158366004610ca1565b61066f565b60405161010f9190610d3d565b610120610684565b610135610180366004610bea565b61068a565b6101206107b1565b61013561019b366004610c15565b6107d5565b6101a8610acc565b60405161010f9190610cec565b6101356101c3366004610bab565b610adb565b610120610b77565b6101a8610b7d565b61015d610b8c565b6101a8610b9c565b6040518060400160405280600581526020016415985d5b1d60da1b81525081565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000546001600160a01b031633146102605760405162461bcd60e51b815260040161025790610f7f565b60405180910390fd5b600254600160a01b900460ff161561028a5760405162461bcd60e51b81526004016102579061106a565b6001541580159061029d57506001544210155b6102b95760405162461bcd60e51b815260040161025790610e12565b60035460025460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102f19291169060001990600401610d24565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610c81565b506002805460ff60a01b1916600160a01b17908190556001546040517fce3275b30d22151f82ee29ce7ea685563b66ff98e56afc576a94d8a88c676ec092610397929130916001600160a01b031690611153565b60405180910390a1565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156103f55760405162461bcd60e51b81526004016102579061106a565b6000816001600160a01b03166358c700a36040518163ffffffff1660e01b815260040160206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190610cb9565b90506000826001600160a01b03166379a87b196040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610bce565b905081158015906104ee5750814210155b61050a5760405162461bcd60e51b815260040161025790610ec5565b6001600160a01b03811630146105325760405162461bcd60e51b815260040161025790610fd5565b6003546040516370a0823160e01b81526001600160a01b03909116906323b872dd908590309084906370a082319061056e908590600401610cec565b60206040518083038186803b15801561058657600080fd5b505afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610cb9565b6040518463ffffffff1660e01b81526004016105dc93929190610d00565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610c81565b507f18ce2512842fddee8c808fb717780a66007d1da9a942dd32625813c82d53c34282843060405161066293929190611153565b60405180910390a1505050565b60056020526000908152604090205460ff1681565b60015481565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156106de5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b0382166107045760405162461bcd60e51b8152600401610257906110d3565b60038110158015610717575061016d8111155b6107335760405162461bcd60e51b815260040161025790610e68565b61074081620151806111a0565b61074a9042611188565b6001819055600280546001600160a01b0319166001600160a01b0385811691909117918290556040517fe2a3b7ba8269be3ca7ba4627f844bb9abd978e9b05d290dc89d4b107f9e3dda7936107a59390923092911690611153565b60405180910390a15050565b7f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb1281565b600254600160a01b900460ff16156107ff5760405162461bcd60e51b81526004016102579061106a565b8442111561081f5760405162461bcd60e51b815260040161025790610f1b565b604080518082018252600581526415985d5b1d60da1b6020918201526004549151600092610894927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866927f8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c79291309101610d7d565b60405160208183030381529060405280519060200120905060007f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb12898989896040516020016108e7959493929190610d51565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561092f5760405162461bcd60e51b815260040161025790610f52565b6000818152600560209081526040808320805460ff191660011790555161095a918591859101610cd1565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516109979493929190610da1565b6020604051602081039080840390855afa1580156109b9573d6000803e3d6000fd5b5050604051601f1901516000549092506001600160a01b0380841691161490506109f55760405162461bcd60e51b81526004016102579061111c565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610a27908e908e90600401610d24565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610c81565b508a6001600160a01b03167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef18b8b8b604051610ab793929190611172565b60405180910390a25050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b03163314610b055760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff1615610b2f5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b038116610b555760405162461bcd60e51b815260040161025790611024565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6003546001600160a01b031681565b600254600160a01b900460ff1681565b6000546001600160a01b031681565b600060208284031215610bbc578081fd5b8135610bc7816111d5565b9392505050565b600060208284031215610bdf578081fd5b8151610bc7816111d5565b60008060408385031215610bfc578081fd5b8235610c07816111d5565b946020939093013593505050565b600080600080600080600060e0888a031215610c2f578283fd5b8735610c3a816111d5565b9650602088013595506040880135945060608801359350608088013560ff81168114610c64578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215610c92578081fd5b81518015158114610bc7578182fd5b600060208284031215610cb2578081fd5b5035919050565b600060208284031215610cca578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610deb57858101830151858201604001528201610dcf565b81811115610dfc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526036908201527f5661756c742e617070726f76654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b60208082526039908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a2067726160408201527f636544617973206d75737420626520332d333635206461797300000000000000606082015260800190565b60208082526036908201527f5661756c742e657865637574654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b6020808252601e908201527f5661756c742e636c61696d3a207369676e617475726520657870697265640000604082015260600190565b6020808252601390820152725661756c742e636c61696d3a207265706c617960681b604082015260600190565b60208082526036908201527f4d696772617461626c652e5f636f6e74726f6c6c65725f3a2063616e206f6e6c6040820152753c9031b0b63632b210313c9031b7b73a3937b63632b960511b606082015260800190565b6020808252602f908201527f5661756c742e657865637574654d6967726174696f6e3a206e6f74206465737460408201526e696e6174696f6e206164647265737360881b606082015260800190565b60208082526026908201527f4d696772617461626c652e736574436f6e74726f6c6c65723a20746f2030206160408201526564647265737360d01b606082015260800190565b60208082526043908201527f4d696772617461626c652e5f76616c69645f3a2063616e6e6f742070726f636560408201527f65642c207468697320636f6e747261637420686173206265656e206d696772616060820152621d195960ea1b608082015260a00190565b60208082526029908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a20746f2060408201526830206164647265737360b81b606082015260800190565b60208082526019908201527f5661756c742e636c61696d3a20756e617574686f72697a656400000000000000604082015260600190565b9283526001600160a01b03918216602084015216604082015260600190565b9283526020830191909152604082015260600190565b6000821982111561119b5761119b6111bf565b500190565b60008160001904831182151516156111ba576111ba6111bf565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ea57600080fd5b5056fea2646970667358221220309376e66ca21a54581da8ded1f86303ca0c78bd47254d1bdb5fb101169baa2364736f6c63430008010033\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const userInfo = await getUserInfo(userAddress);\r\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\r\n  const userInfoTotal = await getUserInfoTotal(userAddress);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig(chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = tradersNetVolume.times(price).times(multiplier);\r\n  const removable = liquidity\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = volume\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = liquidity\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (margin.plus(amount).gte(minMargin)) {\r\n    if (\r\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract';\r\nimport { getPriceFromRest, getPriceInfo } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    let gas = 0;\r\n    for (let i = 0; i < 20; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = 532731;\r\n    if (gas > 532731) gas = 532731;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfo(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = await getPriceFromRest(symbol);\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = await getPriceFromRest(symbol);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n} from './contract_transaction_api';\r\nimport {\r\n  addSlpLiquidity,\r\n  removeSlpLiquidity,\r\n} from '../../shared/api/slp_pool_api'\r\nimport {\r\n  addClpLiquidity,\r\n  removeClpLiquidity,\r\n} from '../../shared/api/clp_pool_api'\r\nimport {\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from '../../shared/api/clp2_pool_api'\r\nimport { wsInstance } from './api_v1_globals'\r\nimport { DeriEnv, getRestServerConfig } from '../../shared/config'\r\n\r\nconst wsOnPromise = (ws, event) => {\r\n  return new Promise((resolve) => {\r\n    ws.on(event, function(data){\r\n      resolve(JSON.parse(data))\r\n    })\r\n  })\r\n}\r\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\r\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\r\n  await ws.send(methodCall)\r\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\r\n  //console.log('res', res)\r\n  return res\r\n}\r\n\r\nexport const tradeWithMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const closePosition2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const depositMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const withdrawMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\nexport const addClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};","import { getLpConfig } from '../config';\r\nimport { unlockSlp } from './slp_pool_api';\r\nimport { unlockClp } from './clp_pool_api';\r\nimport { unlockClp2 } from './clp2_pool_api';\r\nimport {\r\n  addSlpLiquidity2 as addSlpLiquidity,\r\n  removeSlpLiquidity2 as removeSlpLiquidity,\r\n  addClpLiquidity2 as addClpLiquidity,\r\n  removeClpLiquidity2 as removeClpLiquidity,\r\n  addClp2Liquidity2 as addClp2Liquidity,\r\n  removeClp2Liquidity2 as removeClp2Liquidity,\r\n} from '../../v1/api/contract_transaction_api_v2';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { DeriEnv, getPoolV1Config, getRestServerConfig  } from '../../shared/config';\r\nimport { bg, deriToNatural } from '../../shared/utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url, opts) => {\r\n  const resp = await fetch(url, opts);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    //console.log(\"approximatePnl\", approximatePnl.toString())\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { deriToNatural } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import {\r\n  getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  getPoolLiteViewerConfig,\r\n} from '../../shared';\r\nimport { getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\n//import { MAX_INT256} from '../../shared/config'\r\nimport { PTokenLite } from './p_token';\r\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'v2_lite'\r\n    );\r\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    this.offchainSymbols = this.config.offchainSymbols;\r\n    this.bTokenAddress = this.config.bToken\r\n    this.lTokenAddress = this.config.lToken\r\n    this.pTokenAddress = this.config.pToken\r\n    this.viewerAddress = getPoolLiteViewerConfig(this.chainId)\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([this.getAddresses()]);\r\n  }\r\n\r\n  async _updateOffchainSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = new PerpetualPoolLiteViewer( this.chainId, this.viewerAddress)\r\n    }\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      this.activeSymbolIds.length !== activeSymbolIds.length ||\r\n      this.activeSymbolIds.toString() !== activeSymbolIds.toString()\r\n    ) {\r\n      //await this.getAddresses();\r\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(\r\n        this.contractAddress\r\n      );\r\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\r\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\r\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\r\n      }, []);\r\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      // console.log(\r\n      //   'offchainSymbolIds',\r\n      //   this.offchainSymbolIds,\r\n      //   this.offchainSymbols\r\n      // );\r\n    }\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    this.bTokenAddress = res.bTokenAddress;\r\n    this.lTokenAddress = res.lTokenAddress;\r\n    this.pTokenAddress = res.pTokenAddress;\r\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\r\n    this.protocolFeeCollector = res.protocolFeeCollector;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = []\r\n    await this._updateOffchainSymbols()\r\n    if (this.offchainSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offchainSymbolIds[\r\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\r\n    perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import {\r\n  calculateEntryPrice ,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLastUpdatedBlockNumber,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getActiveSymbolIds(),\r\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\r\n      getLatestBlockNumber(chainId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargin(accountAddress),\r\n      getOraclePrice(chainId, symbol, 'v2_lite'),\r\n    ])\r\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\r\n\r\n    let promises = []\r\n    for (let i = 0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n\r\n    promises = []\r\n    for (let i=0; i< symbolIds.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const priceIndex = symbolIds.indexOf(symbolId)\r\n    let price\r\n    if (priceIndex === '-1') {\r\n      price = '0'\r\n    } else {\r\n      price = symbolPrices[priceIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\r\n\r\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    }, bg(0))\r\n\r\n    const totalCost = positions.reduce((accum, p) => {\r\n      return accum.plus(bg(p.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee: fundingFee.toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      ).toString(),\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\r\n    perpetualPool.getLiquidity(),\r\n    getOraclePrice(chainId, symbol, 'v2_lite'),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\r\n  const { minPoolMarginRatio } = parameterInfo\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n\r\n  let promises = []\r\n  for (let i = 0; i< symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    if (!price) {\r\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [price, symbolInfo] = await Promise.all([\r\n      getOraclePrice(chainId, symbol, 'v2_lite'),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const { multiplier } = symbolInfo\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'v2_lite'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n        perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import {\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n} from '../shared/config';\r\n\r\nexport const getContractAddressConfig = (env = 'dev', version) => {\r\n  if (!version || version === '1' || version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (version === 'v2' || version === 'v2_lite') {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport { getPoolVersion } from '../shared';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity2,\r\n  getPoolInfoApy as getPoolInfoApy2,\r\n} from '../shared/api/database_api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolLiquidityV2,\r\n  getPoolInfoApyV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n  getPoolLiquidityV2l,\r\n  getPoolInfoApyV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPoolLiquidityV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPoolInfoApyV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersion } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import { getPoolVersion, isDeriUnlocked } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersion, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersion } from '../shared';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  load(version){\r\n    const current = version && version.current;\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(version){\r\n      configs = configs.filter(c => c.version === version.current)\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n}\r\nexport default new Version()","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\n","var map = {\n\t\"./de/Signin.json\": 564,\n\t\"./de/bridge.json\": 565,\n\t\"./de/broker.json\": 566,\n\t\"./de/dip-history.json\": 567,\n\t\"./de/footer.json\": 568,\n\t\"./de/governance.json\": 569,\n\t\"./de/header.json\": 570,\n\t\"./de/home.json\": 571,\n\t\"./de/lite.json\": 572,\n\t\"./de/mining.json\": 573,\n\t\"./de/mobile-lite.json\": 574,\n\t\"./de/pro.json\": 575,\n\t\"./de/team.json\": 576,\n\t\"./en/Signin.json\": 577,\n\t\"./en/bridge.json\": 578,\n\t\"./en/broker.json\": 579,\n\t\"./en/dip-history.json\": 580,\n\t\"./en/footer.json\": 581,\n\t\"./en/governance.json\": 582,\n\t\"./en/header.json\": 583,\n\t\"./en/home.json\": 584,\n\t\"./en/lite.json\": 585,\n\t\"./en/mining.json\": 586,\n\t\"./en/mobile-lite.json\": 587,\n\t\"./en/pro.json\": 588,\n\t\"./en/team.json\": 589,\n\t\"./zh/Signin.json\": 590,\n\t\"./zh/bridge.json\": 591,\n\t\"./zh/broker.json\": 592,\n\t\"./zh/dip-history.json\": 593,\n\t\"./zh/footer.json\": 594,\n\t\"./zh/governance.json\": 595,\n\t\"./zh/header.json\": 596,\n\t\"./zh/home.json\": 597,\n\t\"./zh/lite.json\": 598,\n\t\"./zh/mining.json\": 599,\n\t\"./zh/mobile-lite.json\": 600,\n\t\"./zh/pro.json\": 601,\n\t\"./zh/team.json\": 602\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 563;","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\n\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  }\r\n  if(isMobile){\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport WebSocket from \"socket.io-client\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n\r\n  initWebSocket(){\r\n    if(this.ws === null) {\r\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \r\n        transports: ['websocket'],\r\n        withCredentials: true\r\n      })\r\n      this.ws.on('connect',() => {\r\n        if(this.already){\r\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n          console.log('ws is reconnected already')\r\n        }\r\n        console.log('ws is already connected');\r\n      });\r\n    }    \r\n  }\r\n\r\n\r\n  load(symbol,timeType = 'min'){\r\n    // symbol = symbol+'_V2'\r\n    this.initWebSocket()\r\n    this.ws.on('kline_update',data => {\r\n      const obj = {}\r\n      let time = data.time\r\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\r\n        obj.time = time \r\n        obj.low = Number(data.low)\r\n        obj.high = Number(data.high)\r\n        obj.open = Number(data.open)\r\n        obj.close = Number(data.close)\r\n        obj.volume = Number(data.volume)\r\n        obj.time_type = data.time_type\r\n        obj.symbol = data.symbol\r\n        if(!this.paused) {\r\n          this.setIndex(obj.close)\r\n          for(const key of Object.keys(this.listeners)){\r\n            if(typeof this.listeners[key] === 'function'){\r\n              this.listeners[key](obj)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol);\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  unsubscribeBars(symbol){\r\n    if(this.ws){\r\n      this.ws.emit('un_get_kline_update', {\r\n        symbol : symbol, 'time_type' : 'min'\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //暂不用\r\n  loadHistory(symbol,timeType,callback){\r\n    this.ws.on('kline_history', data => {\r\n      const history = data.map(el => {\r\n        return {\r\n          time: el.time,\r\n          low: Number(el.low),\r\n          high: Number(el.high),\r\n          open: Number(el.open),\r\n          close: Number(el.close),\r\n          volume: Number(el.volume)\r\n        }\r\n      })\r\n      if(callback){\r\n        console.log('history ->',history[history.length-1].time)\r\n        callback(history)\r\n      }\r\n    })\r\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\r\n  }\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\r\n\r\nexport default class Position {\r\n\r\n  callback = () => {}\r\n   wallet = null;\r\n   spec = null\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      // const fundingFee = await getFun\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n\r\n   \r\n\r\n\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:'BUSD',\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    minInitialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\r\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config){\r\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,version,finishedCallback){    \r\n    const all = await this.configInfo.load(version);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      const symbol = getFormatSymbol(config.symbol)\r\n      this.oracle.unsubscribeBars(symbol);\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      this.oracle.load(symbol)\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\r\n        this.contractInfo.load(wallet,config),\r\n        this.loadFundingRate(wallet,config),\r\n        this.historyInfo.load(wallet,config)\r\n      ]).then(results => {\r\n        if(results.length === 4){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    this.configs = configs\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\r\n      this.setVolume(volume.toFixed(0))\r\n    }\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    \r\n    return ''\r\n  }\r\n\r\n\r\n\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}