{"version":3,"sources":["model/Intl.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/WebSocket.js","components/hoc/withModal.js","model/Type.js","model/Version.js","lib/web3js/shared/utils/convert.js","utils/utils.js","model/Config.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/config/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/adapter.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js"],"names":["cache","r","require","keys","forEach","key","path","split","lang","page","toLowerCase","test","pageName","constructor","locale","makeObservable","this","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","Object","supportedCatalog","includes","storeLocale","get","label","substr","toUpperCase","LoadingPage","React","Component","componentWillMount","NProgress","start","componentWillUnmount","done","render","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","socket","io","transports","withCredentials","events","on","console","log","event","emit","subscribe","params","onMessage","listener","data","time_type","equalIgnoreCase","symbol","findEvent","push","findIndex","item","unsubscribe","pos","splice","withModal","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","WithModal","props","super","state","modalIsOpen","className","overlayMerged","assign","mergedStyle","isOpen","style","portalClassName","intl","onClose","inject","observer","current","makeAutoObservable","setCurrent","isOption","isFuture","type","Version","isV1","isV2","isV2Lite","version","BigNumber","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","bg","value","base","times","repeat","div","max","value1","value2","gte","min","lte","fromWei","unit","Web3","utils","toChecksumAddress","hexToString","hexToUtf8","hexToNumber","hexToNumberString","deriToNatural","naturalToDeri","toFixed","deriToString","toString","deriToBool","toNumber","naturalWithPercentage","sd","formatBN","bigNumber","toFormat","replaceAll","numberToHex","isBrowser","window","isJsDom","userAgent","isEqualSet","set1","set2","size","has","intRegex","deleteIndexedKey","obj","length","reduce","acc","k","newObj","fromWeiForObject","keyList","i","toNumberForObject","sortOptionSymbols","symbolList","symbolArr","map","s","unique","index","self","indexOf","to2","filter","direction","price","sort","a","b","parseInt","index1","index2","index3","DeriEnv","chainInfo","formatAddress","address","formatBalance","balance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","Number","isNaN","Math","abs","storeConfig","sessionStorage","setItem","JSON","stringify","getConfigFromStore","parse","getItem","storeChain","hasParam","param","urlString","location","href","url","URL","searchParams","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","to","timestamp","Date","getTime","floor","groupByNetwork","pools","all","total","pool","find","list","poolInfo","network","formatAdd","chainId","airdrop","bTokenSymbol","bTokenId","symbolId","combineSymbolfromPoolConfig","configs","mapPoolInfo","wallet","name","buttonText","multiplier","Config","setAll","isOptions","openConfigListCache","update","getContractAddressConfig","c","cur","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","resolve","module","exports","data-title","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","top","MaskWrapper","isDesktop","setIsDesktop","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","supportWeb3","ethereum","isConnected","account","approve","async","unlock","connect","res","connectWallet","Promise","reject","success","loadWalletBalance","switchNetwork","request","method","error","metamask","addError","getUserWalletBalance","catch","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","isUnlocked","refresh","isSupportChain","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","load","webSocket","close","unsubscribeBars","setSymbol","setTimeType","addListener","resume","setPause","pause","clean","Position","callback","callbackALL","spec","counter","mockPositionInfo","averageEntryPrice","liquidationPrice","margin","marginHeld","marginHeldBySymbol","unrealizedPnl","volume","premiumFundingAccrued","deltaFundingAccrued","strikePrice","timePrice","volatility","isCall","getPositionInfo","getPositionInfos","positions","balanceContract","plus","started","runInAction","loadAll","startedAll","timer","setTimeout","Contract","info","fundingRateCoefficient","deltaFundingCoefficient","minInitialMarginRatio","initialMarginRatio","minMaintenanceMarginRatio","maintenanceMarginRatio","feeRatio","underlier","strike","optionType","bTokenSymbolDisplay","getSpecification","getUnderlierStrike","setInfo","History","getTradeHistory","Trading","slideIncrementMargin","contract","fundingRate","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","amount","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","configInfo","oracle","positionInfo","contractInfo","historyInfo","finishedCallback","Type","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","store","symbolChanged","syncFundingRate","loadFundingRate","then","results","finally","startAll","priceCache","clear","fromStore","getFromStore","setPaused","groupConfigBySymbol","increment","MarginRatio","slice","substring","currentSymbolMarginHeld","otherMarginHeld","minus","contractValue","incrementMarginHeld","totalMarginHeld","lt","dynBalance","gt","available","exchanged","multipliedBy","totalContractValue","curContractValue","leverage","afterLeverage","getFundingRate","fundingRatePerBlock","Intl","premiumFundingPerSecond","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","feeRatioITM","feeRatioOTM","tradersNetVolume","isLoading","setIsLoading","loaded","trading","set","ReactDOM","StrictMode","_deriEnv","VERSIONS","ALL_EXCEPT_OPEN_VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","MAX_UINT256","MAX_INT256","getJsonConfig","jsonConfig","normalizeChainId","chainIds","normalizeAddress","startsWith","validateArgs","args","every","parseFloat","validateObjectKeyExist","val","valName","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","bToken","pToken","lToken","dToken","MiningVault","initialBlock","retired","getLpConfigList","isLp","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","poolAddress","p","bTokenAddress","lTokenAddress","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","deepClone","clone","from","getBlockNumber","blockNumber","duration","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","now","eth","err","getLatestRPCServer","urls","newUrls","random","shuffleArray","promises","blockNumbers","latestBlockNumber","getChainProviderUrl","provider_urls","getChainProviderUrls","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","getNetworkName","poolNetwork","delay","ms","web3Factory","web3InstanceMap","pending","walletChainId","retry","providerUrl","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","eventName","fromBlock","toBlock","es","getHttpBase","fetchJson","fetch","resp","json","fetchRestApi","opts","catchApiError","func","methodName","defaultValue","catchTxApiError","result","transaction","message","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","getVolatilitySymbols","symbols","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","mapToBTokenInternal","normalizeSymbolUnit","re","RegExp","join","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","v2_lite_open","option","poolValidator","MAX_GAS_AMOUNT","ContractBase","contractAddress","contractAbi","_init","methods","call","accountAddress","gas","estimateGas","tx","_transactionReceipt","getTransactionReceipt","receipt","status","errorMessage","_estimatedGas","txRaw","encodeABI","_getTransactionReceipt","CONTRACT_ABI","DatabaseContract","keyArray","_call","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","getOracleConfig","filteredByChainId","getOracleConfigList","getPriceInfoForV1","baseUrl","addSymbolParam","mode","ok","priceInfo","getOracleUrl","getPriceFromRest","getPriceInfo","getOracleInfosFromRest","headers","Accept","body","getPriceInfos","oraclePricesCache","getOraclePrice","oracleFactory","decimal","getPrice","getOraclePrice2","oracleAddress","wrappedOracleFactory","getOraclePriceFromCache2","getOracleVolatilitiesForOption","oracleSymbols","os","volatilities","checkOffChainOracleSymbol","symbolOracleOffChainFactory","signer","signatory","wooOracleAddresses","instanceMap","RestOracle","wooOracleFactory","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","databaseActivityFactory","databaseDeriVoteFactory","databaseWormholeFactory","getDBWormholeAddress","databaseAirdropFactory","getDBAirdropAddress","bTokenFactory","decimals","_balanceOf","allowance","_transact","deriFactory","wormholeFactory","toChainId","toWormholeAddress","fromChainId","fromWormhole","fromNonce","v","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","brokerAddress","pTokenAirdropFactory","handleChainChanged","handleAccountChanged","accounts","reload","walletAddress","getBalance","getUserInfo","userAddress","db","getValues","deadline","nonce","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","getMiningVaultConfig","miningVault","freeze","wormhole","mintDeri","unlockDeri","mintAirdrop","filteredConfig","MiningVaultRouter","getMiningVaultRouterConfig","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","cost","lastCumulativeFundingRate","perpetualPoolFactory","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","discount","cumulativePnl","cumulativeFundingRate","tradersNetCost","getStorageAt","_calculateFee","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getBrokerConfig","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateLiquidationPrice","tmp","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","liquidityUsed","stateValues","getStateValues","parameters","args1","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getLpLiquidityInfo","bTokenBalance","shares","getLiquidity","poolLiquidity","getSlpLiquidityInfo","totalSupply","maxRemovableShares","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","unlockLp","unlockSlp","unlockClp","unlockClp2","addLpLiquidity","addLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","getPoolV2LiteManagerConfig","prod","dev","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","PTokenLite","tokenId","owner","operator","PerpetualPoolLite","updateAddresses","getActiveSymbolIds","symbolIds","getSymbol","block_number","getBTokenSymbol","getSymbols","getPoolExtraInfo","extraInfo","perpetualPoolLiteFactory","perpetualPoolLiteManagerFactory","poolId","pairedTokenAddress","chainlinkFeedFactory","trim","oracleFactoryChainlinkFactory","getPoolOpenConfigList","openPoolChainIds","poolManagerAddress","poolManager","poolNums","getNumPools","numsArray","addresses","getConfig","getPoolOpenOracleList","oracleFactoryConfig","eventBlock","oracles","number","returnValues","isPoolController","controller","perpetualPoolLite","poolController","getPoolAcitveSymbolIds","init","oldData","updatedAt","expandPoolConfigV2","bTokens","router","flat","expandPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","expandPoolConfigOption","pricer","volatilitySymbols","expandPoolConfigV2LiteOpen","getPoolConfigList","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","_getPoolConfig","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","getBrokerConfigList","fundingRateCache","resourceMap","resource","_accountAddress","_price","_interval","setInterval","_update","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","maxWithdrawMargin","held","calculateMaxWithdrawMargin","tradeWithMargin","newVolume","orderValidation","minMargin","poolMaxVolume","negated","isOrderValid","closePosition","processTradeEvent","txHash","tradeVolume","timeStamp","_getTimeStamp","time","transactionFee","notional","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","unshift","getTradeHistory2","tradeFromBlock","liquidateFromBlock","tradeHistory","tradeHistoryBlock","liquidateHistoryBlock","tradeHistoryOnline","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","fundingRate0","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","isPoolMarginRatioValid","userLiquidity","totalCost","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","perpetualPoolRouter","validation","_prices","liquidatePriceCache","_cache","symbolInfo","bTokenDiscounts","bTokenMultiplier","indexConstituents","symbolConfigList","margins","latestPrice","getLastUpdatedBlockNumber","getPosition","getMargins","getPositions","symbolPrices","unrealizedPnlList","fundingFee","idx","getEstimatedLiquidatePrice","_getFundingRate","promiseList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","ids","prices","volumes","lTokenLiteAbi","pTokenLiteFactory","lTokenLiteFactory","activeSymbolIds","offChainOracleSymbolIds","activeSymbolNames","offChainOracleSymbols","_getSymbolPrices","_getLiquidityInfo","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","onChainSymbolPrices","_symbol","f","offChainSymbolPrices","shift","symbolIndex","getLastUpdateBlock","getMargin","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","newIntrinsicValue","newTimeValue","newDelta","fundingPeriod","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","poolState","symbolState","traderState","positionState","normalizedSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionViewerFactory","oraclePrices","oracleVolatilities","lTokenOptionFactory","pTokenOptionFactory","lastCumulativePremiumFundingRate","volatilitiesCache","EverlastingOption","viewerAddress","viewer","Set","activeSymbols","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPricerAbi","everlastingOptionFactory","optionPricerFactory","optionPool","symbolInfo2","poolInfo2","symbolName","getTraderStates","volPrice","markPrice","dpmmPrice","oS","fundingAccrued","volPrices","liquidationPrices","oSymbol","getLiquidationPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","fee","intrinsicValue","premiumFunding0","getEstimatedTimePrice","theoreticalPrice","queryTradePMM","tradeCost","indexPrice","getEverlastingTimeValueAndDelta","pricerAddress","tr","createPool","newParameters","addSymbol","createOracle","feedAddress","feedContract","getPTokenAirdropConfig","contractFactory","pTokenAirdropNULSAbi","deriVoteAbi","PTokenAirdropNULSFactory","deriVoteFactory","votingId","voter","votingOption","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isBTokenUnlocked","hasRequiredBalance","unlockBToken","keyPrefix","getStakingTop10Users","n","fill","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getVotingResult","getUserVotingPower","getUserVotingResult","votingPower","vote","getDeriVoteConfig","deriVote","voteId","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosPosition","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2"],"mappings":"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","file":"static/js/main.4cd72f37.chunk.js","sourcesContent":["import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.socket.on('connect', () => {\n      console.log('connect')\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = 'v2';\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n}\nexport default new Version()","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\nconst intRegex = /^\\d+$/\n\n// == contract gen\nexport const deleteIndexedKey = (obj) => {\n  if (isObject(obj) && Object.keys(obj).length > 0) {\n    const keys = Object.keys(obj);\n    const intKeyCount = keys.reduce(\n      (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\n      0\n    );\n    if (intKeyCount * 2 === keys.length) {\n      let newObj = {};\n      Object.keys(obj).forEach((k) => {\n        if (!intRegex.test(k)) {\n          newObj[k] = obj[k];\n        }\n      });\n      return newObj;\n    }\n    return obj;\n  } else {\n    return obj;\n  }\n};\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/indexV2'\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function convertToInternationalCurrencySystem (labelValue) {\n  \n  // Nine Zeroes for Billions\n  return Number.isNaN(labelValue) ? ''\n  : Math.abs(Number(labelValue)) >= 1.0e+9\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n  // Six Zeroes for Millions \n  : Math.abs(Number(labelValue)) >= 1.0e+6\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n  // Three Zeroes for Thousands\n  : Math.abs(Number(labelValue)) >= 1.0e+3\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n\n  : Math.abs(Number(labelValue).toFixed(2));\n\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n  }\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    // liquidity : liqPool.liquidity,\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : 1\n  }\n  // if(wallet && wallet.isConnected()){\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\n  //   if(info){\n  //     item['pnl'] = info.pnl\n  //   }\n  //   if(claimInfo){\n  //     item['claimed'] = claimInfo.total;\n  //     item['unclaimed'] = claimInfo.amount\n  //   }\n  // }\n\n  return Object.assign(config,item)\n}\n\n\n\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  async load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    if(current === 'v2_lite_open'){\n       await openConfigListCache.update()\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","var map = {\n\t\"./de/Signin.json\": 537,\n\t\"./de/bridge.json\": 538,\n\t\"./de/broker.json\": 539,\n\t\"./de/dip-history-two.json\": 540,\n\t\"./de/dip-history.json\": 541,\n\t\"./de/dip-two.json\": 542,\n\t\"./de/footer.json\": 543,\n\t\"./de/governance.json\": 544,\n\t\"./de/header.json\": 545,\n\t\"./de/home.json\": 546,\n\t\"./de/lite.json\": 547,\n\t\"./de/mining.json\": 548,\n\t\"./de/mobile-lite.json\": 549,\n\t\"./de/nuls.json\": 550,\n\t\"./de/permission.json\": 551,\n\t\"./de/pro.json\": 552,\n\t\"./de/team.json\": 553,\n\t\"./de/trading-mining.json\": 554,\n\t\"./en/Signin.json\": 555,\n\t\"./en/bridge.json\": 556,\n\t\"./en/broker.json\": 557,\n\t\"./en/dip-history-two.json\": 558,\n\t\"./en/dip-history.json\": 559,\n\t\"./en/dip-two.json\": 560,\n\t\"./en/footer.json\": 561,\n\t\"./en/governance.json\": 562,\n\t\"./en/header.json\": 563,\n\t\"./en/home.json\": 564,\n\t\"./en/lite.json\": 565,\n\t\"./en/mining.json\": 566,\n\t\"./en/mobile-lite.json\": 567,\n\t\"./en/nuls.json\": 568,\n\t\"./en/permission.json\": 569,\n\t\"./en/pro.json\": 570,\n\t\"./en/team.json\": 571,\n\t\"./en/trading-mining.json\": 572,\n\t\"./fr/Signin.json\": 573,\n\t\"./fr/bridge.json\": 574,\n\t\"./fr/broker.json\": 575,\n\t\"./fr/dip-history-two.json\": 576,\n\t\"./fr/dip-history.json\": 577,\n\t\"./fr/dip-two.json\": 578,\n\t\"./fr/footer.json\": 579,\n\t\"./fr/governance.json\": 580,\n\t\"./fr/header.json\": 581,\n\t\"./fr/home.json\": 582,\n\t\"./fr/lite.json\": 583,\n\t\"./fr/mining.json\": 584,\n\t\"./fr/mobile-lite.json\": 585,\n\t\"./fr/nuls.json\": 586,\n\t\"./fr/permission.json\": 587,\n\t\"./fr/pro.json\": 588,\n\t\"./fr/team.json\": 589,\n\t\"./fr/trading-mining.json\": 590,\n\t\"./zh/Signin.json\": 591,\n\t\"./zh/bridge.json\": 592,\n\t\"./zh/broker.json\": 593,\n\t\"./zh/dip-history-two.json\": 594,\n\t\"./zh/dip-history.json\": 595,\n\t\"./zh/dip-two.json\": 596,\n\t\"./zh/footer.json\": 597,\n\t\"./zh/governance.json\": 598,\n\t\"./zh/header.json\": 599,\n\t\"./zh/home.json\": 600,\n\t\"./zh/lite.json\": 601,\n\t\"./zh/mining.json\": 602,\n\t\"./zh/mobile-lite.json\": 603,\n\t\"./zh/nuls.json\": 604,\n\t\"./zh/permission.json\": 605,\n\t\"./zh/pro.json\": 606,\n\t\"./zh/team.json\": 607,\n\t\"./zh/trading-mining.json\": 608\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 536;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\nconst getIsDesktop = () => window.screen.width > 1024;\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const catagory = isOption ? 'option' : 'future'\n  type.setCurrent(catagory)\n\n  // useEffect(() => {\n  //   const onResize = () => {\n  //     if(getIsDesktop() !== isDesktop){\n  //       window.location.reload()\n  //     }\n  //   }\n  //   window.addEventListener(\"resize\", onResize);\n  //   return () => window.removeEventListener(\"resize\", onResize)\n  // },[]);\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  } else {\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n        this.setIndex(data.close)\n        for(const key of Object.keys(this.listeners)){\n          if(typeof this.listeners[key] === 'function'){\n            this.listeners[key](data)\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol)\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\nimport { eqInNumber } from '../utils/utils';\nimport type from \"./Type\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback){\n     this.wallet= wallet; \n     this.spec = spec\n     if(callback){\n      this.callback = callback\n     }\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback){\n    this.wallet= wallet; \n    this.spec = spec\n    if(callback){\n     this.callbackALL = callback\n    }\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      let positions = [] \n      if(res.length) {\n        positions = res.map(item => {\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n          return item\n        })\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   }\n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.started = false;\n     this.startedAll = false;\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = this.getUnderlierStrike(spec).underlier\n        spec.strike = this.getUnderlierStrike(spec).strike\n        spec.optionType = this.getUnderlierStrike(spec).optionType\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  getUnderlierStrike(spec){\n    let underlier = spec.symbol.split('-')[0]\n    let strike = spec.symbol.split('-')[1]\n    let optionType = spec.symbol.split('-')[2]\n    return {\n      underlier:underlier,\n      strike:strike,\n      optionType:optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      positions : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setOptionConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setPositions : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      optionFundingRateTip : computed,\n      initialMarginRatioTip : computed,\n      maintenanceMarginRatioTip : computed,\n      TransactionFeeTip : computed,\n      multiplierTip : computed,\n      TotalNetPositionTip:computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,finishedCallback){  \n    const isOption = Type.isOption\n    const all = await this.configInfo.load(version,isOption);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version,isOption);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback,isOption){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback,isOption)\n  }\n\n  async onChange(config,changed,finishedCallback,isOption){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    } else{\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\n     //切换指数\n    if(symbolChanged && config){\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,(position) => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet,config,isOption)\n        }),\n        this.contractInfo.load(wallet,config,isOption),\n        this.loadFundingRate(wallet,config,isOption),\n        this.historyInfo.load(wallet,config,isOption),\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\n      ]).then(results => {\n        if(results.length === 5){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n          // this.refreshCache();\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        this.oracle.load(getFormatSymbol(config.symbol))\n        this.positionInfo.start()\n        this.positionInfo.startAll();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache(){\n    const {pool} = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool,symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n \n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    this.positionInfo.load(this.wallet,this.config, position  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    type.isOption && this.positionInfo.loadAll(this.wallet,this.config,positions => this.setPositions(positions))\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.positionInfo.start();\n    this.positionInfo.startAll();\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    if(type.isOption){\n      this.setOptionConfigs(configs)\n    } \n    this.configs = configs\n  }\n\n  setOptionConfigs(configs){\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\n  }\n\n  groupConfigBySymbol(configs = []){\n    return configs.reduce((total,config) => {\n      const symbol = config.symbol.split('-')[0]\n      if(!total[symbol]){\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    },[])\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setPositions(positions){\n    if(positions){\n      this.positions = positions\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      // if(type.isOption){\n        volume = +volume * +this.contract.multiplier\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length \n        let value = volume.toString()\n        if(value.indexOf(\".\") !== '-1'){\n          value = value.substring(0,value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      // }else{\n      //   this.setVolume(volume.toFixed(0))\n      // }\n    }\n  }\n\n  clean(){\n    this.oracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    this.configs = [] \n    this.config = null;\n    this.index = ''\n    this.volume = ''\n    this.fundingRate = {}\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    this.userSelectedDirection = 'long'\n    this.optionsConfigs = {}\n  }\n\n  get volumeDisplay(){\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    let optionVolume = (+initVolume / +this.contract.multiplier);\n    const volume = optionVolume\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = (+totalVolume) * price \n    const curContractValue = (+this.volumeDisplay) * price\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1); \n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage,\n      afterLeverage : afterLeverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config,isOption){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip(){\n    if(this.contract && this.contract.initialMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip(){\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip(){\n    if(this.contract && this.config){\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip(){\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n  get TotalNetPositionTip(){\n    if(this.contract && this.fundingRate.tradersNetVolume && this.config){\n        return `${Intl.get('lite','notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.config.unit}`\n    }\n    return ''\n  }\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","// versions\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\nexport const ALL_EXCEPT_OPEN_VERSIONS = ['v2', 'v2_lite', 'option']\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\n\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        //'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        //'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { VERSIONS } from './version';\n\nexport const getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n        isLp: true,\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n        isLp: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","\nconst paddingDate = (date) => {\n  date = date.toString()\n  if (date.length === 1) {\n    return '0' + date\n  } else {\n    return date\n  }\n}\nexport const getEpochTimeRange = (time) => {\n  //console.log('1', time.getTime()/1000)\n  const year = time.getUTCFullYear()\n  const month = time.getUTCMonth()\n  const day = time.getUTCDate()\n  let epochs = []\n  for (let i = 0; i< 3; i++) {\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\n    //console.log(newDate.getTime()/1000)\n    epochs.push(newDate)\n  }\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\n  let index = -1\n  for (let i = 0; i< epochs.length; i++) {\n    //console.log(i, epochs[i].getTime()/1000)\n    if (time.getTime() < epochs[i].getTime()) {\n      index = i\n      break\n    }\n  }\n  if (index !== -1) {\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\n  }\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\n}","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  // pick 2 random urls\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  let walletChainId = null\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        //console.log('hit web3 cache')\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        //console.log('new ethereum web3 cache')\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          // wait for init\n          let retry = 8\n          while (retry > 0) {\n            await delay(500)\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\n              // console.log('hit web3 cache')\n              return web3InstanceMap[chainId];\n            } else {\n              retry -= 1\n            }\n          }\n          // timeout\n          const providerUrl = await getChainProviderUrl(chainId);\n          //console.log('new web3 cache')\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          // first init\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            //console.log('new web3 cache')\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n          } catch(err) {\n            console.log(err.toString())\n          } finally {\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import {\n  getRestServerConfig,\n  DeriEnv,\n} from '../config'\n// import fetch from 'node-fetch'\n\n// get REST HTTP Base url\nexport const getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}: `, err.toString())\n    //console.log(`${methodName}: `, err)\n  }\n  return defaultValue\n}\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err.message};\n  }\n  return res;\n};\n\n","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n  console.log(`symbol(${symbol}) is not a string type`);\n  return symbol;\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validateConfigV2LiteOpen = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2LiteOpen = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      // 'pricer',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  v2_lite_open: processConfigV2LiteOpen,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  v2_lite_open: validateConfigV2LiteOpen,\n  option: validatePoolOption,\n};","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getJsonConfig(version, env || DeriEnv.get())\n  return config.oracle\n};\n\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory, symbolOracleOffChainFactory, wrappedOracleFactory } from '../factory/oracle';\nimport { deriToNatural } from './convert';\nimport {\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data\n        }\n      }\n    } catch(err) {\n      //console.log(err.toString())\n      retry -= 1;\n    }\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\n  let url = getOracleUrl(null, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: \"cors\",\n        cache: \"no-cache\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {}\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\n  }\n};\n\n// cache\n// export const getOraclePriceFromCache = (function () {\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\n//   let cache = {};\n//   return {\n//     async get(chainId, symbol = '_', version = 'v2') {\n//       const key = `${chainId}_${symbol}_${version}`\n//       if (\n//         Object.keys(cache).includes(key) &&\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n//       ) {\n//         return cache[key].data;\n//       } else {\n//         const data = await getOraclePrice(chainId, symbol, version);\n//         cache[key] = {\n//           data,\n//           timestamp: Math.floor(Date.now() / 1000),\n//         };\n//         return cache[key].data;\n//       }\n//     },\n//   };\n// })();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const oraclePricesCache = (function(){\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=[]) {\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(version, chainId, symbol);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  if (oracleAddress !== '') {\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache2 = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\n      const key = `${chainId}_${symbol}_${oracleAddress}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\n// export const getOraclePriceForOption = async (chainId, symbol) => {\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n// };\n\n// for viewer use\n// export const getOraclePricesForOption = async (chainId, symbols) => {\n//   const oracleSymbols = symbols\n//     .map((i) => normalizeOptionSymbol(i))\n//     .filter((value, index, self) => self.indexOf(value) === index);\n//   const oracleSymbolPrices = await Promise.all(\n//     oracleSymbols.reduce(\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n//       []\n//     )\n//   );\n//   return symbols.map((s) => {\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n//   });\n// };\n\n// // for tx use\n// export const getOracleVolatilityForOption = async (symbols) => {\n//   const volSymbols = getVolatilitySymbols(symbols)\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n//   const volatilities = await Promise.all(\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n//   );\n//   //return volatilities;\n//   return symbols.map((s) => {\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n//   });\n// };\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\n  return symbols.map((s) => {\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\n  });\n};\n\n// check symbol is used offchain oracle\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await symbolOracleOffChainFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await symbolOracleOffChainFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return \"\"\n};","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\nimport { WooOracle } from '../contract/oracle/woo_oracle';\n\nconst wooOracleAddresses = [\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\n]\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (wooOracleAddresses.includes(address)) {\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\nexport const wooOracleFactory = factory(WooOracle);\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\n","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    // console.log('hit wrapped oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    //console.log('hit woo oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { ContractBase } from \"../contract_base\";\nimport { symbolOracleOffChainAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class SymbolOracleOffChain extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, symbolOracleOffChainAbi);\n  }\n  async getPrice() {\n    const res = await this._call('getPrice', []);\n    return deriToNatural(res);\n  }\n  async signer() {\n    await this._init();\n    const res = await this.contract.methods['signer']().call();\n    return res;\n  }\n  async signatory() {\n    await this._init();\n    const res = await this.contract.methods['signatory']().call();\n    return res;\n  }\n}","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseDeriVoteFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\n\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n    getUserInfo(userAddress),\n    getUserInfoHarvest(userAddress),\n    getUserInfoTotal(userAddress),\n  ]);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getPoolLiquidityAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory();\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\n        ]);\n      } else {\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\n      }\n    }, []);\n    try {\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\nexport const getPoolInfoApyAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory(true);\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      const poolNetwork = getNetworkName(pool.chainId.toString());\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\n      } else {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\n      }\n    }, []);\n    try {\n      console.log('keys', keys)\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import { DeriEnv } from \"../shared/config/env\";\nimport { normalizeChainId } from \"../shared/utils/validate\";\n\nexport const openPoolChainIds = () => {\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n  }\n  const env = DeriEnv.get()\n  if (Array.isArray(configs[env])) {\n    return configs[env]\n  } else {\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\n  }\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\n        initialBlock: '11017943',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\n        initialBlock: '12440610',\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","export const OracleFactoryChainlinkAdapter = (klass) => {\n  //klass = processMethod(klass, 'symbol')\n  return klass;\n};\n\nexport const OracleFactoryOffChainAdapter = (klass) => {\n  //klass = processMethod(klass, 'symbol')\n  return klass;\n};\n\n","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/convert.js'\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\n\nexport class OracleFactoryChainlink extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getFeed(symbol) {\n    const res = await this._call('getFeed', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol) {\n    return await this._transact('createOracle', [symbol], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryOffChainAbi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateVolatilityOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/convert'\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\n\nexport class OracleFactoryOffChain extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getVolatilityOracle(symbol) {\n    const res = await this._call('getVolatilityOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import {\n  bTokenFactory,\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n} from '../../shared';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    await this._init();\n    if (!this.pTokenAddress|| !this.pToken ) {\n      await  this.updateAddresses()\n      // console.log(this.addresses, this.parameters)\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n\n    }\n  }\n\n\n  async updateAddresses() {\n    if (!this.bTokenAddress || !this.pTokenAddress) {\n     const res = await this._call('getAddresses');\n    // update this state\n     this.bTokenAddress = res.bTokenAddress;\n     this.lTokenAddress= res.lTokenAddress;\n     this.pTokenAddress= res.pTokenAddress;\n    }\n  }\n\n  async controller() {\n    const res = await this._call('controller');\n    return res\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses()\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols\n  }\n  async getBTokenSymbol() {\n    await this.updateAddresses()\n    if (!this.bToken) {\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol()\n    return this.bTokenSymbol\n  }\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\n    const res = await fetchJson(url)\n    //console.log(res)\n    if (res.success) {\n      return res.data\n    } else {\n\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\n      return  {\n        block_number: '1000000000',\n        version: '',\n      }\n    }\n  }\n  async getConfig() {\n    const [bToken, symbols, extraInfo] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n    ])\n    return {\n      pool: this.contractAddress,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock:extraInfo.block_number,\n      version:extraInfo.version,\n      chainId: this.chainId,\n    }\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress)\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\nimport { ChainlinkFeed } from './contract/chainlink_feed'\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\n\n\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { chainlinkFeedAbi } from './abis';\n\nexport class ChainlinkFeed extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, chainlinkFeedAbi);\n  }\n  async symbol() {\n    const res = await this._call('description');\n    return res.split('/').map((s) => s.trim()).join('')\n  }\n}\n","import { catchApiError } from \"../../shared/utils/api\"\nimport { DeriEnv } from \"../../shared/config/env\"\nimport { getJsonConfig } from \"../../shared/config/config\"\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\n\nexport const getPoolOpenConfigList = async (...args) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds()\n      configs = await chainIds.reduce(async (acc, chainId) => {\n        //console.log('chainId', chainId)\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\n          chainId\n        );\n        const poolManager = perpetualPoolLiteManagerFactory(\n          chainId,\n          poolManagerAddress\n        );\n        // get pool numbers\n        const poolNums = parseInt(await poolManager.getNumPools());\n        const numsArray = [...Array(poolNums).keys()];\n        // get pool addresses\n        const addresses = await Promise.all(\n          numsArray.reduce(\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\n            []\n          )\n        );\n        // get pools config\n        const res = await Promise.all(\n          addresses.reduce(\n            (acc, address) =>\n              acc.concat([\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\n              ]),\n            []\n          )\n        );\n        return acc.concat(res);\n      }, []);\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\n    },\n    args,\n    'getPoolOpenConfigList',\n    []\n  );\n};\n\nexport const getPoolOpenOracleList = async(...args) => {\n  return catchApiError(\n    async (chainId, accountAddress) => {\n    chainId = normalizeChainId(chainId)\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n    const oracleFactory = oracleFactoryChainlinkFactory(\n      chainId,\n      oracleFactoryConfig.address\n    );\n    await oracleFactory._init()\n    let eventBlock, oracles= [];\n    const res = await fetchJson(\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\n    );\n    if (res && res.success) {\n      eventBlock = parseInt(res.data.eventBlock);\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\n        oracles = res.data.oracles;\n      }\n      if (eventBlock === 0) {\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\n      }\n      const toBlock = await getBlockInfo(chainId, 'latest');\n      // fetch online\n      let events = await getPastEvents(\n        chainId,\n        oracleFactory.contract,\n        'CreateOracle',\n        {},\n        eventBlock,\n        toBlock.number\n      );\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          const event = events[i];\n          const info = event.returnValues;\n          oracles.push({\n            chainId,\n            symbol: info.symbol,\n            address: info.oracle,\n            blockNumber: event.blockNumber,\n          });\n        }\n        return oracles\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\n          .reduce((acc, i) => {\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\n          }, []);\n      } else {\n        return oracles\n      }\n    } else {\n      return [];\n    }\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    args,\n    'getPoolOpenOracleInfos',\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    'getPoolController',\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    'isPoolController',\n    false\n  );\n};\n\nexport const getExpandedPoolOpenConfigList = async () => {\n  const env = DeriEnv.get()\n  const version = 'v2_lite_open'\n  let config = getJsonConfig(version, env);\n\n  config.pools =  await getPoolOpenConfigList()\n  const pools = config.pools\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  return expandPoolConfigV2LiteOpen(config);\n}\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    'getPoolAllSymbolNames ',\n    []\n  );\n};\n\nexport const getPoolAcitveSymbolIds = async (...args) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      chainId = chainId.toString()\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPoolLite.init()\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\n    },\n    args,\n    'getPoolActiveSymbolIds',\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      const oldData = cache.data\n      try {\n        if (Date.now()/1000 - cache.timestamp >= 10) {\n        //if (Date.now()/1000 - cache.timestamp > 60) {\n          cache.data = await getPoolOpenConfigList()\n          cache.timestamp = Date.now()/1000\n          //res = 'v2 lite open config list is updated'\n        }\n      } catch(err) {\n        console.log(err)\n        cache.data = oldData\n        //res = `v2 lite open config list updating with error: ${err}`\n      }\n      // res && console.log(res)\n      return cache.data\n    },\n    updatedAt() {\n      return cache.timestamp\n    },\n    get() {\n      return cache.data\n    }\n  }\n})()\n","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\nimport { validateObjectKeyExist } from '../utils';\nimport { poolProcessor, poolValidator } from './config_processor';\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\n\nconst expandPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          pricer: pool.pricer,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          version: 'option',\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      if (pool.symbols.length > 0) {\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: pool.bToken,\n            bTokenSymbol: pool.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            offchainSymbolIds: pool.offchainSymbolIds,\n            offchainSymbols: pool.offchainSymbols,\n            unit: symbol.unit,\n            version: 'v2_lite_open',\n            isOpen: true,\n          });\n        }\n      } else {\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: '--',\n          symbolId: '',\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: '',\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  let config = getJsonConfig(version, env);\n\n  if (version === 'v2_lite_open') {\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n      //console.log('hit openConfigListCache')\n    config.pools = openConfigListCache.get()\n    //}\n  }\n\n  //console.log('>',config)\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\n  const config = getConfig(version, env)\n  if (version === 'v2') {\n    return expandPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expandPoolConfigV2Lite(config)\n  } else if (version === 'v2_lite_open') {\n    return expandPoolConfigV2LiteOpen(config)\n  } else if (version === 'option') {\n    return expandPoolConfigOption(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  // check the bToken in v2_lite\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const env = DeriEnv.get()\n  const config = getJsonConfig(version, env)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getJsonConfig(version, DeriEnv.get())\n  if (config.brokerManager) {\n    return config.brokerManager\n  } else {\n    // default value\n    return []\n  }\n};\n\nexport const getBrokerConfig = (version='v2', chainId) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n  deriToNatural,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n  bg,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getPoolV1Config } from '../../shared/config';\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getTradeHistoryOnline,\n} from './trade_history_api';\nimport { perpetualPoolFactory } from '../factory';\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: bTokenSymbol,\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline ] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      )\n    ]);\n    const result = tradeHistoryOnline.concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n      multiplier,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const liquidatePriceCache = (function() {\n  let _cache = {}\n  return {\n    get(address) {\n      if (Object.keys(_cache).includes(address)) {\n        return _cache[address]\n      } else {\n        return {}\n      }\n    },\n    set(address, val) {\n      _cache[address] = val\n    },\n  }\n})()\n","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol)\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  };\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(poolAddress, {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    });\n  return {\n      price: price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\n      //perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      //pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    //\n    // const unrealizedPnlList = symbols.map((s, index) => {\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    // })\n\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n\n    return positions.map((p, index) => {\n      const symbol = symbols[index]\n      const symbolId = symbolIdList[index]\n      const price = symbolPrices[index]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n      const totalCost = positions.reduce((accum, a) => {\n        return accum.plus(bg(a.cost))\n      }, bg(0))\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\n        } else {\n          return accum\n        }\n      }, bg(0))\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume,\n      );\n      return {\n        symbol: symbol.symbol,\n        symbolId: index.toString(),\n        price: symbolPrices[index],\n        volume: bg(p.volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        //unrealizedPnlList,\n        unrealizedPnl: unrealizedPnl.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n        fundingFee: fundingFee.toString()\n      };\n    }).filter((p) => p.volume !== '0')\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  try {\n    let {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    } = liquidatePriceCache.get(poolAddress);\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\n    //console.log(totalCost.toString())\n    return calculateLiquidationPrice(\n      bg(volume).plus(newVolume),\n      margin,\n      totalCost,\n      dynamicCost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString();\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return '';\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    const symbolList = symbols.map((s) => s.symbol)\n    for (let i=0; i< symbols.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    //console.log(symbolPrices)\n\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    //console.log(symbolIdList)\n\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    //console.log(symbols)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = parseInt(i.symbolId)\n          if (i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              //baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\n            const res = ids.map((id) => {\n              return {\n                direction: i.direction.trim(),\n                symbolId: id.toString(),\n                symbol: symbols[id].symbol,\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\n                price: prices[id].toString(),\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            })\n            return res\n            } else {\n              return {\n                direction: i.direction.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                notional: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import {\n  //getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  //isEqualSet,\n  bTokenFactory,\n} from '../../shared';\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\n      !this.offChainOracleSymbolIds\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols\n          .map((s) => s.oracleAddress)\n          .reduce(\n            (acc, o, index) => [\n              ...acc,\n              checkOffChainOracleSymbol(\n                this.chainId,\n                o,\n                this.symbols[index].symbol\n              ),\n            ],\n            []\n          )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const lToken = perpetualPool.lToken\n  // const pToken = perpetualPool.pToken\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  //const symbolIndex = symbolIds.indexOf(symbolId)\n  //const symbols = perpetualPool.symbols\n\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    //perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    //pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { fromWei } from \"../shared\";\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import {\n  calculateEntryPrice ,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\nimport { getSymbolPrices } from '../utils';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const bTokenSymbol = perpetualPool.bTokenSymbol\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n\n    if (symbolIndex > -1) {\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      //const symbol = symbols[symbolIndex].symbol\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        symbolInfo,\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        positionInfo,\n        margin,\n        //latestPrice,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbolInfo;\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      // }\n      //const symbols = await Promise.all(promises);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n      let price;\n      if (symbolIndex === '-1') {\n        price = '0';\n      } else {\n        price = symbolPrices[symbolIndex];\n        priceCache.set(poolAddress, symbolId, price);\n      }\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [\n          s.symbol,\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n            .toString(),\n        ];\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n      const dynamicCost = symbols.reduce((accum, s, index) => {\n        if (index !== symbolIndex) {\n          return accum.plus(\n            bg(positions[index].volume)\n              .times(symbolPrices[index])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n\n      liquidatePriceCache.set(poolAddress, {\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier,\n        minMaintenanceMarginRatio,\n      });\n\n      return {\n        symbol:symbols[symbolIndex].symbol,\n        price,\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee: fundingFee.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\n    }\n  }, args, 'getPositionInfo', {\n      symbol: '',\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        margin,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        //perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        //pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n\n      return positions.map((p, index) => {\n      const symbolId = symbolList[index]\n      const symbol = symbols[index]\n      const price = symbolPrices[index]\n\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbol;\n      priceCache.set(poolAddress, symbolId, price);\n\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(\n            bg(positions[idx].volume)\n              .times(symbolPrices[idx])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price,\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\n          averageEntryPrice: calculateEntryPrice(\n            volume,\n            cost,\n            multiplier\n          ).toString(),\n          margin: margin.toString(),\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          //unrealizedPnlList,\n          fundingFee: fundingFee.toString(),\n          liquidationPrice: calculateLiquidationPrice(\n            volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            multiplier,\n            minMaintenanceMarginRatio\n          ).toString(),\n        };\n      }).filter((p) => p.volume !== '0')\n  }, args, 'getPositionInfos', [])\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  const symbolIndex = symbolIds.indexOf(symbolId)\n\n  let promises = [];\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises);\n\n  if (symbolIndex > -1) {\n    const symbolInfo = symbols[symbolIndex];\n    // const symbol = symbols[symbolIndex].symbol;\n    // const isOffchainOracleSymbol =\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n    // const oracleAddress = isOffchainOracleSymbol\n    //   ? ''\n    //   : symbols[symbolIndex].oracleAddress;\n    const [liquidity, prices] = await Promise.all([\n      perpetualPool.getLiquidity(),\n      getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      ),\n    ]);\n    const price = prices[symbolIndex]\n    priceCache.set(poolAddress, symbolId, price);\n    const {\n      multiplier,\n      fundingRateCoefficient,\n      tradersNetVolume,\n      feeRatio,\n    } = symbolInfo;\n    const { minPoolMarginRatio } = parameterInfo;\n    const fundingRateArgs = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient,\n    ];\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\n\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .times(minPoolMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n\n    const res = {\n      price,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n      liquidity: liquidity.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      fundingRatePerBlock: fundingRatePerBlock,\n      fundingRate: fundingRate,\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    };\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\n    return res;\n  } else {\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\n  }\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    //const symbol = symbols[symbolIndex]\n    let price = priceCache.get(poolAddress, symbolId)\n    //console.log('symbol',symbol)\n\n    if (!price) {\n      // const symbolName = symbol.symbol;\n      // const isOffchainOracleSymbol =\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    if (symbolIndex > -1) {\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      const price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier } = symbols[symbolIndex]\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n    } else {\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\n    }\n\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    // const { bToken: bTokenAddress } = getPoolConfig(\n    //   poolAddress,\n    //   '0',\n    //   null,\n    //   'v2_lite'\n    // );\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n      await perpetualPool.init()\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = perpetualPool.pToken\n      const parameterInfo = perpetualPool.parameters\n      // const symbols = perpetualPool.symbols\n      const symbolIds = perpetualPool.activeSymbolIds\n      const [liquidity, margin] = await Promise.all([\n        //perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        //pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const pToken = perpetualPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbols,\n  symbolIds,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const index = symbolIds.findIndex((s) => s === symbolId)\n  const symbol = symbols[index]\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    symbol.multiplier,\n    symbol.feeRatio,\n  );\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    //volume: volume.toString(),\n    volume: bg(volume).times(symbol.multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const { pTokenAddress } = await perpetualPool.getAddresses()\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\n  const symbolIdList = await pToken.getActiveSymbolIds()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      symbols,\n      symbolIdList,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n    let promises= []\n    for (let i=0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    let symbols = await Promise.all(promises)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          if (i.direction !== 'LIQUIDATION') {\n            const index = symbolIds.indexOf(i.symbolId);\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              //volume: deriToNatural(i.volume).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\n              return ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\n                  price: prices[id].toString(),\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              })\n            } else {\n              // handle missing price data\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                price: '',\n                notional: '',\n                //volume: deriToNatural(i.volume).toString(),\n                volume: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","const invalidValues = [NaN, null, undefined];\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n  let u = Math.sqrt(8 / V / V / T + 1);\n  let timeValue, delta;\n  if (S > K) {\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\n    delta = ((1 - u) * timeValue) / S / 2;\n  } else if (S === K) {\n    timeValue = K / u;\n    delta = 0;\n  } else {\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\n    delta = ((1 + u) * timeValue) / S / 2;\n  }\n  return [timeValue, delta];\n}\n\nfunction getDynamicInitialMarginRatio(\n  spot,\n  strike,\n  isCall,\n  initialMarginRatio,\n  minInitialMarginRatio\n) {\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n    return initialMarginRatio;\n  } else {\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\n    return Math.max(\n      (1 - otmRatio * 3) * initialMarginRatio,\n      minInitialMarginRatio\n    );\n  }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(\n  pool,\n  trader,\n  symbols,\n  positions,\n  newUnderlierPrice\n) {\n  let newDynamicMargin = trader.dynamicMargin;\n  let newInitialMargin = trader.initialMargin;\n\n  for (let i = 0; i < symbols.length; i++) {\n    let symbol = symbols[i];\n    let position = positions[i];\n    if (position.volume === 0) {\n      continue;\n    }\n\n    let newIntrinsicValue = symbol.isCall\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.volatility,\n      pool.fundingPeriod\n    );\n    if (newIntrinsicValue > 0) {\n      newDelta += symbol.isCall ? 1 : -1;\n    }\n    let newPnl =\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\n      position.cost;\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.isCall,\n      pool.initialMarginRatio,\n      0.01\n    );\n\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\n    newInitialMargin =\n      newInitialMargin -\n      Math.abs(\n        position.volume *\n          symbol.spotPrice *\n          symbol.multiplier *\n          symbol.dynamicMarginRatio\n      ) +\n      Math.abs(\n        position.volume *\n          newUnderlierPrice *\n          symbol.multiplier *\n          newDynamicMarginRatio\n      );\n  }\n\n  let newMaintenanceMargin =\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\n\n  if (\n    invalidValues.includes(newMaintenanceMargin) ||\n    invalidValues.includes(newDynamicMargin)\n  ) {\n    throw new Error(\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\n    );\n  }\n  return newMaintenanceMargin > newDynamicMargin;\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n  if (symbols.length != positions.length) {\n    throw new Error(\n      'canLiquidateWithPrice: symbols and positions length not match'\n    );\n  }\n  if (symbols.length === 0) {\n    return {\n      numPositions: positions.length,\n      price1: null,\n      price2: null,\n    };\n  }\n  let head = symbols[0].symbol.slice(0, 6);\n  for (let i = 0; i < symbols.length; i++) {\n    if (!symbols[i].symbol.startsWith(head)) {\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\n    }\n  }\n\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\n    return {\n      numPositions: positions.length,\n      price1: symbols[0].spotPrice,\n      price2: symbols[0].spotPrice,\n    };\n  }\n\n  let final1, final2;\n  let price1, price2;\n  let l1, l2;\n\n  price1 = symbols[0].spotPrice / 10;\n  price2 = symbols[0].spotPrice;\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\n  l2 = false;\n  while (true) {\n    if (l1 && l2) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final1 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  price1 = symbols[0].spotPrice;\n  price2 = symbols[0].spotPrice * 10;\n  l1 = false;\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\n  while (true) {\n    if (l1 && l2) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final2 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  return {\n    numPositions: positions.length,\n    price1: final1,\n    price2: final2,\n  };\n}\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'fundingPeriod',\n      'fundingCoefficient',\n      'marginMultiplier',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'volatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativeFundingRate',\n          'fundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=['BTCUSD']){\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\n// export const volatilityCache = (function() {\n//   const cache = {}\n//   return {\n//     async get(symbol){\n//       const key = symbol\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n//         const timestamp = Math.floor(Date.now()/1000)\n//         const res = await getPriceInfo(symbol, 'option')\n//         const data = deriToNatural(res.volatility).toString()\n//         cache[key] = {\n//           data,\n//           timestamp,\n//         }\n//         //console.log('new key')\n//         return cache[key].data\n//       } else {\n//         return cache[key].data\n//       }\n//     }\n//   }\n// })()\n\n// export const volatilitiesCache2 = async (symbols) => {\n//   return await Promise.all(\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\n//   )\n// }\n","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n      );\n      const symbolVolatilities = (await volatilitiesCache.get(\n        activeSymbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1];\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0]);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n    // return {\n    //   symbolId: res[0],\n    //   symbol: res[1],\n    //   oracleAddress: res[2],\n    //   volatilityAddress: res[3],\n    //   isCall: res[4],\n    //   strikePrice: fromWei(res[5]),\n    //   multiplier: fromWei(res[6]),\n    //   feeRatio: fromWei(res[7]),\n    //   alpha: fromWei(res[8]),\n    //   tradersNetVolume: fromWei(res[9]),\n    //   tradersNetCost: fromWei(res[10]),\n    //   cumulativeFundingRate: fromWei(res[11]),\n    // };\n  }\n  async updateSymbols() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.activeSymbolIds) {\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    }\n    this.activeSymbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, i) => acc.concat([this.getSymbol(i)]),\n        []\n      )\n    );\n    return this.activeSymbols\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let volatilities = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilitiesForOption(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.activeSymbolIds[index],\n          p.timestamp,\n          p.volatility,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(lShares), prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase, fromWei } from '../../shared'\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig()\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import {\n  bg,\n  max,\n  bTokenFactory,\n  catchApiError,\n  getPoolConfig,\n  fromWei,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { url: '', tokens: [] },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolName} = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let symbolVolatilities = []\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(\n            symbols.map((s) => s.symbol)\n          ),\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolName,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      strikePrice: '',\n      timePrice: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      premiumFundingAccrued: '',\n      liquidationPrice: '',\n      volatility: '',\n    }\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let [symbolVolatilities] = await Promise.all([\n        volatilitiesCache.get(\n          symbols.map((s) => s.symbol)\n        ),\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\n      ]);\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const symbolVolatilities = (\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  ).map((v) => v.volatility);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    [],\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = (await volatilitiesCache.get(\n        optionPool.activeSymbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { deriToNatural, naturalToDeri, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson, max } from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId\n  const volatility = info.volatility\n  const index = symbolIdList.indexOf(symbolId)\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\n  const indexPrice = deriToNatural(info.spotPrice)\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res  = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null\n  }\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol, pricer:pricerAddress } = getPoolConfig(poolAddress, undefined, undefined, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const pricer = optionPricerFactory(chainId, pricerAddress)\n  const [toBlock, ] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n\n  let promises= []\n  for (let i=0; i<optionPool.activeSymbolIds.length; i++) {\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i].toString()))\n  }\n  let symbols = await Promise.all(promises)\n  //let symbols = optionPool.activeSymbols\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, optionPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  let result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      bTokenSymbol,\n      optionPool.activeSymbolIds,\n      symbols,\n      pricer,\n    );\n    result.unshift(res);\n  }\n  result = result.filter((tr) => tr !== null)\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig()\n    ]);\n    if (res && res.success) {\n      //console.log('his res', res.data)\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\n          if (index > -1 && i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).div(symbols[index].multiplier).toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          }  else if (i.direction === 'LIQUIDATION') {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              const res = ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .times(symbols[id].multiplier)\n                    .abs()\n                    .toString(),\n                  price: prices[id].toString(),\n                  indexPrice: '',\n                  notional: '',\n                  contractValue: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n              return res;\n            } else {\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                indexPrice: '',\n                notional: '',\n                contractValue: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null\n          }\n        }).flat();\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\n    // fetch tradeHistory on the block with fromBlock from rest api\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\nimport { normalizeChainId } from \"../../shared/utils/validate\";\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\n      chainId = normalizeChainId(chainId)\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\n      const poolManager = perpetualPoolLiteManagerFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\n      // send tx\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\n  }, args)\n}\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId)\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      // process parameters\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\n      // send tx\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\n  }, args)\n}\n\nexport const createOracle = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\n      chainId = normalizeChainId(chainId)\n      feedAddress = toChecksumAddress(feedAddress)\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\n      const symbol = await feedContract.symbol()\n      if (typeof symbol === 'string' && symbol !== '') {\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n        const oracleFactory = oracleFactoryChainlinkFactory(\n          chainId,\n          oracleFactoryConfig.address\n        );\n        // process parameters\n        // send tx\n        return await oracleFactory.createOracle(\n          accountAddress,\n          symbol\n        );\n      } else {\n        throw new Error(\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\n        );\n      }\n  }, args)\n}\n","import { DeriEnv } from \"../shared/config\"\n\nexport const getPTokenAirdropConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getDeriVoteConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '1',\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\n      },\n      {\n        chainId: '56',\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\n      },\n      {\n        chainId: '128',\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\n      },\n      {\n        chainId: '137',\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getDeriVoteConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n","import Web3 from \"web3\";\nimport { bg } from \"../shared/utils\";\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// convert\nexport const toWei = (number, unit = \"ether\") => {\n  return Web3.utils.toWei(number, unit);\n};\n\nexport const fromWei = (number, unit = \"ether\") => {\n  return Web3.utils.fromWei(number, unit);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// adapter\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = bg(fromWei(val[prop])).toString();\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nconst processResult = (val, propList = []) => {\n  if (isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (isObject(val)) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return bg(fromWei(val)).toString();\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pTokenAirdropNULSAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AirdropPToken\",\n        \"type\": \"event\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"airdropPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"getBTokenBalance\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isAirdropPToken\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"isStartAirdrop\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"marginUnit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"maxAirdropLimit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"ownerAddress\",\n        \"outputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"marginUnit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMarginUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"maxAirdropLimit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMaxAirdropLimit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"tradeUnit_\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"setTradeUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"startAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"stopAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"totalAirdropCount\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"tradeUnit\",\n        \"outputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"withdrawBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const deriVoteAbi = [\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingOption\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Vote\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"initializeVote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"numVotingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingDeadline\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingId\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"votingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"votingTopics\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","import { contractFactory } from \"../utils\";\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\n\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\nimport { DeriVote } from \"./gen/DeriVote.js\";\n\n// pToken airdrop\nexport const PTokenAirdropNULSFactory = contractFactory(\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\n);\n\n// deri vote\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\n\nexport class PTokenAirdropNULS extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\n  }\n\n  // query\n  //  async getBTokenBalance() {\n  //    const res = await this._call('getBTokenBalance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isAirdropPToken(account) {\n    const res = await this._call('isAirdropPToken', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async isStartAirdrop() {\n  //    const res = await this._call('isStartAirdrop', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async marginUnit() {\n  //    const res = await this._call('marginUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async maxAirdropLimit() {\n  //    const res = await this._call('maxAirdropLimit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerAddress() {\n  //    const res = await this._call('ownerAddress', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalAirdropCount() {\n    const res = await this._call('totalAirdropCount', [])\n    return deleteIndexedKey(res)\n  }\n  //  async tradeUnit() {\n  //    const res = await this._call('tradeUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n  //  async setMarginUnit(accountAddress, marginUnit_) {\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\n  //  }\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\n  //  }\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\n  //  }\n  //  async startAirdrop(accountAddress) {\n  //    return await this._transact('startAirdrop', [], accountAddress)\n  //  }\n  //  async stopAirdrop(accountAddress) {\n  //    return await this._transact('stopAirdrop', [], accountAddress)\n  //  }\n  //  async withdrawBToken(accountAddress) {\n  //    return await this._transact('withdrawBToken', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\n\nexport class DeriVote extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, deriVoteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numVotingOptions() {\n    const res = await this._call('numVotingOptions', [])\n    return deleteIndexedKey(res)\n  }\n  async votingDeadline() {\n    const res = await this._call('votingDeadline', [])\n    return deleteIndexedKey(res)\n  }\n  async votingId() {\n    const res = await this._call('votingId', [])\n    return deleteIndexedKey(res)\n  }\n  async votingOptions(votingId, voter) {\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\n    return deleteIndexedKey(res);\n  }\n  async votingTopics(votingId) {\n    const res = await this._call('votingTopics', [votingId])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\n  //  }\n  //  async setController(accountAddress, newController) {\n  //    return await this._transact('setController', [newController], accountAddress)\n  //  }\n  async vote(accountAddress, votingOption) {\n    return await this._transact('vote', [votingOption], accountAddress)\n  }\n\n}","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\nimport { getPTokenAirdropConfig } from \"../config\"\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\n\nexport const isPTokenAirdropped = async (...args) => {\n  return catchApiError(async(chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).isAirdropPToken(accountAddress);\n  }, args, 'isPTokenAirdropped', '')\n};\n\nexport const totalAirdropCount = async (...args) => {\n  return catchApiError(async(chainId) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).totalAirdropCount();\n  }, args, 'totalAirdropCount', '')\n};\n\nexport const isUserPTokenExist = async (...args) => {\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\n    let res = '';\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const result = await pool.pToken.balanceOf(accountAddress);\n    if (result === '1') {\n      res = true;\n    } else if (result === '0') {\n      res = false;\n    }\n    return res;\n  }, args, 'isUserPTokenExist', '');\n};\n\nexport const isBTokenUnlocked = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nexport const hasRequiredBalance = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const res = await pool.bToken.balanceOf(accountAddress)\n    console.log('res', res)\n    return bg(res).gte(100)\n  }, args, 'hasRequiredBalance', '')\n}\n\n\n// tx\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const airdropPToken = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).airdropPToken(accountAddress);\n  }, args);\n};\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\n\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\n\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\n\nexport const getStakingTop10Users = async () => {\n  return catchApiError(\n    async () => {\n      const db = databaseActivityFactory();\n      const key = range(10).reduce(\n        (acc, i) =>\n          acc.concat([\n            `${keyPrefix()}.top.${i + 1}.account`,\n            `${keyPrefix()}.top.${i + 1}.fee`,\n            `${keyPrefix()}.top.${i + 1}.score`,\n            `${keyPrefix()}.top.${i + 1}.cont`,\n          ]),\n        []\n      );\n      //console.log(key)\n      const res = await db.getValues(key)\n      //console.log(res)\n      if (Array.isArray(res) && res.length === 4 * 10) {\n        let result = []\n        for (let i = 0; i < res.length; i++) {\n          if ((i + 1) % 4 === 0) {\n            const info = res.slice(i - 3, i + 1);\n            const index = (i + 1) / 4\n            result.push({\n              no: index,\n              userAddr: info[0].slice(0, 42),\n              feePaid: deriToNatural(info[1]).toString(),\n              score: deriToNatural(info[2]).toString(),\n              evgCoeff: deriToNatural(info[1]).eq(0)\n                ? '0'\n                : bg(info[3]).div(info[1]).toString(),\n              rewardBNB:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '200000'\n                          : '100000'\n                        : '50000'\n                      : '35000'\n                    : '25000'\n                  : '18000',\n            });\n          }\n        }\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\n      } else {\n        return []\n      }\n    },\n    [],\n    'getStakingTop10Users',\n    [],\n  );\n};\n\nexport const getUserStakingInfo = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.fee`,\n        `${keyPrefix()}.${accountAddress}.coef`,\n      ];\n      const res = await db.getValues(key)\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      const coef = deriToNatural(res[9])\n      return {\n        userAddr: accountAddress,\n        feePaid: deriToNatural(res[8]).toString(),\n        coef: max(coef, bg(1)).toString(),\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\n      }\n    },\n    args,\n    'getUserStakingInfo',\n    {\n      userAddr: '',\n      feePaid: '',\n      coef: '',\n      score: '',\n    }\n  );\n};\n\nexport const getUserStakingReward = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.top.1.account`,\n        `${keyPrefix()}.top.2.account`,\n        `${keyPrefix()}.top.3.account`,\n        `${keyPrefix()}.top.4.account`,\n        `${keyPrefix()}.top.5.account`,\n        `${keyPrefix()}.top.6.account`,\n        `${keyPrefix()}.top.7.account`,\n        `${keyPrefix()}.top.8.account`,\n        `${keyPrefix()}.top.9.account`,\n        `${keyPrefix()}.top.10.account`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\n\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\n      let rewardBNB = '0';\n      if (topUsers.includes(accountAddress)) {\n        if (accountAddress === topUsers[0]) {\n          rewardBNB = '200000';\n        } else if (accountAddress === topUsers[1]) {\n          rewardBNB = '100000';\n        } else if (accountAddress === topUsers[2]) {\n          rewardBNB = '50000';\n        } else if (accountAddress === topUsers[3]) {\n          rewardBNB = '35000';\n        } else if (accountAddress === topUsers[4]) {\n          rewardBNB = '25000';\n        } else {\n          rewardBNB = '18000';\n        }\n      }\n      return {\n        userAddr: accountAddress,\n        rewardBNB,\n        rewardDERI,\n      };\n    },\n    args,\n    'getUserStakingReward',\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\n  );\n};\n\nexport const getUserStakingContribution = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      return {\n        userAddr: accountAddress,\n        totalContrib: deriToNatural(\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\n        ).toString(),\n        userContrib: deriToNatural(\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\n        ).toString(),\n        Q1Contrib: deriToNatural(res[0]).toString(),\n        Q2Contrib: deriToNatural(res[1]).toString(),\n        Q3Contrib: deriToNatural(res[2]).toString(),\n        Q4Contrib: deriToNatural(res[3]).toString(),\n        userQ1Contrib: deriToNatural(res[4]).toString(),\n        userQ2Contrib: deriToNatural(res[5]).toString(),\n        userQ3Contrib: deriToNatural(res[6]).toString(),\n        userQ4Contrib: deriToNatural(res[7]).toString(),\n        userQ1Point: scoreQ1.toString(),\n        userQ2Point: scoreQ2.toString(),\n        userQ3Point: scoreQ3.toString(),\n        userQ4Point: scoreQ4.toString(),\n      };\n    },\n    args,\n    'getUserStakingContribution',\n    { userAddr: '', totalContrib: '', userContrib: '' }\n  );\n};","import { catchApiError, catchTxApiError, DeriEnv, fromWei, hexToNumberString, toChecksumAddress } from \"../../shared\";\nimport { databaseDeriVoteFactory } from \"../../shared/factory/database\";\nimport { getDeriVoteConfig } from \"../config\";\nimport { deriVoteFactory } from \"../contract/factory\";\n\nconst votingId = '2'\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\n\n\nexport const getVotingResult = async() => {\n  return catchApiError(\n    async () => {\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.OP1.count`,\n        `${keyPrefix()}.OP2.count`,\n        `${keyPrefix()}.OP3.count`,\n      ];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)));\n    },\n    [],\n    'getOptionsVotingPowers',\n    ['', '', '']\n  );\n}\n\nexport const getUserVotingPower = async(accountAddress) => {\n  return catchApiError(async() => {\n    accountAddress = toChecksumAddress(accountAddress)\n    const db = databaseDeriVoteFactory()\n    const keys = [\n      `${keyPrefix()}.${accountAddress}.count`,\n    ]\n    const res = await db.getValues(keys)\n    return res.map((v) => fromWei(hexToNumberString(v)))[0]\n  }, [accountAddress], 'getUserVotingPowers', '')\n}\n\n\nexport const getUserVotingResult = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.${accountAddress}.count`,\n        `${keyPrefix()}.${accountAddress}.option`,\n        `${keyPrefix()}.${accountAddress}.timestamp`,\n      ];\n      const res = await db.getValues(keys);\n      return {\n        votingPower: fromWei(hexToNumberString(res[0])),\n        option: hexToNumberString(res[1]),\n        timestamp: hexToNumberString(res[2]),\n      };\n    },\n    args,\n    'getVoteResult',\n    ''\n  );\n};\n\nexport const vote = async(chainId, accountAddress, votingOption) => {\n  const args = [chainId, accountAddress, votingOption]\n  return catchTxApiError(async() => {\n    chainId = chainId.toString()\n    accountAddress = toChecksumAddress(accountAddress)\n    const config = getDeriVoteConfig(chainId)\n    const deriVote = deriVoteFactory(chainId, config.address)\n    const voteId = await deriVote.votingId()\n    if (voteId !== votingId) {\n      throw new Error(\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\n      );\n    }\n    return await deriVote.vote(accountAddress, votingOption)\n  }, args)\n}","import {\n  DeriEnv,\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\n\nexport const getContractAddressConfig = (env, version) => {\n  env = env || DeriEnv.get()\n  if (version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version, env);\n  } else if (version === undefined) {\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n\nexport const getPoolConfigList = (env) => {\n  env = env || DeriEnv.get();\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\n    let res = []\n    const config = getJsonConfig(v, env);\n    if (config && config.pools) {\n      res = config.pools.map((p) => {\n        p.version = v\n        return p\n      })\n    }\n    return [...acc, ...res];\n  }, []);\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport { getPoolVersion, LITE_VERSIONS, LITE_AND_OPTION_VERSIONS } from '../shared/config';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getPoolLiquidity as getPoolLiquidity2,\n  getPoolInfoApy as getPoolInfoApy2,\n} from '../shared/api/database_api';\nimport {\n  getLiquidityInfoV2,\n  getPoolLiquidityV2,\n  getPoolInfoApyV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  } else if (version === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getPositionInfosPosition,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  isUnlockedOption,\n} from '../option/api';\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  getPositionInfosV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n  getEstimatedLiquidatePriceV2,\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  getPositionInfosV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersion(poolAddress);\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\n  } else if (version === 'v1') {\n    return [\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\n    ].filter((p) => p.volume !== '0');\n  } else if (version === 'v2') {\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  } else if (version === 'option') {\n    // place holder\n    return ''\n  }\n  if (symbolId === undefined) {\n    // place holder\n    return ''\n  } else {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n"],"sourceRoot":""}