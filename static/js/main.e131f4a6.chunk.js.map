{"version":3,"sources":["lib/web3js/config/env.js","lib/web3js/v2/contract/v2_lite/perpetual_pool.js","lib/web3js/v2/contract/v2_lite/l_token.js","lib/web3js/v2/contract/v2_lite/p_token.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/factory/web3.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/factory/v2/index.js","lib/web3js/v2/factory/v2_lite/index.js","lib/web3js/v2/api/v2/mining_query_api.js","lib/web3js/v2/api/v2/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/v2/trade_query_api.js","lib/web3js/v2/api/v2/trade_transaction_api.js","lib/web3js/v2/api/v2_lite/mining_query_api.js","lib/web3js/v2/api/v2_lite/mining_transaction_api.js","lib/web3js/v2/api/v2_lite/trade_query_api.js","lib/web3js/v2/api/v2_lite/trade_transaction_api.js","lib/web3js/v2/api/v2/trade_history_api.js","lib/web3js/v2/api/v2_lite/trade_history_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/v2/api/activity_api.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","lib/web3js/config/rest_server.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/utils/api.js","lib/web3js/indexV2.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/utils.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","model/Intl.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/v2/config/oracle.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","model/Version.js","utils/utils.js","lib/web3js/api/contractQueryApi.js","../lang).)*/.json$","lib/web3js/v2/factory/shared.js","lib/web3js/v2/config/chain.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/factory/web3.js","lib/web3js/v2/config/config.js","lib/web3js/v2/contract/oracle/woo_oracle.js","lib/web3js/v2/contract/oracle/wrapped_oracle.js","lib/web3js/v2/contract/oracle/chainlink_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/oracle/offchain_oracle.js","lib/web3js/v2/contract/ptoken_airdrop.js","lib/web3js/v2/contract/b_token.js","lib/web3js/api/slpPoolApi.js","lib/web3js/v2/config/pool.js","lib/web3js/v2/config/broker.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/contract/v2/perpetual_pool.js","lib/web3js/v2/contract/v2/perpetual_pool_router.js","lib/web3js/v2/contract/v2/l_token.js","lib/web3js/v2/contract/v2/p_token.js"],"names":["DeriEnv","_deriEnv","get","set","value","Error","PerpetualPoolLite","chainId","contractAddress","perpetualPoolLiteAbi","config","getPoolConfig","undefined","offchainSymbolIds","bTokenAddress","lTokenAddress","pouterAddress","liquidatorQualifierAddress","protocolFeeCollector","a","Promise","all","this","getAddresses","getParameters","_call","res","pTokenAddress","minPoolMarginRatio","deriToNatural","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","symbolId","symbol","oracleAddress","multiplier","feeRatio","fundingRateCoefficient","price","cumulativeFundingRate","tradersNetVolume","tradersNetCost","prices","length","reduce","acc","i","concat","getSymbol","symbolNames","map","s","getPriceInfo","priceInfos","p","index","push","timestamp","parseInt","v","toString","r","accountAddress","amount","_getSymbolPrices","_transact","naturalToDeri","newVolume","ContractBase","LTokenLite","lTokenLiteAbi","processPosition","volume","cost","lastCumulativeFundingRate","PTokenLite","pTokenLiteAbi","tokenId","Array","isArray","owner","operator","MAX_GAS_AMOUNT","Contract","contractAbi","isProvider","web3","web3Factory","metaMaskWeb3","contract","eth","poolAddress","method","args","retry","_init","methods","call","includes","console","log","gas","estimateGas","from","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","to","Web3","utils","numberToHex","data","encodeABI","window","ethereum","request","params","_getTransactionReceipt","POOL_ABI","PerpetualPool","defaultValue","bg","result","cumuFundingRate","cumuFundingRateBlock","liquidity","minAddLiquidity","redemptionFeeRatio","priceDelayAllowance","getOracleInfo","oracle","signed","getBTCUSDPrice","getStateValues","args1","hasInvalidArgsValue","fundingRate","fundingRatePerBlock","calculateFundingRate","processFundingRate","args2","liquidityUsed","calculateLiquidityUsed","poolMarginRatio","_transactPool","success","transaction","blockNumber","getBlock","eventName","filter","fromBlock","events","getPastEvents","toBlock","es","e","abs","times","CONTRACT_ABI","BTokenContract","allowance","gt","MAX_VALUE","address","_balance","decimals","PTokenContract","lastCumuFundingRate","margin","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","providers","HttpProvider","providerUrl","getLatestRPCServer","getDBProviderUrlsConfig","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","MiningVaultRouter","SlpPool","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","getDeriContractAddress","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddressConfig","key","Object","keys","database","databaseWormholeFactory","getDBWormholeAddressConfig","databaseAirdropFactory","getDBAirdropAddressConfig","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","bTokenFactory","bTokenInstanceMap","bToken","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","miningVaultPoolFactory","mVaultInstanceMap","mVault","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","web3Instance","web3InstanceMap","getChainProviderUrl","calculateEntryPrice","eq","div","calculateLiquidationPrice","dynamicCost","tmp","minus","plus","max","isOrderValid","marginHeld","minMargin","gte","calculateTxFee","validateArgs","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","bTokens","accum","b","discount","pnl","isBToken0RatioValid","bTokenId","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","totalCost","calculateMaxRemovableLiquidity","restLiquidity","min","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","factory","klass","instances","perpetualPoolRouterFactory","PerpetualPoolRouter","LToken","PToken","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","getLiquidityInfo","getPoolConfig2","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","getBToken","getAsset","parameterInfo","bTokenInfo","lTokenAsset","promises","totalPnl","poolLiquidity","lastCumulativePnl","maxRemovableShares","approximatePnl","cumulativePnl","shares","getPoolLiquidity","db","getValues","catch","err","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","addLiquidity","routerAddress","router","perpetualPoolRouter","minBToken0Ratio","validation","removeLiquidity","isMaximum","priceCache","_prices","split","val","isNaN","parseFloat","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getPoolBTokenList","symbolInfo","bTokenDiscounts","bTokenSymbol","bTokenMultiplier","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","getOraclePrice","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","bTokenInfoList","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","orderValidation","trade","closePosition","negated","_getLiquidityInfo","getLiquidity","totalSupply","getActiveSymbolIds","symbolIds","poolDynamicEquity","catchApiError","catchTxApiError","getMargin","priceIndex","indexOf","fetchJson","url","fetch","resp","json","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","returnValues","item","unshift","getTradeHistory","tradeHistory","getRestServerConfig","tradeFromBlock","tradeHistoryBlock","trim","tradeHistoryOnline","sort","initialBlock","getBlockInfo","baseToken","account","setBroker","brokerAddress","normalizeChainId","normalizeAddress","getBrokerConfig","brokerManagerAddress","brokerManager","brokerManagerFactory","getAirdropPTokenAddress","airdropPToken","pTokenAirdropFactory","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","env","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","duration","Number","MAX_SAFE_INTEGER","startTime","urls","blockNumbers","findIndex","startsWith","getChainProviderUrls","getDailyBlockNumberConfig","position","getStorageAt","hexToNumber","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getChainIds","getChainProviderUrlsConfig","provider_urls","getContractAddressConfig","pool","dToken","MiningVault","unit","version","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","state","modalIsOpen","className","overlayMerged","assign","mergedStyle","isOpen","style","portalClassName","intl","locale","onClose","inject","observer","data-title","process","getOracleUrl","addSymbolParam","toLowerCase","mapToSymbolInternal","mode","ok","priceInfo","JSON","stringify","RestOracle","getPrice","getOracleConfig","decimal","oracleFactory","func","methodName","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","offchainOracleAbi","brokerManagerAbi","bTokenLiteAbi","pTokenAirdropAbi","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getLpContractAddress","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","c","isV2","total","cur","getPoolConfigListV2","getContractAddressConfig2","getPoolVersion","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistory2","getTradeHistoryV2","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","lte","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","toFixed","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","some","getPoolContractAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","deriAddress","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","require","forEach","path","lang","page","test","pageName","Intl","setLocale","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","pPool","maxWithdrawMargin","mintDToken","getUserInfoAll","userInfo","deadline","nonce","valid","miningVaultAddress","miningVault","freeze","mintDeri","databaseWormhole","signature","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","getLpPoolInfoApy","apy2","getUserInfoInPool","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","getOracleConfigList","getConfig","isUsedRestOracle","mapToSymbol","filteredByChainId","wsOnPromise","ws","event","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","getOrSet","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","Version","makeAutoObservable","setCurrent","isV1","isV2Lite","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","parameters","getUserWormholeSignature","getDeriBalance","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","instanceMap","WrappedOracle","WooOracle","BToken","BrokerManager","PTokenAirdrop","MAX_UINT256","MAX_INT256","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","MaskWrapper","isBrowser","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","find","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode","isJsDom","userAgent","processConfigV2","validateConfigV2Lite","validateObjectKeyExist","validateIsArray","prop","processConfigV2Lite","getJsonConfig","jsonConfig","_balanceOf","bTokenBalance","expendPoolConfigV2","flat","expendPoolConfigV2Lite","getPoolConfigList","getFilteredPoolConfigList","poolConfigList","check","_getPoolConfig","bTokenCount","symbolCount","getBrokerConfigList","every","keyList","valName","protocolFeeAccrued","getLengths","decimals0","swapperAddress","processAsset"],"mappings":"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","file":"static/js/main.e131f4a6.chunk.js","sourcesContent":["// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","import { ContractBase } from '../contract_base'\r\nimport { offchainOracleAbi, perpetualPoolLiteAbi } from '../abis';\r\nimport { deriToNatural, naturalToDeri, getPriceInfo } from '../../utils'\r\n//import { MAX_INT256} from '../../config'\r\nimport { getPoolConfig } from '../../config';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'v2_lite'\r\n    );\r\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    this.bTokenAddress = '';\r\n    this.lTokenAddress = '';\r\n    this.pouterAddress = '';\r\n    this.liquidatorQualifierAddress = '';\r\n    this.protocolFeeCollector = '';\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([this.getAddresses(), this.getParameters()]);\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    this.bTokenAddress = res.bTokenAddress;\r\n    this.lTokenAddress = res.lTokenAddress;\r\n    this.pTokenAddress = res.pTokenAddress;\r\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\r\n    this.protocolFeeCollector = res.protocolFeeCollector;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n  async _getSymbolPrices() {\r\n    let prices = []\r\n    if (this.offchainSymbolIds.length > 0) {\r\n      const symbolNames = (\r\n        await Promise.all(\r\n          this.offchainSymbolIds.reduce(\r\n            (acc, i) => acc.concat([this.getSymbol(i)]),\r\n            []\r\n          )\r\n        )\r\n      ).map((s) => s.symbol);\r\n      const priceInfos = await Promise.all(\r\n        symbolNames.reduce((acc, s) => acc.concat([getPriceInfo(s)]), [])\r\n      );\r\n      prices = priceInfos.reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offchainSymbolIds[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../contract_base'\r\nimport { lTokenLiteAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import { ContractBase } from '../contract_base'\r\nimport { pTokenLiteAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils'\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import Web3 from 'web3';\r\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\r\n\r\nconst MAX_GAS_AMOUNT = 532731;\r\n\r\nexport class Contract {\r\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n    this.isProvider = isProvider;\r\n  }\r\n  async _init() {\r\n    if (!this.web3) {\r\n      if (this.isProvider) {\r\n        this.web3 = await web3Factory(this.chainId);\r\n      } else {\r\n        this.web3 = metaMaskWeb3();\r\n      }\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  setAccount(accountAddress) {\r\n    this.accountAddress = accountAddress;\r\n    return this;\r\n  }\r\n  setPool(poolAddress) {\r\n    this.poolAddress = poolAddress;\r\n    return this;\r\n  }\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while(retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args, accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n      //this.web3.eth.getGasPrice(),\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\nimport {\r\n  hasInvalidArgsValue,\r\n  getBTCUSDPrice,\r\n  getOracleInfo,\r\n  deriToNatural,\r\n  bg,\r\n} from '../utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    let gas = 0;\r\n    for (let i = 0; i < 20; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = 532731;\r\n    if (gas > 532731) gas = 532731;\r\n    return gas;\r\n  }\r\n\r\n  async _transactPool(method, args = [], accountAddress) {\r\n    await this._init()\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\r\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\r\n\r\n    // const [gas, gasPrice] = await Promise.all([\r\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\r\n    //   this.web3.eth.getGasPrice(),\r\n    // ]);\r\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\r\n    try {\r\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = await this.getParameters();\r\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (hasInvalidArgsValue(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (hasInvalidArgsValue(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    //await this.web3.eth.getAccounts(console.log)\r\n    //console.log('depositMargin');\r\n    let res;\r\n    try {\r\n      let tx = await this._transactPool(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { Contract } from './contract';\r\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\r\n/* eslint-enable */\r\n\r\nexport class BTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async isUnlocked(accountAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      this.poolAddress,\r\n    ]);\r\n    allowance = deriToNatural(allowance);\r\n    return allowance.gt(0);\r\n  }\r\n\r\n  async unlock(accountAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [this.poolAddress, MAX_VALUE],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balance(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balance(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balance(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { deriToNatural, bg } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { deriToNatural } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { getDBProviderUrlsConfig } from '../config/database';\r\nimport { getLatestRPCServer } from '../utils';\r\n\r\nexport class DatabaseBaseContract {\r\n  constructor(contractAddress, contractAbi) {\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n  _init() {\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\r\n    this.contract = new this.web3.eth.Contract(\r\n      this.contractAbi,\r\n      this.contractAddress\r\n    );\r\n  }\r\n\r\n  async updateProviderUrl() {\r\n    if (!this.providerUrl) {\r\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  async _call(method, args) {\r\n    let res\r\n    let retry = 3\r\n    while(retry > 0) {\r\n      try {\r\n        await this.updateProviderUrl();\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch (err) {\r\n        this.providerUrl = null\r\n        console.log(err.toString())\r\n      }\r\n      retry -= 1\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\r\n    }\r\n    return res\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base';\r\n\r\n/* eslint-disable */\r\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, DB_CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI['abi'],\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async isUnlocked(accountAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      this.poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [this.poolAddress, MAX_VALUE],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balance(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balance(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balance(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends Contract {\r\n  constructor(chainId, contractAddress, useProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { PerpetualPool } from '../contract/perpetual_pool';\r\nimport { BTokenContract } from '../contract/bToken';\r\nimport { PTokenContract } from '../contract/pToken';\r\nimport { LTokenContract } from '../contract/lToken';\r\nimport { DatabaseContract } from '../contract/database';\r\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\r\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\r\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\r\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\r\n\r\nimport { DeriEnv } from '../config/env';\r\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\r\nimport { SlpPool } from '../contract/slp_pool';\r\nimport { ClpPool } from '../contract/clp_pool';\r\nimport { Clp2Pool } from '../contract/clp2_pool';\r\nimport { DeriContract } from '../contract/deri';\r\nimport { WormholeContract } from '../contract/wormhole';\r\n//import { getLpContractAddress } from '../utils';\r\n// import { getPoolBaseSymbolList } from '../utils'\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const bTokenFactory = (function () {\r\n  const bTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\r\n      return bTokenInstanceMap[key];\r\n    }\r\n    const bToken = new BTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new BTokenContract\")\r\n    bTokenInstanceMap[key] = bToken;\r\n    return bToken;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new LTokenContract\")\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\nexport const miningVaultPoolFactory = (function () {\r\n  const mVaultInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\r\n      return mVaultInstanceMap[key];\r\n    }\r\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\r\n    // console.log(\"new MiningValutPool\")\r\n    mVaultInstanceMap[key] = mVault;\r\n    return mVault;\r\n  };\r\n})();\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();\r\n\r\nexport const deriFactory = (function () {\r\n  const deriInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(deriInstanceMap).includes(key)) {\r\n      return deriInstanceMap[key];\r\n    }\r\n    const deri = new DeriContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    deriInstanceMap[key] = deri;\r\n    return deri;\r\n  };\r\n})();\r\n\r\nexport const wormholeFactory = (function () {\r\n  const wormholeInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\r\n      return wormholeInstanceMap[key];\r\n    }\r\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\r\n    wormholeInstanceMap[key] = wormhole;\r\n    return wormhole;\r\n  };\r\n})();\r\n\r\nexport const miningVaultRouterFactory = (function () {\r\n  const mVaultInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\r\n      return mVaultInstanceMap[key];\r\n    }\r\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\r\n    mVaultInstanceMap[key] = mVault;\r\n    return mVault;\r\n  };\r\n})();\r\n","import Web3 from 'web3';\r\nimport { getChainProviderUrl } from '../utils';\r\n\r\nexport const metaMaskWeb3 = (function () {\r\n  let web3Instance = null;\r\n  return () => {\r\n    if (web3Instance !== null) {\r\n      return web3Instance;\r\n    }\r\n    let web3;\r\n    if (typeof window.ethereum !== undefined) {\r\n      web3 = new Web3(window.ethereum);\r\n    } else {\r\n      // console.log(\"Please install MetaMask first\")\r\n      throw new Error('Please install MetaMask first');\r\n    }\r\n    web3Instance = web3;\r\n    return web3;\r\n  };\r\n})();\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return async(chainId) => {\r\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n      return web3InstanceMap[chainId];\r\n    }\r\n    if (['1', '3', '42'].includes(chainId)) {\r\n      console.log(\r\n        `==== web3Factory(${chainId}), please caution the access limits ===`\r\n      );\r\n    }\r\n    const providerUrl = await getChainProviderUrl(chainId);\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\r\n    web3InstanceMap[chainId] = web3;\r\n    return web3;\r\n  };\r\n})();\r\n","import { bg, max } from '../utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from '../../contract/v2';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n} from '../../contract/v2_lite';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)","import { databaseFactory } from '../../../factory/contracts';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../../factory'\r\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../../config'\r\nimport { bg, deriToNatural, getNetworkName } from '../../utils'\r\nimport { calculateMaxRemovableLiquidity } from '../../calculation'\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ])\r\n    const { minPoolMarginRatio } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\r\n    }, bg(0))\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n    }, bg(0))\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl)\r\n      } else {\r\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n      }\r\n    }, bg(0))\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\r\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\r\n    //console.log(\"approximatePnl\", approximatePnl.toString())\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString()\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList } from '../../config'\r\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../../factory'\r\nimport { RestOracle } from '../../utils'\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../../calculation'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\r\n   let res\r\n   if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err};\r\n    }\r\n   } else {\r\n      res = { success: false, error: validation.error};\r\n   }\r\n   return res\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum=false,\r\n) => {\r\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n     poolAddress,\r\n   );\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n   const lToken = lTokenFactory(chainId, lTokenAddress);\r\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\r\n   const { liquidity:userLiquidity } = lTokenAsset\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   promises = []\r\n   for (let i=0; i<symbolIdList.length; i++) {\r\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n   }\r\n   const symbols = await Promise.all(promises)\r\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\r\n   let res\r\n   if (validation.success) {\r\n     try {\r\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\r\n       res = { success: true, transaction: tx };\r\n     } catch (err) {\r\n       res = { success: false, error: err};\r\n     }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\r\n   let res\r\n   if (validation.success) {\r\n    try {\r\n      const promises = symbolList.map(async(s) => {\r\n        return await RestOracle(s).getPrice()\r\n      })\r\n      const prices = await Promise.all(promises)\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n      })\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err};\r\n    }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n\r\n   const lToken = lTokenFactory(chainId, lTokenAddress);\r\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\r\n   const { liquidity:userLiquidity } = lTokenAsset\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   promises = []\r\n\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   for (let i=0; i<symbolIdList.length; i++) {\r\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n   }\r\n   const symbols = await Promise.all(promises)\r\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\r\n   let res\r\n   if (validation.success) {\r\n     try {\r\n       promises = symbolList.map(async(s) => {\r\n         return await RestOracle(s).getPrice()\r\n       })\r\n       const prices = await Promise.all(promises)\r\n       const priceInfos = prices.map((p, index) => {\r\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n       })\r\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\r\n       res = { success: true, transaction: tx };\r\n     } catch (err) {\r\n       res = { success: false, error: err};\r\n     }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../../factory';\r\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../../config'\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../../calculation';\r\nimport { getOraclePrice, bg, min, max } from '../../utils'\r\nimport { fundingRateCache, priceCache } from '../api_globals';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import { isOrderValid } from '../../calculation';\r\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList, getPoolBTokenIdList } from '../../config'\r\nimport {\r\n  bTokenFactory,\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../../factory';\r\nimport { RestOracle, bg } from '../../utils';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const pToken = pTokenFactory(chainId, pTokenAddress);\r\n   const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n     perpetualPool.getParameters(),\r\n     pToken.getPositions(accountAddress),\r\n     //pToken.getMargin(accountAddress, symbolId),\r\n   ]);\r\n\r\n   //const { multiplier } = symbolInfo;\r\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\r\n\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const margins = await pToken.getMargins(accountAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, i, index) => {\r\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let marginHeld = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.tradersNetVolume).plus(newVolume).times(a.price).times(a.multiplier).abs())\r\n      } else {\r\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n    //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n   const orderValidation = isOrderValid(\r\n     //price,\r\n     margin,\r\n     marginHeld,\r\n     liquidity,\r\n     liquidityUsed,\r\n     //multiplier,\r\n     //minPoolMarginRatio,\r\n     //bg(newVolume),\r\n   )\r\n   let res;\r\n   if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n   } else {\r\n     res = { success: false, error: orderValidation.error};\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const pToken = pTokenFactory(chainId, pTokenAddress)\r\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\r\n   const newVolume = volume.negated()\r\n   let res;\r\n   if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const pToken = pTokenFactory(chainId, pTokenAddress);\r\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n   const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n     perpetualPool.getParameters(),\r\n     pToken.getPositions(accountAddress),\r\n     //pToken.getMargin(accountAddress, symbolId),\r\n   ]);\r\n\r\n   //const { multiplier } = symbolInfo;\r\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\r\n\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const margins = await pToken.getMargins(accountAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, i, index) => {\r\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    //console.log('liquidity', liquidity.toString())\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let marginHeld = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\r\n      } else {\r\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n    //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n    // console.log('pnl', pnl.toString())\r\n\r\n   const orderValidation = isOrderValid(\r\n     //price,\r\n     margin,\r\n     marginHeld,\r\n     liquidity,\r\n     liquidityUsed,\r\n     //multiplier,\r\n     //minPoolMarginRatio,\r\n     //bg(newVolume),\r\n   )\r\n   let res;\r\n   if (orderValidation.success) {\r\n    try {\r\n     promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n   } else {\r\n     res = { success: false, error: orderValidation.error};\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const pToken = pTokenFactory(chainId, pTokenAddress)\r\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\r\n   const newVolume = volume.negated()\r\n   let res;\r\n   if (!volume.eq(0)) {\r\n    try {\r\n     const promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res\r\n}\r\n","import { databaseFactory } from '../../../factory/contracts';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../calculation';\r\nimport { getPoolConfig } from '../../config';\r\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../../factory/v2_lite';\r\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../utils';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\r\n    perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { perpetualPoolLiteFactory } from '../../factory/v2_lite';\r\nimport { catchTxApiError } from '../../utils';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { calculateEntryPrice } from \"../../../calculation\"\r\nimport { calculateFundingRate, calculateLiquidationPrice, processFundingRate, calculateFundingFee } from \"../../calculation\"\r\nimport { getPoolConfig } from \"../../config\"\r\nimport { bTokenFactory } from \"../../factory/shared\"\r\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../../factory/v2_lite\"\r\nimport { bg, catchApiError, getLastUpdatedBlockNumber, getLatestBlockNumber, getOraclePrice } from \"../../utils\"\r\nimport { fundingRateCache, priceCache } from \"../api_globals\"\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getActiveSymbolIds(),\r\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\r\n      getLatestBlockNumber(chainId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargin(accountAddress),\r\n      getOraclePrice(chainId, symbol, 'v2_lite'),\r\n    ])\r\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n    //console.log(latestBlockNumber)\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\r\n\r\n    let promises = []\r\n    for (let i = 0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n\r\n    promises = []\r\n    for (let i=0; i< symbolIds.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const priceIndex = symbolIds.indexOf(symbolId)\r\n    let price\r\n    if (priceIndex === '-1') {\r\n      price = '0'\r\n    } else {\r\n      price = symbolPrices[priceIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\r\n\r\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    }, bg(0))\r\n\r\n    const totalCost = positions.reduce((accum, p) => {\r\n      return accum.plus(bg(p.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee: fundingFee.toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      ).toString(),\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\r\n    perpetualPool.getLiquidity(),\r\n    getOraclePrice(chainId, symbol, 'v2_lite'),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\r\n  const { minPoolMarginRatio } = parameterInfo\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n\r\n  let promises = []\r\n  for (let i = 0; i< symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    if (!price) {\r\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [price, symbolInfo] = await Promise.all([\r\n      getOraclePrice(chainId, symbol, 'v2_lite'),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const { multiplier } = symbolInfo\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { isOrderValid } from '../../calculation';\r\nimport { getPoolConfig } from '../../config';\r\nimport { bTokenFactory } from '../../factory/shared';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../../factory/v2_lite';\r\nimport { catchTxApiError, bg } from '../../utils';\r\n\r\nexport const unlock = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.unlock(accountAddress, poolAddress)\r\n  }, args)\r\n}\r\n\r\nexport const depositMargin = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addMargin(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const withdrawMargin = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeMargin(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n\r\nexport const tradeWithMargin = async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId]\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n    const { pToken:pTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [parameterInfo, liquidity, margin, symbolIds ] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getMargin(accountAddress),\r\n      pToken.getActiveSymbolIds(),\r\n    ])\r\n    const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n    let promises = []\r\n\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    let marginHeld = symbols.reduce((acc, s, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return acc.plus(bg(s.tradersNetVolume).plus(newVolume).times(s.price).times(s.multiplier).abs())\r\n      } else {\r\n        return acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n\r\n    const orderValidation = isOrderValid(\r\n      margin,\r\n      marginHeld,\r\n      liquidity,\r\n      liquidityUsed,\r\n    )\r\n    if (orderValidation.success) {\r\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\r\n    } else {\r\n      throw new Error(orderValidation.error)\r\n    }\r\n  }, args)\r\n}\r\n\r\nexport const closePosition = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n    if (!volume.eq(0)) {\r\n      const newVolume = volume.negated()\r\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\r\n    } else {\r\n      throw new Error('no position to close')\r\n    }\r\n  }, args)\r\n}\r\n","import { deriToNatural } from '../../utils';\r\nimport { perpetualPoolFactory } from '../../factory';\r\nimport { getPoolConfig2, getPoolSymbolIdList } from '../../config'\r\n\r\nimport { getRestServerConfig, DeriEnv } from '../../../config';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { owner: accountAddress }\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../utils';\r\nimport { perpetualPoolLiteFactory } from '../../factory';\r\nimport { getPoolConfig, getPoolConfig2, getPoolSymbolIdList} from '../../config'\r\n\r\nimport { getRestServerConfig, DeriEnv } from '../../../config';\r\nimport { calculateTxFee } from '../../calculation/position';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { brokerManagerFactory } from \"../factory\"\r\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { getBrokerConfig } from \"../config\"\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig(chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}","import { pTokenAirdropFactory, pTokenFactory } from \"../factory\"\r\nimport { getPoolConfig2 } from '../config'\r\nimport { DeriEnv } from \"../../config\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","export const getDBProviderUrlsConfig = () => [\r\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const fetchWithTimeout = (url, options = {}) => {\r\n  const { timeout = 1200, ...fetchOptions } = options\r\n\r\n  return Promise.race([\r\n    fetch(url, fetchOptions),\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // reject(\r\n        //   new Error(\r\n        //     `Request for ${url} timed out after ${timeout} ms`,\r\n        //   ),\r\n        // )\r\n        resolve({timeout:true})\r\n      }, timeout)\r\n    }),\r\n  ])\r\n}\r\n\r\nexport const checkHttpServerIsAlive = async (url) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    if (!err.toString().includes('FetchError')) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getAliveHttpServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n    //console.log(url)\r\n    if (await checkHttpServerIsAlive(url)) {\r\n      return url;\r\n    }\r\n  }\r\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\r\n};\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\nimport { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    //console.log(chainId, contractAddress, position)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', res)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","export const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\nexport const ChainProviderUrls = [\r\n  {\r\n    provider_urls: [\r\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '1',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://bsc-dataseed.binance.org',\r\n      'https://bsc-dataseed1.defibit.io/',\r\n      'https://bsc-dataseed1.ninicoin.io/',\r\n    ],\r\n    chainId: '56',\r\n  },\r\n  {\r\n    provider_urls: ['https://http-mainnet.hecochain.com'],\r\n    chainId: '128',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '3',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '42',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n    ],\r\n    chainId: '97',\r\n  },\r\n  {\r\n    provider_urls: ['https://http-testnet.hecochain.com'],\r\n    chainId: '256',\r\n  },\r\n];\r\n\r\nexport const getChainProviderUrlsConfig = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n  ];\r\n  \r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n","import { getChainIds } from './chain';\r\n\r\n/** @module config */\r\n\r\n/**\r\n * Get the contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].pToken - position token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].symbol - symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getContractAddressConfig = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    // console.log('!!! production !!!')\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n/**\r\n * Get the Slp contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].pToken - position token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].symbol - symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getSlpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n      },\r\n    ];\r\n  }\r\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n  return [];\r\n};\r\n\r\n/**\r\n * Get the Clp contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getClpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getLpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterContractAddress = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Get the Deri contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].Deri - deri address\r\n * @returns {string} response[].Wormhole - wormhole token address\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getDeriContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingContractConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  const chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 10,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return 'https://testnetapi.deri.finance';\r\n    //return 'http://localhost:8082';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import { getOracleConfig, mapToSymbolInternal } from '../config/oracle';\r\nimport { oracleFactory } from '../factory/shared';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../../config';\r\nimport { deriToNatural } from './convert';\r\n\r\nexport const getOracleUrl = (symbol) => {\r\n  const env = DeriEnv.get();\r\n  //const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\r\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol.toLowerCase()}`;\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/get_signed_price', symbol);\r\n    }\r\n    return 'https://oracle4.deri.finance/get_signed_price';\r\n  } else {\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle2.deri.finance/get_signed_price', symbol);\r\n    }\r\n    // for test\r\n    return 'https://oracle2.deri.finance/get_signed_price';\r\n  }\r\n};\r\n\r\nexport const getPriceInfo = async (symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  let url = getOracleUrl(symbol);\r\n  //console.log('oracle url', url);\r\n  let retry = 2;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200') {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info error: exceed max retry(2): ${JSON.stringify(priceInfo)}`, );\r\n  }\r\n};\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      const priceInfo = await getPriceInfo(symbol)\r\n      return deriToNatural(priceInfo.price).toString()\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(chainId, symbol, version);\r\n  // console.log('oracle config',config)\r\n  if (config && config.address) {\r\n    if (!config.decimal) {\r\n      throw new Error('getOraclePrice: decimal is empty', config.decimal);\r\n    }\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  }\r\n};\r\n","export const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    //console.log('args', args, methodName, defaultValue)\r\n    // console.log(await func(...args))\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    console.log(`${methodName}:`, err)\r\n    //console.log(`${methodName}: ${err}`)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n","export {\r\n  DeriEnv,\r\n  //getContractAddressConfig,\r\n  getLpContractAddressConfig,\r\n  getSlpContractAddressConfig,\r\n  getPreminingContractConfig,\r\n} from './config';\r\nexport * from './utils';\r\nexport * from './calculation';\r\n\r\nexport * from './api/apiGlobals';\r\nexport * from './api/factoryApi';\r\nexport * from './api/walletApi';\r\nexport {\r\n  // isUnlocked,\r\n  // getEstimatedMargin,\r\n  // getEstimatedFee,\r\n  // getEstimatedFundingRate,\r\n  // getEstimatedLiquidityUsed,\r\n  isDeriUnlocked,\r\n  getUserWormholeSignature,\r\n  // getFundingRate,\r\n  //getPositionInfo,\r\n  getDeriBalance,\r\n} from './api/contractQueryApi';\r\nexport {\r\n  //unlock,\r\n  //depositMargin,\r\n  //withdrawMargin,\r\n  //addLiquidity,\r\n  //removeLiquidity,\r\n  //tradeWithMargin,\r\n  //closePosition,\r\n  mint,\r\n  mintDToken,\r\n  freeze,\r\n  mintDeri,\r\n  unlockDeri,\r\n  mintAirdrop,\r\n} from './api/contractTransactionApi';\r\nexport {\r\n  getUserInfo,\r\n  getUserInfoHarvest,\r\n  getUserInfoTotal,\r\n  getUserInfoAll,\r\n  //getPoolInfoApy,\r\n  getLpPoolInfoApy,\r\n  getUserInfoInPool,\r\n  getUserInfoAllForAirDrop,\r\n} from './api/databaseApi';\r\n\r\n// export * from './api/slpPoolApi';\r\n// export * from './api/clpPoolApi';\r\n\r\n// export * from './api/tradeHistoryApi';\r\nexport {\r\n//getSpecification2 as getSpecification,\r\n// getPositionInfo2 as getPositionInfo,\r\n//getLiquidityInfo2 as getLiquidityInfo,\r\n//getWalletBalance2 as getWalletBalance,\r\n//getFundingRate2 as getFundingRate,\r\n//getLiquidityUsed2 as getLiquidityUsed,\r\ngetFundingRateCache2 as getFundingRateCache,\r\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\r\ngetSlpWalletBalance2 as getSlpWalletBalance,\r\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\r\ngetClpWalletBalance2 as getClpWalletBalance,\r\n//getDeriBalance2 as getDeriBalance,\r\n//getTradeHistory2 as getTradeHistory,\r\nfetchRestApi,\r\n} from './api/restApi';\r\n\r\n// export {\r\n  //tradeWithMargin2 as tradeWithMargin,\r\n  //closePosition2 as closePosition,\r\n  //depositMargin2 as depositMargin,\r\n  //withdrawMargin2 as withdrawMargin,\r\n  //addLiquidity2 as addLiquidity,\r\n  //removeLiquidity2 as removeLiquidity,\r\n// } from './api/contractTransactionApiV2'\r\n\r\nexport * from './api/lpPoolApi';\r\n\r\nexport * from './api_wrapper';\r\n\r\nexport {\r\n  getPoolConfigList,\r\n  getFilteredPoolConfigList,\r\n  getPoolBTokensBySymbolId,\r\n  setBroker,\r\n  airdropPToken,\r\n  isUserPTokenExist,\r\n  getAirdropPTokenWhitelistCount,\r\n} from './v2';\r\n","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      // if (isBrowser() && !isJsDom()) {\r\n      //   this.web3 = metaMaskWeb3();\r\n      // } else {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      // }\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        // ignore the metamask error\r\n      }\r\n    }\r\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args, accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const offchainOracleAbi= [{\"inputs\": [{\"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\"}, {\"internalType\": \"address\", \"name\": \"signatory_\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"delayAllowance_\", \"type\": \"uint256\"}], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\"inputs\": [], \"name\": \"delayAllowance\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"getPrice\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"price\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"signatory\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"timestamp\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"uint256\", \"name\": \"timestamp_\", \"type\": \"uint256\"}, {\"internalType\": \"uint256\", \"name\": \"price_\", \"type\": \"uint256\"}, {\"internalType\": \"uint8\", \"name\": \"v_\", \"type\": \"uint8\"}, {\"internalType\": \"bytes32\", \"name\": \"r_\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"s_\", \"type\": \"bytes32\"}], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\r\n\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\n\r\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import Web3 from 'web3';\r\nimport { metaMaskWeb3 } from '../factory/web3';\r\nimport { hexToNumber } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window.ethereum !== undefined) {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\n/**\r\n * Get balance of the connected account\r\n * @async\r\n * @method\r\n * @param {string} chainId - Id of the chain\r\n * @param {string} accountAddress - Address of the connected account\r\n * @returns {string} Account balance\r\n */\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  const web3 = metaMaskWeb3();\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  const res = Web3.utils.fromWei(balance);\r\n  return res;\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n  unlockSlp,\r\n  // addSlpLiquidity,\r\n  // removeSlpLiquidity,\r\n} from './slpPoolApi';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n  unlockClp2,\r\n  // addSlpLiquidity,\r\n  // removeSlpLiquidity,\r\n} from './clp2PoolApi';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n  unlockClp,\r\n  // addClpLiquidity,\r\n  // removeClpLiquidity,\r\n} from './clpPoolApi';\r\n\r\nimport {\r\n  addSlpLiquidity2 as addSlpLiquidity,\r\n  removeSlpLiquidity2 as removeSlpLiquidity,\r\n  addClpLiquidity2 as addClpLiquidity,\r\n  removeClpLiquidity2 as removeClpLiquidity,\r\n  addClp2Liquidity2 as addClp2Liquidity,\r\n  removeClp2Liquidity2 as removeClp2Liquidity,\r\n} from './contractTransactionApiV2'\r\nimport { getLpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  load(version){\r\n    const current = version && version.current;\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(version){\r\n      configs = configs.filter(c => c.version === version.current)\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","import { getContractAddressConfig as getContractAddressConfig2 } from \"../config\";\r\nimport { getPoolConfigList as getPoolConfigListV2} from \"../v2/config\"\r\n//import { getPoolVersion } from '../v2';\r\n\r\nexport const getContractAddressConfig = (env = 'dev', version) => {\r\n  if (!version || version === '1' || version === 'v1') {\r\n    return getContractAddressConfig2(env)\r\n  } else if (version === 'v2' || version === 'v2_lite') {\r\n    return getPoolConfigListV2(version)\r\n  } else {\r\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\r\n  }\r\n}","import { getLiquidityInfo2 } from '../api/restApi';\r\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\r\nimport { \r\n  getLiquidityInfo as getLiquidityInfoV2,\r\n  getPoolLiquidity as getPoolLiquidityV2,\r\n  getPoolInfoApy as getPoolInfoApyV2,\r\n  getLiquidityInfoV2l,\r\n  getPoolLiquidityV2l,\r\n  getPoolInfoApyV2l,\r\n  getPoolVersion,\r\n } from '../v2';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPoolLiquidityV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPoolInfoApyV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\r\nimport {\r\n  addLiquidity as addLiquidityV2,\r\n  removeLiquidity as removeLiquidityV2,\r\n  // addLiquidityWithPrices as addLiquidityV2,\r\n  // removeLiquidityWithPrices as removeLiquidityV2,\r\n  addLiquidityV2l,\r\n  removeLiquidityV2l,\r\n  getPoolVersion,\r\n} from '../v2';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getPositionInfo as getPositionInfo2,\r\n  isUnlocked as isUnlocked2,\r\n  isDeriUnlocked,\r\n  getEstimatedMargin as getEstimatedMargin2,\r\n  getEstimatedFee as getEstimatedFee2,\r\n  getEstimatedFundingRate as getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\r\n  getWalletBalance as getWalletBalance2,\r\n} from '../api/contractQueryApi'\r\n\r\nimport {\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../api/restApi'\r\n//import { bTokenFactory } from '../factory/contracts'\r\n\r\nimport {\r\n  getPositionInfo as getPositionInfoV2,\r\n  isUnlocked as isUnlockedV2,\r\n  getEstimatedMargin as getEstimatedMarginV2,\r\n  getEstimatedFee as getEstimatedFeeV2,\r\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\r\n  getSpecification as getSpecificationV2,\r\n  getWalletBalance as getWalletBalanceV2,\r\n  getFundingRate as getFundingRateV2,\r\n  getLiquidityUsed as getLiquidityUsedV2,\r\n  getFundingRateCache as getFundingRateCacheV2,\r\n\r\n  getPositionInfoV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n\r\n  getPoolVersion,\r\n} from '../v2'\r\n\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress)\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress)\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume)\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedMarginV2l(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\r\n  } else {\r\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\r\n  }\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress)\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedFundingRateV2l(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\r\n  } else {\r\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress)\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedLiquidityUsedV2l(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress)\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\r\nimport {\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../api/contractTransactionApiV2';\r\nimport {\r\n  unlock as unlockV2,\r\n  tradeWithMargin as tradeWithMarginV2,\r\n  closePosition as closePositionV2,\r\n  depositMargin as depositMarginV2,\r\n  withdrawMargin as withdrawMarginV2,\r\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\r\n  // depositMarginWithPrices as depositMarginV2,\r\n  // withdrawMarginWithPrices as withdrawMarginV2,\r\n  // closePositionWithPrices as closePositionV2,\r\n\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n\r\n  getPoolVersion,\r\n} from '../v2';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return unlockV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return withdrawMarginV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return tradeWithMarginV2l(chainId, poolAddress, accountAddress, newVolume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","\r\nimport {getTradeHistory2} from '../api/restApi';\r\nimport { \r\n  getPoolVersion,\r\n  getTradeHistoryV2,\r\n  getTradeHistoryV2l,\r\n } from '../v2';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getTradeHistoryV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n}","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\nimport {\r\n  DeriEnv,\r\n  getChainProviderUrlsConfig,\r\n  getContractAddressConfig,\r\n  getSlpContractAddressConfig,\r\n  getClpContractAddressConfig,\r\n  getClp2ContractAddressConfig,\r\n  getLpContractAddressConfig,\r\n  getDailyBlockNumberConfig,\r\n  getDeriContractAddressConfig,\r\n  getChainIds,\r\n} from './config';\r\n\r\n/** @module utils */\r\n\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport { BigNumber };\r\n\r\n/**\r\n * Change the value to BigNumber type\r\n * @func\r\n * @param {string|number} value - the number that need to changed to BigNumber type\r\n * @param {string} base - base of the number\r\n * @returns {BigNumber}\r\n */\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\n/**\r\n * Get the max value\r\n * @func\r\n * @param {BigNumber} value1\r\n * @param {BigNumber} value2\r\n * @returns {BigNumber}\r\n */\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\n/**\r\n * Get the min value\r\n * @func\r\n * @param {BigNumber} value1\r\n * @param {BigNumber} value2\r\n * @returns {BigNumber}\r\n */\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\n/**\r\n * Convert the number to a fixed precision\r\n * @func\r\n * @param {string} value - the number that need to convert\r\n * @param {number} num - the number for method toFixed()\r\n * @returns {string}\r\n */\r\nexport const toNatural = (value, num = 0) =>\r\n  BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\nexport const hexToNaturalWithPercentage = (value) =>\r\n  `${bg(hexToNumberString(value), -18)\r\n    .sd(4)\r\n    .times(100)\r\n    .toFixed(4)\r\n    .toString()}%`;\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const deriToNaturalWithPercentage = (value) =>\r\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const hasInvalidArgsValue = (...args) =>\r\n  args.some(\r\n    (i) =>\r\n      // console.log(bg(i))\r\n      isNaN(i.toString()) || i.toString() === '0'\r\n  );\r\n\r\n// language\r\nexport const isObject = (obj) => typeof obj === 'object';\r\n\r\n//const np = () => {}\r\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// http\r\nexport const checkHttpServerIsAlive = async (url) => {\r\n  try {\r\n    //const response = await fetch(url);\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    //console.log(err);\r\n  }\r\n  return false;\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getAliveHttpServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n    if (await checkHttpServerIsAlive(url)) {\r\n      //console.log(url)\r\n      return url;\r\n    }\r\n  }\r\n  throw new Error('No alive http server in urls', urls);\r\n};\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  //console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index].url\r\n  //console.log(res)\r\n  if (res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\r\n  }\r\n};\r\n\r\n// ethereum chain\r\nexport const MAX_VALUE =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};\r\n\r\nexport const getWalletBalanceUnit = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let index;\r\n  const unitNetworkIdsMap = {\r\n    ETH: ['1', '3', '42'],\r\n    BNB: ['56', '97'],\r\n    HT: ['128', '256'],\r\n  };\r\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\r\n  for (let i = 0; i < networkIdsArray.length; i++) {\r\n    if (networkIdsArray[i].includes(chainId)) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  if (index !== undefined) {\r\n    return Object.keys(unitNetworkIdsMap)[index];\r\n  }\r\n  if (chainId === '') {\r\n    return '';\r\n  }\r\n  throw new Error('Invalid Network:', chainId);\r\n};\r\n\r\nexport const getPoolBaseSymbolList = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let result = [];\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const { bTokenSymbol, symbol } = pools[i];\r\n    if (bTokenSymbol && symbol) {\r\n      result.push(`${symbol}/${bTokenSymbol}`);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getPoolBaseTokenAddressObject = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let result = {};\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const { bTokenSymbol, symbol, pool } = pools[i];\r\n    const key = `${symbol}/${bTokenSymbol}`;\r\n    if (bTokenSymbol && symbol) {\r\n      result[key] = pool;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\r\n//   if (pool.length > 0) {\r\n//     return [\r\n//       pool[0].pool,\r\n//       pool[0].bToken,\r\n//       pool[0].pToken,\r\n//       pool[0].lToken,\r\n//       pool[0].dToken,\r\n//       pool[0].MiningVault,\r\n//       pool[0].initialBlock,\r\n//     ];\r\n//   }\r\n//   console.log(\r\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\r\n//   );\r\n//   return [];\r\n// };\r\n\r\n// get config by poolAddress\r\nexport const getPoolContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  }\r\n  // console.log(\r\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  // );\r\n  return [];\r\n};\r\n\r\nexport const getMiningVaultContractAddress = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\n// export const getMiningVaultRouterContractAddress = (chainId) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   if (pools.length > 0) {\r\n//     if (pools[0].MiningVaultRouter) {\r\n//       return pools[0].MiningVaultRouter;\r\n//     }\r\n//   }\r\n// };\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  }\r\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\r\n};\r\n\r\nexport const getSlpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n    };\r\n  }\r\n  console.log(\r\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n    };\r\n  }\r\n  console.log(\r\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getClpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n    };\r\n  }\r\n  console.log(\r\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getLpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriContractAddress = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getOracleUrl = (chainId, poolAddress) => {\r\n  const env = DeriEnv.get()\r\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\r\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\r\n    }\r\n    return 'https://oracle4.deri.finance/price';\r\n  } else {\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\r\n    }\r\n    // for test\r\n    return 'https://oracle2.deri.finance/price';\r\n  }\r\n};\r\n\r\nexport const getOracleInfo = async (chainId, poolAddress) => {\r\n  let url = getOracleUrl(chainId, poolAddress);\r\n  //console.log('oracle url', url);\r\n  let retry = 2;\r\n  //let timeout = 1000;\r\n  let res;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    //if (res && !res.timeout) {\r\n    if (res.ok) {\r\n      break;\r\n    }\r\n    //console.log('get oracle info timeout')\r\n    retry -= 1;\r\n    //timeout += 800;\r\n  }\r\n  if (retry === 0 && !res) {\r\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\r\n  const responseJson = await getOracleInfo(chainId, poolAddress);\r\n  let price = responseJson.price;\r\n  if (!price) {\r\n    price = '0';\r\n  }\r\n  return deriToNatural(responseJson.price).toString();\r\n};\r\nexport const getOraclePrice = getBTCUSDPrice;\r\n\r\nexport const getChainProviderUrl = async(chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrlsConfig(chainId)\r\n  if (urls.length > 0) {\r\n    return await getLatestRPCServer(urls)\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const format = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`)\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`)\r\n  }\r\n};","import { bg, getDailyBlockNumber } from '../utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = tradersNetVolume.times(price).times(multiplier);\r\n  const removable = liquidity\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = volume\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = liquidity\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (margin.plus(amount).gte(minMargin)) {\r\n    if (\r\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import {\r\n  bTokenFactory,\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory/contracts';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\r\nimport {\r\n  getPoolContractAddress,\r\n  getMiningVaultContractAddress,\r\n  getBTCUSDPrice,\r\n  bg,\r\n  naturalToDeri,\r\n  BigNumber,\r\n  format,\r\n  getDeriContractAddress,\r\n} from '../utils';\r\nimport {\r\n  getMiningVaultRouterContractAddress\r\n} from '../config'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transactPool(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriContractAddress(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  getPoolContractAddress,\r\n} from '../utils';\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const userInfo = await getUserInfo(userAddress);\r\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\r\n  const userInfoTotal = await getUserInfoTotal(userAddress);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import {\r\n  getPoolContractAddress,\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../utils';\r\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getRestServerConfig, DeriEnv } from '../config';\r\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './tradeHistoryApi';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url, opts) => {\r\n  const resp = await fetch(url, opts);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import { getConfig } from './config';\r\n\r\nexport const getOracleConfigList = (version) => {\r\n  const config = getConfig(version)\r\n  return config.oracle\r\n};\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return ['AXSUSDT', 'MANAUSDT', 'MBOXUSDT', 'IBSCDEFI'].includes(symbol);\r\n};\r\nexport const mapToSymbol = (symbol) => {\r\n  switch(symbol) {\r\n    case 'IBSCDEFI':\r\n      return 'iBSCDEFI'\r\n    default:\r\n      return symbol\r\n  }\r\n}\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  switch(symbol) {\r\n    case 'iBSCDEFI':\r\n      return 'IBSCDEFI'\r\n    default:\r\n      return symbol\r\n  }\r\n}\r\n\r\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const filteredByChainId = getOracleConfigList(version).filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  throw new Error(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import {\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n} from './contractTransactionApi';\r\nimport {\r\n  addSlpLiquidity,\r\n  removeSlpLiquidity,\r\n} from './slpPoolApi'\r\nimport {\r\n  addClpLiquidity,\r\n  removeClpLiquidity,\r\n} from './clpPoolApi'\r\nimport {\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2PoolApi'\r\nimport { wsInstance } from './apiGlobals'\r\nimport { getRestServerConfig, DeriEnv } from '../config'\r\n\r\nconst wsOnPromise = (ws, event) => {\r\n  return new Promise((resolve) => {\r\n    ws.on(event, function(data){\r\n      resolve(JSON.parse(data))\r\n    })\r\n  })\r\n}\r\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\r\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\r\n  await ws.send(methodCall)\r\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\r\n  //console.log('res', res)\r\n  return res\r\n}\r\n\r\nexport const tradeWithMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const closePosition2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const depositMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const withdrawMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\nexport const addClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};","import { perpetualPoolFactory } from '../factory/contracts';\r\nimport { getBTCUSDPrice } from '../utils';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(chainId, poolAddress) {\r\n      try {\r\n        const res = await getBTCUSDPrice(chainId, poolAddress);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(chainId, poolAddress) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(chainId, poolAddress);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n}\r\nexport default new Version()","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\n","import {\r\n  bTokenFactory,\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory/contracts';\r\nimport { getPoolInfoApy } from './databaseApi';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './apiGlobals';\r\nimport {\r\n  hasInvalidArgsValue,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  getPoolContractAddress,\r\n  getBTCUSDPrice,\r\n  bg,\r\n  BigNumber,\r\n  getDeriContractAddress,\r\n} from '../utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  let price = ''\r\n  try {\r\n    price = await getBTCUSDPrice(chainId, poolAddress);\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    await priceCache.update(chainId, poolAddress);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (hasInvalidArgsValue(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (hasInvalidArgsValue(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  return (await deri.balance(accountAddress)).toString();\r\n};\r\n","var map = {\n\t\"./de/Signin.json\": 601,\n\t\"./de/bridge.json\": 602,\n\t\"./de/broker.json\": 603,\n\t\"./de/dip-history.json\": 604,\n\t\"./de/footer.json\": 605,\n\t\"./de/governance.json\": 606,\n\t\"./de/header.json\": 607,\n\t\"./de/home.json\": 608,\n\t\"./de/lite.json\": 609,\n\t\"./de/mining.json\": 610,\n\t\"./de/mobile-lite.json\": 611,\n\t\"./de/pro.json\": 612,\n\t\"./de/team.json\": 613,\n\t\"./en/Signin.json\": 614,\n\t\"./en/bridge.json\": 615,\n\t\"./en/broker.json\": 616,\n\t\"./en/dip-history.json\": 617,\n\t\"./en/footer.json\": 618,\n\t\"./en/governance.json\": 619,\n\t\"./en/header.json\": 620,\n\t\"./en/home.json\": 621,\n\t\"./en/lite.json\": 622,\n\t\"./en/mining.json\": 623,\n\t\"./en/mobile-lite.json\": 624,\n\t\"./en/pro.json\": 625,\n\t\"./en/team.json\": 626,\n\t\"./zh/Signin.json\": 627,\n\t\"./zh/bridge.json\": 628,\n\t\"./zh/broker.json\": 629,\n\t\"./zh/dip-history.json\": 630,\n\t\"./zh/footer.json\": 631,\n\t\"./zh/governance.json\": 632,\n\t\"./zh/header.json\": 633,\n\t\"./zh/home.json\": 634,\n\t\"./zh/lite.json\": 635,\n\t\"./zh/mining.json\": 636,\n\t\"./zh/mobile-lite.json\": 637,\n\t\"./zh/pro.json\": 638,\n\t\"./zh/team.json\": 639\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 600;","import { isUsedRestOracle } from '../config/oracle';\r\nimport {\r\n  WooOracle,\r\n  WrappedOracle,\r\n  // OffchainOracle,\r\n  BrokerManager,\r\n  PTokenAirdrop,\r\n  BToken,\r\n} from '../contract';\r\nimport { RestOracle } from '../utils'\r\n\r\nexport const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal) => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      // if (['80001'].includes(chainId)) {\r\n      //   instanceMap[key] = new ChainlinkOracle(\r\n      //     chainId,\r\n      //     address,\r\n      //     symbol,\r\n      //     decimal\r\n      //   );\r\n      // } else if (['137', '97'].includes(chainId)) {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (['56', '137', '97','80001'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\n\r\nexport const bTokenFactory = factory(BToken);\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\n\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\n\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  }\r\n  if(isMobile){\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport WebSocket from \"socket.io-client\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n\r\n  initWebSocket(){\r\n    if(this.ws === null) {\r\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \r\n        transports: ['websocket'],\r\n        withCredentials: true\r\n      })\r\n      this.ws.on('connect',() => {\r\n        if(this.already){\r\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n          console.log('ws is reconnected already')\r\n        }\r\n        console.log('ws is already connected');\r\n      });\r\n    }    \r\n  }\r\n\r\n\r\n  load(symbol,timeType = 'min'){\r\n    // symbol = symbol+'_V2'\r\n    this.initWebSocket()\r\n    this.ws.on('kline_update',data => {\r\n      const obj = {}\r\n      let time = data.time\r\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\r\n        obj.time = time \r\n        obj.low = Number(data.low)\r\n        obj.high = Number(data.high)\r\n        obj.open = Number(data.open)\r\n        obj.close = Number(data.close)\r\n        obj.volume = Number(data.volume)\r\n        obj.time_type = data.time_type\r\n        obj.symbol = data.symbol\r\n        if(!this.paused) {\r\n          this.setIndex(obj.close)\r\n          for(const key of Object.keys(this.listeners)){\r\n            if(typeof this.listeners[key] === 'function'){\r\n              this.listeners[key](obj)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol);\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  unsubscribeBars(symbol){\r\n    if(this.ws){\r\n      this.ws.emit('un_get_kline_update', {\r\n        symbol : symbol, 'time_type' : 'min'\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //暂不用\r\n  loadHistory(symbol,timeType,callback){\r\n    this.ws.on('kline_history', data => {\r\n      const history = data.map(el => {\r\n        return {\r\n          time: el.time,\r\n          low: Number(el.low),\r\n          high: Number(el.high),\r\n          open: Number(el.open),\r\n          close: Number(el.close),\r\n          volume: Number(el.volume)\r\n        }\r\n      })\r\n      if(callback){\r\n        console.log('history ->',history[history.length-1].time)\r\n        callback(history)\r\n      }\r\n    })\r\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\r\n  }\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\r\n\r\nexport default class Position {\r\n\r\n  callback = () => {}\r\n   wallet = null;\r\n   spec = null\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      // const fundingFee = await getFun\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n\r\n   \r\n\r\n\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:'BUSD',\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    minInitialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\r\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config){\r\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,version,finishedCallback){    \r\n    const all = await this.configInfo.load(version);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      const symbol = getFormatSymbol(config.symbol)\r\n      this.oracle.unsubscribeBars(symbol);\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      this.oracle.load(symbol)\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\r\n        this.contractInfo.load(wallet,config),\r\n        this.loadFundingRate(wallet,config),\r\n        this.historyInfo.load(wallet,config)\r\n      ]).then(results => {\r\n        if(results.length === 4){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    this.configs = configs\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\r\n      this.setVolume(volume.toFixed(0))\r\n    }\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    \r\n    return ''\r\n  }\r\n\r\n\r\n\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nexport const metaMaskWeb3 = (function () {\r\n  let web3Instance = null;\r\n  return () => {\r\n    if (web3Instance !== null) {\r\n      return web3Instance;\r\n    }\r\n    if (typeof window.ethereum !== undefined) {\r\n      web3Instance = new Web3(window.ethereum);\r\n      return web3Instance;\r\n    } else {\r\n      // console.log(\"Please install MetaMask first\")\r\n      throw new Error('Please install MetaMask first');\r\n    }\r\n  };\r\n})();\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      console.log(`--- web3factory init (${chainId}) ---`)\r\n      // using metaMask ethereum object\r\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else if (isBrowser() && !isJsDom()) {\r\n        // MetaMask plugin is not installed in the browser\r\n        throw new Error('Please install MetaMask first');\r\n      } else {\r\n        const providerUrl = await getChainProviderUrl(chainId);\r\n        web3InstanceMap[chainId] = new Web3(\r\n          new Web3.providers.HttpProvider(providerUrl)\r\n        );\r\n        return web3InstanceMap[chainId];\r\n      }\r\n    },\r\n  };\r\n})();","import { DeriEnv } from '../../config';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\r\n\r\nconst validateConfigV2 = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['bTokens'], 'bTokens');\r\n  config['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processConfigV2 = (config) => {\r\n  // process config\r\n  config['bTokenCount'] = config['bTokens'].length;\r\n  config['symbolCount'] = config['symbols'].length;\r\n};\r\n\r\nconst validateConfigV2Lite = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2Lite = (config) => {\r\n  // process config\r\n  config['symbolCount'] = config['symbols'].length;\r\n};\r\n\r\nconst getJsonConfig = (version) => {\r\n  const env = DeriEnv.get();\r\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\r\n    configs = configs[version]\r\n  }\r\n  if (['prod', 'dev'].includes(env)){\r\n    //console.log(env)\r\n    if (configs && configs[env]) {\r\n      //console.log(configs[env])\r\n      const pools = configs[env].pools;\r\n      if (pools && Array.isArray(pools)) {\r\n        if (version === 'v2') {\r\n          for (let i = 0; i < pools.length; i++) {\r\n            validateConfigV2(pools[i]);\r\n            processConfigV2(pools[i]);\r\n          }\r\n        } else if (version === 'v2_lite') {\r\n          for (let i = 0; i < pools.length; i++) {\r\n            validateConfigV2Lite(pools[i]);\r\n            processConfigV2Lite(pools[i]);\r\n          }\r\n        }\r\n      }\r\n      //console.log(configs[env])\r\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\r\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n      return configs[env];\r\n    }\r\n  }\r\n  throw new Error(\r\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n  );\r\n};\r\n\r\nexport const getConfig = (version='v2') => {\r\n  return getJsonConfig(version);\r\n};\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { wooOracleAbi } from '../abis';\r\nimport { bg } from '../../utils';\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    const res = await this._call('_I_')\r\n    return bg(res, `-${this.decimal}`).toString();\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { chainlinkOracleAbi } from '../abis';\r\nimport { bg } from \"../../utils\";\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, chainlinkOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('latestRoundData');\r\n    if (res && res.answer) {\r\n      return bg(res.answer, `-${this.decimal}`).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from \"./contract_base\";\r\nimport { brokerManagerAbi } from './abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { offchainOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class OffchainOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, offchainOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from './contract_base'\r\nimport { pTokenAirdropAbi } from './abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import { ContractBase } from './contract_base'\r\nimport { bTokenLiteAbi } from './abis';\r\nimport { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenLiteAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async transfer() {\r\n  // call transfer\r\n  // }\r\n}","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\r\nimport { getSlpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balance(poolAddress),\r\n      bToken.balance(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { DeriEnv } from '../../config';\r\nimport { getConfig } from './config';\r\nimport { mapToSymbol } from './oracle';\r\n\r\nconst expendPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: mapToSymbol(symbol.symbol),\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expendPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          router: pool.router,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: mapToSymbol(symbol.symbol),\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite',\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getPoolConfigList = (version='v2') => {\r\n  const config = getConfig(version)\r\n  if (version === 'v2') {\r\n    return expendPoolConfigV2(config)\r\n  } else if (version === 'v2_lite') {\r\n    return expendPoolConfigV2Lite(config)\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version)\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  // check the bToken in v2_lite\r\n  if (version === 'v2_lite') {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\r\n    return acc.concat(getConfig(version)['pools'])\r\n  }, [])\r\n  //console.log('pools', pools)\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  const config = getConfig(version)\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool\r\n  }\r\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n","import { getConfig } from './config';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getConfig(version)\r\n  return config.brokerManager\r\n};\r\n\r\nexport const getBrokerConfig = (chainId, version) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\r\nimport { getClp2ContractAddress } from '../utils';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balance(poolAddress),\r\n      bToken.balance(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory/contracts';\r\nimport { bg, getClpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import { ContractBase } from '../contract_base'\r\nimport { perpetualPoolAbi } from '../abis';\r\nimport { deriToNatural, hexToNumber, bg } from '../../utils'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { perpetualPoolRouterAbi} from '../abis';\r\nimport { naturalToDeri } from '../../utils'\r\nimport { MAX_INT256 } from '../../config';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from '../contract_base'\r\nimport { lTokenAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils'\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils'\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}"],"sourceRoot":""}