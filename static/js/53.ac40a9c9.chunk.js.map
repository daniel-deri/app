{"version":3,"sources":["mobile/pages/Mining/Mining.js"],"names":["env","DeriEnv","get","chainInfo","config","inject","observer","wallet","lang","currentTab","setCurrentTab","useState","version","chainId","baseToken","address","type","useParams","query","useQuery","networkText","name","isController","setIsController","props","poolInfoClass","classnames","has","useEffect","detail","account","async","openConfigListCache","update","openConfigList","res","isPoolController","isPoolAdmin","className","onClick","alert"],"mappings":"4KAAA,2HAYA,MAAMA,EAAMC,IAAQC,OACd,UAACC,GAAaC,EAAOJ,GAkEZK,sBAAO,SAAPA,CAAiBC,aAhEhC,UAAgB,OAACC,EAAD,KAAQC,IACvB,MAAOC,EAAWC,GAAiBC,mBAAS,cACtC,QAACC,EAAD,QAASC,EAAT,UAAiBC,EAAjB,QAA2BC,EAA3B,KAAmCC,GAASC,sBAC5CC,EAAQC,cACRC,EAAcjB,EAAUU,GAASQ,MAChCC,EAAaC,GAAmBZ,oBAAS,GAC1Ca,EAAQ,CAACZ,UAAQC,UAAQC,YAAUC,UAAQR,SAAOS,OAAKR,QACvDiB,EAAgBC,IAAW,cAAcjB,GA+B/C,OA9BGS,EAAMS,IAAI,iBACZH,EAAK,YAAkBN,EAAMhB,IAAI,gBAE/BgB,EAAMS,IAAI,cACZH,EAAK,SAAeN,EAAMhB,IAAI,aAiB/B0B,qBAAU,KAfqBrB,GAAUA,EAAOsB,QAAUtB,EAAOsB,OAAOC,SAiBvD,iBAAZlB,IANkBmB,iBAChBC,KAAoBC,UAMxBC,GAhBiBH,WACnB,IAAII,QAAYC,aAAiB7B,EAAOsB,OAAOhB,QAAQE,EAAQR,EAAOsB,OAAOC,SAC7EP,EAAgBY,IAedE,MAGD,CAAC9B,EAAOA,EAAOsB,OAAOd,IAGrB,sBAAKuB,UAAWb,EAAhB,UACD,sBAAKa,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UACGxB,EADH,MACiBM,KAEJ,iBAAZR,GAA8B,qBAAK0B,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,IAAM7B,EAAc,aAA/D,SACEF,EAAK,2BAIX,qBAAK8B,UAAU,YAAf,SACE,cAAC,IAAD,IAAqBd,MAEtBF,GAAgB,mCAChB,qBAAKgB,UAAU,aAAf,SACC,wBAAQC,QAAS,KAjCpBC,MAAMhC,EAAK,mBAiCR,SACEA,EAAK","file":"static/js/53.ac40a9c9.chunk.js","sourcesContent":["import {useEffect,useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\nimport './mining.less'\nimport './de-mining.less'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst {version,chainId,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId].name;\n\tconst [isController,setIsController] = useState(false)\n\tconst props = {version,chainId,baseToken,address,wallet,type,lang}\n\tconst poolInfoClass = classnames('mining-info',currentTab)\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n\n\tconst isPoolAdmin = async () => {\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account)\n\t\tsetIsController(res)\n\t}\n\n\tconst gotoMining = ()=>{\n\t\talert(lang['please-operat'])\n\t}\n\n\tconst openConfigList = async ()=>{\n\t\tawait openConfigListCache.update()\n\t}\n\n\tuseEffect(()=>{\n\t\tif(hasConnectWallet()){\n\t\t\tif(version === 'v2_lite_open'){\n\t\t\t\topenConfigList()\n\t\t\t\tisPoolAdmin()\n\t\t\t}\n\t\t}\n\t},[wallet,wallet.detail,address])\n\t\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t\t{baseToken} @ {networkText}\n\t\t\t\t\t</div>\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t</div>\n\t\t\t{isController && <>\n\t\t\t\t<div className='add-symbol'>\n\t\t\t\t\t<button onClick={() => gotoMining()} >\n\t\t\t\t\t\t{lang['add-symbol']}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</>}\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}