{"version":3,"sources":["utils/DeriNumberFormat.js","components/Button/Button.js","hooks/useMiningPool.js","components/Pool/PoolBox.js","desktop/components/Mining/Pool.js"],"names":["DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","allowZero","others","undefined","value","isNaN","Math","abs","displayType","Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","lang","status","setStatus","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","onClick","a","beforeAction","afterAction","current","style","display","loadApproveStatus","detail","account","pool","bTokenId","res","approve","success","alert","ref","marginRight","env","DeriEnv","get","chainInfo","config","useMiningPool","isNew","loaded","setLoaded","pools","setPools","v1Pools","setV1Pools","v2Pools","setV2Pools","legacyPools","setLegacyPools","preminingPools","setPreminingPools","mapConfig","getPoolLiquidity","chainId","liqPool","getPoolInfoApy","apyPool","Object","assign","network","name","liquidity","apy","toFixed","formatAdd","formatAddress","address","type","multiplier","groupByNetwork","all","reduce","total","find","item","eqInNumber","list","length","push","poolInfo","symbol","version","airdrop","bTokenSymbol","symbolId","v2Configs","getContractAddressConfig","v1Configs","liteConfigs","getPreminingContractConfig","configs","concat","pos","findIndex","indexOf","map","slpConfig","getLpContractAddressConfig","liqInfo","isLP","getLpPoolInfoApy","lapy","lpApy","apy2","isSushiLP","label","isCakeLP","allConfigs","Promise","then","filter","p","retired","legacy","premining","preminings","chainConfig","Card","card","index","buttonElement","setButtonElement","connected","setConnected","history","useHistory","connectWallet","connect","claimAirdrop","getUserInfoAllForAirDrop","info","valid","mintAirdrop","isConnected","url","gotoMining","thousandSeparator","decimalScale","title","suffix","inject","observer","group","poolClass","classNames","toUpperCase","target","rel","href","loading"],"mappings":"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","file":"static/js/15.a05cc2b6.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState('--');\r\n\r\n  useEffect(() => {\r\n    const {allowZero,...others} = props \r\n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\r\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\r\n    } \r\n    return () => {};\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}","import {useState,useRef,useEffect} from 'react';\r\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\r\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\r\n  const [isApproved, setIsApproved] = useState(true);\r\n  const [pending, setPending] = useState(false);\r\n  const [buttonText, setbuttonText] = useState(btnText)\r\n  const loadRef = useRef(null)\r\n\r\n  const onClick = async () => {\r\n    if(status !== 'enabled') {\r\n      return ;\r\n    }\r\n    beforeAction()\r\n    const result = await click();    \r\n    if(result){\r\n      afterClick && afterClick()\r\n    } \r\n    afterAction()\r\n  }\r\n\r\n  const beforeAction = ()  => {\r\n    setStatus('disabled')\r\n    setPending(true);\r\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\r\n  }\r\n\r\n  const afterAction = () => {\r\n    loadRef.current && (loadRef.current.style.display = 'none')\r\n    setStatus('enabled')\r\n    setPending(false);\r\n  }\r\n\r\n  const loadApproveStatus = async () => {\r\n    if(checkApprove && wallet && wallet.detail.account){\r\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\r\n      setIsApproved(res);\r\n    }\r\n  }\r\n  const approve = async () => {\r\n    beforeAction();\r\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\r\n    if(res.success){\r\n      setIsApproved(true);\r\n    } else {\r\n      setIsApproved(false)\r\n      alert(lang['approve-failed'])\r\n    }\r\n    afterAction();\r\n  }\r\n\r\n  const action = () => {\r\n    if(isApproved){\r\n      onClick();\r\n    } else {\r\n      approve();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadApproveStatus();\r\n    return () => {};\r\n  }, [wallet,spec,checkApprove]);\r\n\r\n  useEffect(() => {\r\n    if(btnText){\r\n      setbuttonText(btnText)\r\n    }\r\n    return () => {\r\n    }\r\n  }, [btnText])\r\n\r\n  return(\r\n    <button className={className} onClick={action} >\r\n        <span className='btn-loading-wrap'>\r\n          <span ref={loadRef}\r\n            className='spinner spinner-border spinner-border-sm'\r\n            style={{display : 'none' ,marginRight : '2'}}>\r\n          </span>\r\n        </span>\r\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\r\n        </button>\r\n  )\r\n}","import {useState,useEffect} from 'react';\r\nimport {\r\n  DeriEnv,\r\n  getContractAddressConfig,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getLpContractAddressConfig,\r\n  getLpPoolInfoApy,\r\n  getPreminingContractConfig\r\n} from '../lib/web3js/indexV2'\r\nimport config from '../config.json'\r\nimport { formatAddress, isLP,isSushiLP,isCakeLP, eqInNumber } from '../utils/utils';\r\nimport Intl from '../model/Intl';\r\n\r\nconst env = DeriEnv.get();\r\nconst {chainInfo} = config[env]\r\n\r\nexport default function useMiningPool(isNew){\r\n  const [loaded,setLoaded] = useState(false)\r\n  const [pools, setPools] = useState([])\r\n  const [v1Pools, setV1Pools] = useState([])    \r\n  const [v2Pools, setV2Pools] = useState([])\r\n  const [legacyPools, setLegacyPools] = useState([])\r\n  const [preminingPools, setPreminingPools] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    const mapConfig = async (config) => {\r\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\r\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\r\n      const pool = config.pool || ''\r\n      return Object.assign(config,{ \r\n        network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\r\n        liquidity : liqPool.liquidity,\r\n        apy :  ((+apyPool.apy) * 100).toFixed(2),\r\n        formatAdd : formatAddress(pool),\r\n        address : pool,\r\n        type : 'perpetual',\r\n        buttonText : 'STAKING',\r\n        multiplier : apyPool.multiplier \r\n      })\r\n    }\r\n    const groupByNetwork = pools => {\r\n      const all = []\r\n      pools.reduce((total,pool) => {\r\n        const find = total.find(item => eqInNumber(item['pool']['address'],pool['address']))\r\n        if(find && find.list.length < 5){\r\n          find['list'].push(pool)\r\n        } else {\r\n          const poolInfo = {\r\n            pool : {\r\n              network : pool.network,\r\n              symbol : pool.symbol,\r\n              address : pool.address,\r\n              formatAdd : pool.formatAdd,\r\n              version : pool.version,\r\n              // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\r\n              chainId : pool.chainId,\r\n              airdrop : pool.airdrop,\r\n              type : pool.type,\r\n              bTokenSymbol : pool.bTokenSymbol,\r\n              bTokenId : pool.bTokenId,\r\n              symbolId : pool.symbolId\r\n            },\r\n            list : [pool]\r\n          }\r\n          total.push(poolInfo)\r\n        }\r\n        return total;\r\n      },all)\r\n      return all;\r\n    }\r\n    let v2Configs = getContractAddressConfig(env,'v2')\r\n    let v1Configs = getContractAddressConfig(env,'v1')\r\n    const liteConfigs = getContractAddressConfig(env,'v2_lite')\r\n    const preminingPools = getPreminingContractConfig(env);\r\n    const all = []\r\n    let configs = v2Configs.concat(v1Configs).concat(preminingPools).concat(liteConfigs).reduce((total,config) => {\r\n      const pos = total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol && config.version === item.version)\r\n      if((config.version === 'v2' || config.version === 'v2_lite')  && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\r\n        total[pos].symbol += `,${config.symbol}` \r\n      } else {\r\n        total.push(config)\r\n      }\r\n      return total;\r\n    },all);\r\n    \r\n    configs = configs.map(mapConfig)\r\n    const slpConfig = getLpContractAddressConfig(env).map(async config => {\r\n      const liqInfo = await getPoolLiquidity(config.chainId,config.pool) || {}\r\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {} \r\n      const pool = config.pool || ''      \r\n      let lpApy;\r\n      let label;\r\n      if(isLP(config.pool)){\r\n        let lapy = await getLpPoolInfoApy(config.chainId,config.pool);\r\n        lpApy = lapy && ((+lapy.apy2) * 100).toFixed(2);           \r\n      }\r\n      if(isSushiLP(config.pool)){\r\n        label = 'SUSHI-APY'\r\n      }\r\n      if(isCakeLP(config.pool)){\r\n        label = 'CAKE-APY'\r\n      }\r\n      return Object.assign(config,{\r\n        network : chainInfo[config.chainId].name,\r\n        liquidity : liqInfo.liquidity,\r\n        apy : ((+apyPool.apy) * 100).toFixed(2),\r\n        formatAdd : formatAddress(pool),\r\n        lpApy : lpApy,\r\n        address : pool,\r\n        type : 'lp',\r\n        label:label,\r\n        buttonText : 'STAKING'\r\n      })    \r\n    })\r\n    const allConfigs = configs.concat(slpConfig)\r\n    Promise.all(allConfigs).then(pools => {\r\n      const airDrop = {\r\n        network : 'BSC',\r\n        bTokenSymbol : 'GIVEAWAY',\r\n        liquidity : '34240',\r\n        symbol : '--',\r\n        airdrop : true,\r\n        chainId : 56,\r\n        buttonText : 'CLAIM'\r\n      }\r\n      // pools.push(airDrop)\r\n      let v1Pools = pools.filter(p => (p.version === 'v1' || !p.version) && !p.retired)\r\n      let v2Pools = pools.filter(p => (p.version === 'v2' || p.version === 'v2_lite'  )&& !p.retired)\r\n      const legacy = pools.filter(p => p.retired && !p.premining)\r\n      const preminings = pools.filter(p =>  p.retired && p.premining) \r\n      //新版本按照网络来分组\r\n      if(isNew){\r\n        v1Pools = groupByNetwork(v1Pools);\r\n        v2Pools = groupByNetwork(v2Pools);\r\n      }\r\n      setV2Pools(v2Pools);\r\n      setV1Pools(v1Pools);\r\n      setPools(pools);\r\n      setLegacyPools(legacy);\r\n      setPreminingPools(preminings)\r\n      setLoaded(true)\r\n    })\r\n    return () => pools.length = 0\r\n  },[])\r\n  return [loaded,pools,v1Pools,v2Pools,legacyPools,preminingPools];\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport config from  '../../config.json'\r\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\r\nimport { inject, observer } from 'mobx-react';\r\nimport Button from '../Button/Button.js';\r\nimport { eqInNumber, addParam } from '../../utils/utils.js';\r\nimport classNames from 'classnames';\r\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\r\n\r\nfunction PoolBox({wallet,group = {},lang}){\r\n  const {pool,list} = group\r\n\r\n  \r\n\r\n  const poolClass = classNames('pool',{\r\n    'only-one' : list.length === 1 ,\r\n    'full' : list.length === 5\r\n  })\r\n\r\n  return(\r\n    <div className={poolClass} >\r\n      <div className='pool-header' >\r\n        <div className='left'>\r\n          <div className=\"network\">\r\n            {pool.network && pool.network.toUpperCase()}\r\n          </div>\r\n          <div className='pool-desc'>\r\n            <span className='symbol'>\r\n                <span className='symbol-label'>{lang['symbol']}:</span>\r\n                <span className='symbol-value'>{pool.symbol}</span>  \r\n            </span>\r\n            <span className='address'>\r\n              <span className='address-label'>{lang['address']}:</span>\r\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId] && chainConfig[pool.chainId]['viewUrl']}/address/${pool.address}`}> \r\n                  {pool.formatAdd}\r\n                </a> : '--'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='version'>{lang[pool.version]}</div>\r\n      </div>\r\n      <div className=\"pool-info\">\r\n        {list.map((card,index) => <Card card={card} key={index} index={index} pool={pool} list={list} wallet={wallet} lang={lang}/>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Card({wallet,pool,card,index,list,lang}) {\r\n  const [buttonElement, setButtonElement] = useState('');\r\n  const [connected, setConnected] = useState(false)\r\n  const history = useHistory();\r\n  const gotoMining = url => {\r\n    history.push(url)\r\n  }\r\n  const connectWallet = () => {\r\n    wallet.connect().then(() => {\r\n      setConnected(true)\r\n    })\r\n  }\r\n  const claimAirdrop = async () =>{\r\n    let info =  await getUserInfoAllForAirDrop(wallet.detail.account)\r\n    if(!info.valid){\r\n      alert(lang['no-deri-to-claim']);\r\n      return;\r\n    }\r\n    if(!eqInNumber(wallet.detail.chainId,info.chainId)){\r\n      alert(lang['please-switch-to-BSC-to-claim-deri'])\r\n      return;\r\n    }\r\n    let res = await mintAirdrop(info.chainId,wallet.detail.account)\r\n    if(!res.success){\r\n      alert(lang['claim-failed'])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(pool && pool.airdrop){\r\n      if(!wallet.isConnected()) {\r\n        setButtonElement(<Button btnText={lang['connect-wallet']} click={connectWallet} lang={lang}></Button>)\r\n      } else {\r\n        setButtonElement(<Button btnText={lang['claim']} click={claimAirdrop} lang={lang}></Button>)\r\n      }\r\n    } else {\r\n      let url = `/mining/${pool.version || 'v1'}/${pool.chainId}/${card.type}/${card.symbol}/${card.bTokenSymbol}/${pool.address}`\r\n      if(card.bTokenId){\r\n        url = `${url}?baseTokenId=${card.bTokenId}`\r\n      }\r\n      if(card.symbolId){\r\n        if(url.indexOf('?') > 0){\r\n          url = `${url}&symbolId=${card.symbolId}`\r\n        } else {\r\n          url = `${url}?symbolId=${card.symbolId}`\r\n        }\r\n      }\r\n      setButtonElement(        \r\n          <button onClick={() => gotoMining(url)}>\r\n            {lang['staking']}\r\n          </button>\r\n        )\r\n    }    \r\n    return () => {};\r\n  }, [wallet.detail.account,connected]);\r\n  return (\r\n    <>\r\n      <div className=\"info\">\r\n        <div className=\"top-info\">\r\n          <div className='pool-top'>\r\n            <span className={`logo ${card.bTokenSymbol}`} ></span>\r\n            <span className=\"base-token\">{card.bTokenSymbol}</span>\r\n          </div>\r\n          <div className=\"pool-detail\">\r\n            <div>\r\n              <span className='title'>{card.airdrop ? lang['total'] : lang['pool-liq']}</span>\r\n              <DeriNumberFormat value={card.liquidity} displayType='text' thousandSeparator={true} decimalScale={card.lpApy ? 7 : 0}/>\r\n            </div>\r\n            <div className='multiplier'>\r\n            {card.multiplier && <>\r\n              <span>{lang['multiplier']}</span>\r\n              <span className='multiplier-value' title={lang['multiplier-tip']}>{card.multiplier}x</span>\r\n              </>}\r\n            </div>\r\n            <div className=\"apy\">\r\n              <span>{lang['apy']}</span>\r\n              <span>\r\n                <span className={card.lpApy ? 'sushi-apy-underline' : ''} title={ card.lpApy && lang['deri-apy']}>\r\n                  {card.apy ? <DeriNumberFormat value={card.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \r\n                </span>\r\n                {card.lpApy &&<>\r\n                <span> + </span>\r\n                <span className={card.lpApy ? 'sushi-apy-underline' : '' } title={ card.lpApy && card.label}> <DeriNumberFormat value={card.lpApy} displayType='text' suffix='%' decimalScale={2}/></span>\r\n                </>}\r\n              </span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"bottom-btn\">\r\n        {buttonElement}\r\n      </div>\r\n    </div>\r\n    {index !== list.length-1 && <div className='top-line'></div>}\r\n  </>)\r\n}\r\nexport default  inject('wallet','version')(observer(PoolBox))","import React, { useEffect } from 'react'\r\nimport PoolBox from '../../../components/Pool/PoolBox';\r\nimport useMiningPool from '../../../hooks/useMiningPool';\r\nimport './pool.less'\r\nimport './zh-pool.less'\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n\r\nfunction Pool({lang,loading}){\r\n  const [loaded,pools,v1Pools,v2Pools] = useMiningPool(true);\r\n  useEffect(() => {\r\n    loaded ? loading.loaded() : loading.loading()\r\n    return () => {}\r\n  }, [loaded])\r\n  return (\r\n    <div className=\"mining-info\">\r\n      <div className=\"pools\">\r\n        {v2Pools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n      </div>\r\n      <div className='pools'>\r\n        {v1Pools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('version','loading')(observer(Pool))"],"sourceRoot":""}