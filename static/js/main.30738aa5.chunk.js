/*! For license information please see main.30738aa5.chunk.js.LICENSE.txt */
(this["webpackJsonpapp.deri.finance"]=this["webpackJsonpapp.deri.finance"]||[]).push([[9],{102:function(e){e.exports=JSON.parse('{"v2":{"prod":{"pools":[{"pool":"0x19c2655A0e1639B189FB0CF06e02DC0254419D92","pToken":"0x2AA5865BF556ab3f6Cd9405e565099f70234dF05","lToken":"0x6f8F1C2781b555B63F1A1BE85BF99aEe27d87cB2","router":"0xC9C234243f48Fa05A993c29B4F5f93048f5b07E4","initialBlock":"7884650","bTokens":[{"bTokenId":"0","bTokenSymbol":"BUSD","bToken":"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"},{"bTokenId":"1","bTokenSymbol":"WBNB","bToken":"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"},{"bTokenId":"2","bTokenSymbol":"CAKE","bToken":"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82"}],"symbols":[{"symbolId":"0","symbol":"BTCUSD","unit":"BTC"},{"symbolId":"1","symbol":"ETHUSD","unit":"ETH"},{"symbolId":"2","symbol":"BNBUSD","unit":"BNB"}],"chainId":"56","version":"v2"},{"pool":"0x43b4dfb998b4D17705EEBfFCc0380c6b98699252","pToken":"0x0757bC621A32b1134eCf2843955B0bBc8CA13BA1","lToken":"0xADeA18DA0aF0Ab14900A5634EdDf5A83513cdcE0","router":"0x7e412350a64bd454C800d1273CEA59c78D708EAB","initialBlock":"16247773","bTokens":[{"bTokenId":"0","bTokenSymbol":"USDT","bToken":"0xc2132D05D31c914a87C6611C10748AEb04B58e8F"},{"bTokenId":"1","bTokenSymbol":"WMATIC","bToken":"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"},{"bTokenId":"2","bTokenSymbol":"AMUSDC","bToken":"0x1a13F4Ca1d028320A707D99520AbFefca3998b7F"}],"symbols":[{"symbolId":"0","symbol":"BTCUSD","unit":"BTC"},{"symbolId":"1","symbol":"ETHUSD","unit":"ETH"}],"chainId":"137","version":"v2"}],"oracle":[{"chainId":"56","symbol":"BTCUSD","address":"0xe5709F0a23aEA3A61B0db91E92458fb6a0a55857","decimal":"18"},{"chainId":"56","symbol":"ETHUSD","address":"0xA0F51e28Ec15fcC9816FaB40684f1D1C675Bd39b","decimal":"18"},{"chainId":"56","symbol":"BNBUSD","address":"0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4","decimal":"18"},{"chainId":"137","symbol":"BTCUSD","address":"0xe079ed411716d71fc746C403fa56fb38243Ab34F","decimal":"18"},{"chainId":"137","symbol":"ETHUSD","address":"0xea830185A2a1719967386E17C479f2539B0F915E","decimal":"18"}],"brokerManager":[{"chainId":"56","address":"0xE9e9B83aE47b109bA21e16B1b5Ba382F83A81650"},{"chainId":"137","address":"0x2d3Aa0E1aAECe2e3a8b90b042821f02e9D94a86f"}]},"dev":{"pools":[{"pool":"0x54a71Cad29C314eA081b2B0b1Ac25a7cE3b7f7A5","pToken":"0x270128C2d7E8713c8c25F7800738C29214eAFeBA","lToken":"0x904262d92B21e5214278632d01405738d841d82a","router":"0x07fb21FE50A31dFaf312dFa9f5BA5CF14DC7E1e6","initialBlock":"9516935","bTokens":[{"bTokenId":"0","bTokenSymbol":"BUSD","bToken":"0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF"},{"bTokenId":"1","bTokenSymbol":"AUTO","bToken":"0xd2F37BADdB702FF778aA038C63b7068054d93508"},{"bTokenId":"2","bTokenSymbol":"CAKE","bToken":"0x5b403E0f6686725171c2Baa7A0b7cD4253B0bc57"}],"symbols":[{"symbolId":"0","symbol":"BTCUSD","unit":"BTC"},{"symbolId":"1","symbol":"ETHUSD","unit":"ETH"}],"chainId":"97","version":"v2"},{"pool":"0x35a85396e7A8a9E85170fbb589ce085abcAd8266","pToken":"0x3495f770eC0dc8701d2b89454047A8521306E070","lToken":"0xeFCbBF65100FC2C2b96E92c9AbFfeC384177943e","router":"0x4861a9958B65eA8146B89Af929a80c352c905270","initialBlock":"14917984","bTokens":[{"bToken":"0x1BD7B233B054AD4D1FBb767eEa628f28fdE314c6","bTokenSymbol":"USDT","bTokenId":"0"}],"symbols":[{"symbol":"ETHUSD","symbolId":"0","unit":"ETH"},{"symbol":"MATICUSD","symbolId":"1","unit":"MATIC"}],"chainId":"80001","version":"v2"}],"oracle":[{"chainId":"97","symbol":"BTCUSD","address":"0x713a13df8985EF58FB50b21929f2cdBa38A1aFC7","decimal":"18"},{"chainId":"97","symbol":"ETHUSD","address":"0x2322608418C22E9d0751334E4Bc9b3865bad9937","decimal":"18"},{"chainId":"80001","symbol":"ETHUSD","address":"0xc0797C024e79E6e4D9473aE00c7fFCD4cce84Cc8","decimal":"18"},{"chainId":"80001","symbol":"MATICUSD","address":"0x002685d9aD90bE8DECf61544EA48a37A0D7c4710","decimal":"18"}],"brokerManager":[{"chainId":"97","address":"0xe4101EC5F4EF144e97DdE7542A605c8813a975Fc"}]}},"v2_lite":{"prod":{"pools":[{"pool":"0x3465A2a1D7523DAF811B1abE63bD9aE36D2753e0","pToken":"0x6c4907a76628574C14C6292DEA5B4A5cD81D9Ee0","lToken":"0x992974FF499979cDd295214f8883D83a93855fA7","router":"0x0000000000000000000000000000000000000000","bToken":"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56","bTokenSymbol":"BUSD","initialBlock":"9514401","symbols":[{"symbolId":"0","symbol":"AXSUSDT","unit":"AXS"},{"symbolId":"1","symbol":"MBOXUSDT","unit":"MBOX"},{"symbolId":"2","symbol":"IBSCDEFI","unit":"iBSCDEFI"},{"symbolId":"3","symbol":"IGAME","unit":"iGAME"},{"symbolId":"4","symbol":"ALICEUSDT","unit":"ALICE"}],"chainId":"56","version":"v2_lite"},{"pool":"0x1a9b1B83C4592B9F315E933dF042F53D3e7E4819","pToken":"0xef4c81c76ED66d9B02e0d5de2eD352f840Eb497C","lToken":"0xC246d0aD04a9029A82862BE2fbd16ab1445b1602","router":"0x0000000000000000000000000000000000000000","bToken":"0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5","bTokenSymbol":"DERI","initialBlock":"9514895","symbols":[{"symbolId":"0","symbol":"AXSUSDT","unit":"AXS"},{"symbolId":"1","symbol":"MBOXUSDT","unit":"MBOX"},{"symbolId":"2","symbol":"IBSCDEFI","unit":"iBSCDEFI"},{"symbolId":"3","symbol":"IGAME","unit":"iGAME"},{"symbolId":"4","symbol":"ALICEUSDT","unit":"ALICE"}],"chainId":"56","version":"v2_lite"},{"pool":"0xb144cCe7992f792a7C41C2a341878B28b8A11984","pToken":"0xDC3ED843f0c411Eea1B84C0277CDFC5B71E22059","lToken":"0x35C8b3bb6CE67d9bf6b14a5FfC121A79d6247d07","router":"0x0000000000000000000000000000000000000000","bToken":"0xc2132D05D31c914a87C6611C10748AEb04B58e8F","bTokenSymbol":"USDT","initialBlock":"17129838","symbols":[{"symbolId":"0","symbol":"AXSUSDT","unit":"AXS"},{"symbolId":"1","symbol":"ALICEUSDT","unit":"ALICE"},{"symbolId":"2","symbol":"SANDUSDT","unit":"SAND"},{"symbolId":"3","symbol":"QUICKUSDT","unit":"QUICK"}],"chainId":"137","version":"v2_lite"},{"pool":"0xa4eDe2C4CB210CD07DaFbCe56dA8d36b7d688cd0","pToken":"0x074f37Be1c9818b192aCdB3B268baA52d052ea28","lToken":"0x7B0a54d667F2665438DDf66349C30d75Dc4c590A","router":"0x0000000000000000000000000000000000000000","bToken":"0x3D1D2aFd191b165D140e3E8329E634665fFB0E5e","bTokenSymbol":"DERI","initialBlock":"17131129","symbols":[{"symbolId":"0","symbol":"AXSUSDT","unit":"AXS"},{"symbolId":"1","symbol":"ALICEUSDT","unit":"ALICE"},{"symbolId":"2","symbol":"SANDUSDT","unit":"SAND"},{"symbolId":"3","symbol":"QUICKUSDT","unit":"QUICK"}],"chainId":"137","version":"v2_lite"}],"oracle":[{"chainId":"137","symbol":"AXSUSDT","address":"0x6E0faAD5DE9e7FdBedA9A9e3fBCD01E1e7a1F4Db","decimal":"18"},{"chainId":"137","symbol":"ALICEUSDT","address":"0x9eB033F126548a3363abc874BE2A0c8231409157","decimal":"18"},{"chainId":"137","symbol":"SANDUSDT","address":"0x57A99b69E7dA118025fD5DC75ba2b0a17226Af39","decimal":"18"},{"chainId":"137","symbol":"QUICKUSDT","address":"0xcbd7EA5220e6E01F71BfDc520893555C48ad63DC","decimal":"18"},{"chainId":"56","symbol":"AXSUSDT","address":"0xB08D439016AC9223307A73c43Ac959d096bB64De","decimal":"18"},{"chainId":"56","symbol":"MBOXUSDT","address":"0xDD677a1B0591206F932b946983643638DE814Bcb","decimal":"18"},{"chainId":"56","symbol":"IBSCDEFI","address":"0x8E31136F6f9247Ef93743bDEbC74dbD48a08E3be","decimal":"18"},{"chainId":"56","symbol":"IGAME","address":"0x27CF22Dd313723781d3C28664363187e6EB654fE","decimal":"18"},{"chainId":"56","symbol":"ALICEUSDT","address":"0x3E084344FFD0209A6e9cB817f9Ea6e7348E6e238","decimal":"18"}],"poolLiteViewer":[{"chainId":"56","address":"0xC157B7bf1aA08Eb36338EFd7bD0a33abF04f1Dd2"},{"chainId":"137","address":"0x7587353B1B8071dB7e81F9AC6A9D2419A04c2D86"}],"brokerManager":[]},"dev":{"pools":[{"pool":"0x3422DcB21c32d91aDC8b7E89017e9BFC13ee2d42","pToken":"0x1aD33A66Bc950E05E10f56a472D818AFEe72012C","lToken":"0x5443bB7B9920b41Da027f8Aab41c90702ACD7d8a","router":"0x0000000000000000000000000000000000000000","bToken":"0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF","bTokenSymbol":"BUSD","initialBlock":"10522328","symbols":[{"symbolId":"0","symbol":"BTCUSD","unit":"BTC"},{"symbolId":"1","symbol":"ETHUSD","unit":"ETH"},{"symbolId":"2","symbol":"AXSUSDT","unit":"AXS"},{"symbolId":"3","symbol":"MANAUSDT","unit":"MANA"},{"symbolId":"4","symbol":"MBOXUSDT","unit":"MBOX"},{"symbolId":"5","symbol":"IBSCDEFI","unit":"iBSCDEFI"},{"symbolId":"6","symbol":"IGAME","unit":"iGAME"},{"symbolId":"7","symbol":"ALICEUSDT","unit":"ALICE"},{"symbolId":"8","symbol":"SANDUSDT","unit":"SAND"}],"chainId":"97","version":"v2_lite"}],"oracle":[{"chainId":"97","symbol":"BTCUSD","address":"0x78Db6d02EE87260a5D825B31616B5C29f927E430","decimal":"18"},{"chainId":"97","symbol":"ETHUSD","address":"0xdF0050D6A07C19C6F6505d3e66B68c29F41edA09","decimal":"18"},{"chainId":"97","symbol":"AXSUSDT","address":"0x63F73b157Ee52dE3c3f9248753a05Aa5649B6f87","decimal":"18"},{"chainId":"97","symbol":"MANAUSDT","address":"0x386BcDB9De6ce9df9232B7239073b0A931B7f39c","decimal":"18"},{"chainId":"97","symbol":"MBOXUSDT","address":"0xB6cce9FAf4bB63bD4060aaDB311Cfb216aF91C36","decimal":"18"},{"chainId":"97","symbol":"IBSCDEFI","address":"0x38e84505697A25ad0c279E6D0b85EBc9712118BA","decimal":"18"},{"chainId":"97","symbol":"IGAME","address":"0xa08e8B5a0dec49D4E8371a61C0CF7d729642d4c0","decimal":"18"},{"chainId":"97","symbol":"ALICEUSDT","address":"0xa08e8B5a0dec49D4E8371a61C0CF7d729642d4c0","decimal":"18"},{"chainId":"97","symbol":"SANDUSDT","address":"0xF1b50F7d28042D21dC5cf95b8C979C7b18813f8A","decimal":"18"}],"poolLiteViewer":[{"chainId":"97","address":"0xaBeB6F87ab3810655a5702C00d4D646dC85d7a0C"}],"brokerManager":[{"chainId":"97","address":"0xe4101EC5F4EF144e97DdE7542A605c8813a975Fc"}]}}}')},103:function(e){e.exports=JSON.parse('{"prod":{"chainInfo":{"1":{"code":"ETHEREUM","name":"ETH","symbol":"ETH","viewUrl":"https://etherscan.io/","supportV1":true,"metamask":{"chainName":"ETHEREUM-Mainnet","nativeCurrency":{"name":"Ethereum","symbol":"ETH","decimals":18},"rpcUrls":["https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],"blockExplorerUrls":["https://etherscan.io"]}},"56":{"code":"BSC","name":"BSC","symbol":"BNB","viewUrl":"https://bscscan.com/","supportV2":true,"supportV1":true,"supportInnovation":true,"metamask":{"chainName":"BSC-Mainnet","nativeCurrency":{"name":"BSC","symbol":"BNB","decimals":18},"rpcUrls":["https://bsc-dataseed.binance.org/"],"blockExplorerUrls":["https://bscscan.com/"]}},"128":{"code":"HECO","name":"HECO","symbol":"HT","viewUrl":"https://hecoscan.xyz/","supportV1":true,"metamask":{"chainName":"HECO-Mainnet","nativeCurrency":{"name":"HECO","symbol":"HT","decimals":18},"rpcUrls":["https://http-mainnet.hecochain.com"],"blockExplorerUrls":["https://hecoscan.xyz/"]}},"137":{"code":"POLYGON","name":"POLYGON","symbol":"MATIC","viewUrl":"https://polygonscan.com/","supportV2":true,"supportInnovation":true,"metamask":{"chainName":"POLYGON-Mainnet","nativeCurrency":{"name":"POLYGON","symbol":"MATIC","decimals":18},"rpcUrls":["https://matic-mainnet.chainstacklabs.com"],"blockExplorerUrls":["https://polygonscan.com/"]}}}},"dev":{"chainInfo":{"3":{"code":"ROPSTEN","name":"ROPSTEN","symbol":"ETH","viewUrl":"https://ropsten.etherscan.io","supportV1":true,"metamask":{"chainName":"ROPSTEN","nativeCurrency":{"name":"Repsten","symbol":"ETH","decimals":18},"rpcUrls":["https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],"blockExplorerUrls":["https://ropsten.etherscan.io"]}},"97":{"code":"BSC","name":"BSC-Testnet","symbol":"BNB","viewUrl":"https://testnet.bscscan.com/","supportV1":true,"supportV2":true,"supportInnovation":true,"metamask":{"chainName":"BSC-Testnet","nativeCurrency":{"name":"BSC","symbol":"BNB","decimals":18},"rpcUrls":["https://data-seed-prebsc-2-s1.binance.org:8545/"],"blockExplorerUrls":["https://testnet.bscscan.com/"]}},"256":{"code":"HECO","name":"HECO-Testnet","symbol":"HT","viewUrl":"https://scan-testnet.hecochain.com","supportV1":true,"metamask":{"chainName":"HECO-Testnet","nativeCurrency":{"name":"HECO","symbol":"HT","decimals":18},"rpcUrls":["https://http-testnet.hecochain.com"],"blockExplorerUrls":["https://scan-testnet.hecochain.com"]}},"80001":{"code":"POLYGON","name":"MUMBAI","symbol":"MATIC","viewUrl":"https://explorer-mumbai.maticvigil.com/","supportV2":true,"supportInnovation":true,"metamask":{"chainName":"POLYGON-Testnet","nativeCurrency":{"name":"MUMBAI","symbol":"MATIC","decimals":18},"rpcUrls":["https://rpc-mumbai.matic.today"],"blockExplorerUrls":["https://explorer-mumbai.maticvigil.com/"]}}}}}')},106:function(e,t,n){"use strict";var i=n(4),a=n(5),r=n(13),s=n(12),o=n(1),u=n.n(o),l=n(259),p=n.n(l),c=n(144),d=n.n(c),y=(n(273),n(16)),m=function(e){Object(r.a)(n,e);var t=Object(s.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"componentWillMount",value:function(){d.a.start()}},{key:"componentWillUnmount",value:function(){d.a.done()}},{key:"render",value:function(){return Object(y.jsx)("div",{})}}]),n}(u.a.Component);t.a=function(e){return p()({loader:e,loading:function(){return Object(y.jsx)(m,{})}})}},108:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return i}));const i=(t="dev")=>"prod"===t||"production"===t?(e&&Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_WSS_URL:"wss://oracle4.deri.finance",REACT_APP_REST_SERVER_URL:"https://api.deri.finance"}),"https://api.deri.finance"):"https://testnetapi.deri.finance"}).call(this,n(17))},148:function(e,t,n){"use strict";var i=n(51),a=n(4),r=n(5),s=n(13),o=n(12),u=n(1),l=n.n(u),p=n(153),c=n.n(p),d=n(44),y=n(16);t.a=function(e){var t=document.getElementById("root"),n={overlay:{position:"fixed",zIndex:10,background:"rgb(0 0 0 / 0.5)"},content:{position:"absolute",border:0,background:"none",inset:0,overflow:"initial"}},u=function(u){Object(s.a)(p,u);var l=Object(o.a)(p);function p(e){var t;return Object(a.a)(this,p),(t=l.call(this,e)).state={modalIsOpen:!1},t}return Object(r.a)(p,[{key:"render",value:function(){var a=this.props,r=a.modalIsOpen,s=a.className,o=a.overlay,u=void 0===o?{}:o,l=Object.assign(n.overlay,Object(i.a)({},u)),p=Object.assign(n,{overlay:l});return Object(y.jsx)(c.a,{isOpen:r,style:p,appElement:t,portalClassName:this.props.intl.locale,children:Object(y.jsx)("div",{className:s,children:Object(y.jsx)(e,Object(i.a)(Object(i.a)({},this.props),{},{className:s,onClose:this.props.onClose}))})})}}]),p}(l.a.Component);return Object(d.b)("intl")(Object(d.c)(u))}},15:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"t",(function(){return ee})),n.d(t,"B",(function(){return te})),n.d(t,"e",(function(){return l.a})),n.d(t,"g",(function(){return Xe})),n.d(t,"H",(function(){return Qe})),n.d(t,"E",(function(){return Ze})),n.d(t,"v",(function(){return tt})),n.d(t,"G",(function(){return nt})),n.d(t,"F",(function(){return it})),n.d(t,"K",(function(){return rt})),n.d(t,"m",(function(){return st})),n.d(t,"I",(function(){return at})),n.d(t,"P",(function(){return ot})),n.d(t,"j",(function(){return ut})),n.d(t,"Q",(function(){return lt})),n.d(t,"X",(function(){return pt})),n.d(t,"O",(function(){return ct})),n.d(t,"U",(function(){return It})),n.d(t,"d",(function(){return St})),n.d(t,"N",(function(){return Mt})),n.d(t,"k",(function(){return Et})),n.d(t,"u",(function(){return Wt})),n.d(t,"w",(function(){return Kt})),n.d(t,"L",(function(){return Gt})),n.d(t,"Y",(function(){return mn})),n.d(t,"c",(function(){return bn})),n.d(t,"T",(function(){return fn})),n.d(t,"R",(function(){return an})),n.d(t,"i",(function(){return In})),n.d(t,"x",(function(){return qn})),n.d(t,"l",(function(){return ci})),n.d(t,"r",(function(){return di})),n.d(t,"z",(function(){return yi})),n.d(t,"y",(function(){return mi})),n.d(t,"b",(function(){return bi})),n.d(t,"S",(function(){return fi})),n.d(t,"C",(function(){return gi})),n.d(t,"A",(function(){return hi})),n.d(t,"J",(function(){return Ti})),n.d(t,"M",(function(){return vi})),n.d(t,"n",(function(){return wi})),n.d(t,"q",(function(){return ki})),n.d(t,"o",(function(){return Ii})),n.d(t,"s",(function(){return Ai})),n.d(t,"p",(function(){return Si})),n.d(t,"W",(function(){return Ei})),n.d(t,"h",(function(){return Mi})),n.d(t,"Z",(function(){return xi})),n.d(t,"V",(function(){return Oi})),n.d(t,"f",(function(){return Di})),n.d(t,"D",(function(){return Ci}));const i=(()=>{let e="dev";return{get:()=>e,set:t=>{if("dev"!==t&&"prod"!==t&&"production"!==t)throw new Error("please use 'dev' or 'prod' for DeriEnv");e=t}}})(),a="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",r="0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90";var s=n(108),o=n(102);const u=e=>{let t={};return(n,i)=>{const a=i;return Object.keys(t).includes(a)||(t[a]=new e(n,i)),t[a]}};var l=n(29),p=n(22),c=n.n(p);const d=e=>{if(null===e)return null;let t=Object.assign({},e);return Object.keys(t).forEach((n=>{t[n]="object"===typeof e[n]?d(e[n]):e[n]})),Array.isArray(e)?(t.length=e.length,Array.from(t)):t},y=async e=>{let t={url:e,blockNumber:-1,duration:Number.MAX_SAFE_INTEGER};try{const n=new c.a(new c.a.providers.HttpProvider(e)),i=Date.now();t.blockNumber=await n.eth.getBlockNumber(),t.duration=Date.now()-i}catch(n){}return t},m=async(e=[])=>{e=(e=>{const t=d(e),n=e.length;let i=[];for(let a=0;a<n;a++){const n=Math.floor(Math.random()*e.length);i=i.concat(t.splice(n,1))}return i})(e);let t=[];for(let s=0;s<e.length;s++)t.push(y(e[s]));let n=await Promise.all(t);n=n.sort(((e,t)=>e.duration-t.duration));const i=n.reduce(((e,t)=>-1!==t.blockNumber?e>t.blockNumber?e:t.blockNumber:e),0),a=n.findIndex((e=>e.blockNumber===i)),r=n[a]&&n[a].url;if(r&&r.startsWith("http"))return r;throw new Error(`getLatestRPCServer(): no alive RPC server in ${e}`)},b=e=>{const t=["1","3","56","97","128","256","137","80001"];let n=e?e.toString():e;if(e&&t.includes(n))return n;throw new Error(`invalid chainId: ${e}`)},f=e=>{if("string"===typeof e&&e.startsWith("0x")&&42==e.length)return c.a.utils.toChecksumAddress(e);throw new Error(`invalid address: ${e}`)},g=(...e)=>e.every((e=>!isNaN(parseFloat(e)))),h=(e,t,n)=>{const i=Object.keys(t);e.forEach((e=>{if(!i.includes(e))throw new Error(`validateConfig(): property ${e} is not exist in the ${n} config.`)}))},T=(e,t)=>{if(!Array.isArray(e))throw new Error(`validateConfig(): property ${t} is an array in the config.`)},v=async e=>{const t=(e=>{const t=[{provider_urls:["https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06"],chainId:"1"},{provider_urls:["https://bsc-dataseed.binance.org","https://bsc-dataseed1.defibit.io/","https://bsc-dataseed1.ninicoin.io/"],chainId:"56"},{provider_urls:["https://http-mainnet.hecochain.com"],chainId:"128"},{provider_urls:["https://rpc-mainnet.matic.network","https://rpc-mainnet.maticvigil.com","https://rpc-mainnet.matic.quiknode.pro","https://matic-mainnet.chainstacklabs.com","https://matic-mainnet-full-rpc.bwarelabs.com","https://matic-mainnet-archive-rpc.bwarelabs.com"],chainId:"137"},{provider_urls:["https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584"],chainId:"3"},{provider_urls:["https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584"],chainId:"42"},{provider_urls:["https://data-seed-prebsc-1-s1.binance.org:8545/","https://data-seed-prebsc-1-s2.binance.org:8545/","https://data-seed-prebsc-1-s3.binance.org:8545/","https://data-seed-prebsc-2-s1.binance.org:8545/","https://data-seed-prebsc-2-s2.binance.org:8545/","https://data-seed-prebsc-2-s3.binance.org:8545/"],chainId:"97"},{provider_urls:["https://http-testnet.hecochain.com"],chainId:"256"},{provider_urls:["https://rpc-mumbai.matic.today","https://rpc-mumbai.maticvigil.com","https://matic-mumbai.chainstacklabs.com","https://matic-testnet-archive-rpc.bwarelabs.com"],chainId:"80001"}].filter((t=>t.chainId===e));if(t.length>0)return t[0].provider_urls;throw new Error(`getChainProviderUrls: no urls for chainId ${e}`)})(e=b(e));if(t.length>0){return await m(t)}throw new Error(`Cannot find the chain provider url with chainId: ${e}`)},w=e=>{const t=(()=>{let e=["6486","6486","28759","28759","28798","28798","40405","40405"];return["1","3","56","97","128","256","137","80001"].reduce(((t,n,i)=>(t[n]=e[i],t)),{})})();if(t[e])return parseInt(t[e]);throw new Error(`Invalid annual block number with chainId: ${e}`)},k=e=>{let t;switch(e=b(e)){case"1":t="ethereum";break;case"56":t="bsc";break;case"128":t="heco";break;case"3":t="ropsten";break;case"42":t="kovan";break;case"97":t="bsctestnet";break;case"256":t="hecotestnet";break;case"137":t="matic";break;case"80001":t="mumbai";break;default:throw new Error(`The networkId is not valid for chainId ${e}`)}return t},I=function(){const e={};return{async get(t){if(t=b(t),Object.keys(e).includes(t))return e[t];if(Object(l.j)()&&!Object(l.k)()&&"object"===typeof window.ethereum)return e[t]=new c.a(window.ethereum),e[t];if(Object(l.j)()&&!Object(l.k)())throw new Error("Please install MetaMask first");{const n=await v(t);return e[t]=new c.a(new c.a.providers.HttpProvider(n)),e[t]}}}}(),A=async(e,t,n=0)=>{const i=await I.get(e),a=await i.eth.getStorageAt(t,n);return Object(l.g)(a)},S=async e=>{const t=await I.get(e);return await t.eth.getBlockNumber()},E=async(e,t)=>{const n=await I.get(e);return await n.eth.getBlock(t)},M=async(e,t,n,i={},a=0,r=0)=>{let s,o=[];for(s=["56","97","127","80001"].includes(e)?999:4999,a+s>r&&(s=r-a);a<=r;){let e=await t.getPastEvents(n,{filter:i,fromBlock:a,toBlock:a+s});for(let t of e)o.push(t);(a+=s+1)+s>r&&(s=r-a)}return o},x=async(e,t,n,i)=>{try{return await e(...t)}catch(a){console.log(`${n}: ${a}`)}return i},O=async(e,t)=>{let n;try{n={success:!0,transaction:await e(...t)}}catch(i){n={success:!1,error:i}}return n};var D=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"v2",t=arguments.length>1?arguments[1]:void 0,n=_(e,t);return n.oracle},C={AMUSDC:"amUSDC"},P={AXSUSDT:"AXSUSDT",MANAUSDT:"MANAUSDT",MBOXUSDT:"MBOXUSDT",IBSCDEFI:"iBSCDEFI",IGAME:"iGAME",ALICEUSDT:"ALICEUSDT",SANDUSDT:"SANDUSDT",QUICKUSDT:"QUICKUSDT"},R=function(e){return Object.keys(P).includes(e)},B=function(e){return Object.keys(P).includes(e)?P[e]:e},j=function(e){var t=Object.values(P).indexOf(e);return-1!==t?Object.keys(P)[t]:e},F=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"v2";t=j(t);var i=D(n),a=i.filter((function(n){return t?n.chainId===e&&n.symbol===t:n.chainId===e}));if(a.length>0)return t?a[0]:a};const N=e=>{e.bTokenCount=e.bTokens.length,e.symbolCount=e.symbols.length,e.bTokens.forEach((e=>{return e.bTokenSymbol=(t=e.bTokenSymbol,Object.keys(C).includes(t)?C[t]:t);var t})),e.symbols.forEach((e=>e.symbol=B(e.symbol)))},q=e=>{h(["pool","pToken","lToken","initialBlock","bToken","bTokenSymbol","symbols","chainId","offchainSymbolIds","offchainSymbols","symbolCount"],e,""),T(e.symbols,"symbols"),e.symbols.forEach((e=>{h(["symbolId","symbol"],e,"symbol")})),T(e.offchainSymbolIds,"offchainSymbolIds")},L=e=>{e.symbolCount||(e.symbolCount=e.symbols.length),e.offchainSymbolIds||e.offchainSymbols||(e.offchainSymbolIds=e.symbols.filter((e=>R(e.symbol))).map((e=>e.symbolId)),e.offchainSymbols=e.symbols.filter((e=>R(e.symbol))).map((e=>e.symbol)),e.symbols.forEach((e=>e.symbol=B(e.symbol))))},_=(e="v2",t)=>((e,t)=>{t=t||i.get();let n="object"===typeof o?o:JSON.parse(o);if(n[e]&&["v2","v2_lite"].includes(e)&&(n=n[e]),["prod","dev"].includes(t)&&n&&n[t]){const i=n[t].pools;if(i&&Array.isArray(i))if("v2"===e)for(let e=0;e<i.length;e++)N(i[e]),a=i[e],h(["pool","pToken","lToken","router","initialBlock","bTokens","symbols","chainId","symbolCount","bTokenCount"],a,""),T(a.bTokens,"bTokens"),a.bTokens.forEach((e=>{h(["bTokenId","bTokenSymbol","bToken"],e,"bToken")})),T(a.symbols,"symbols"),a.symbols.forEach((e=>{h(["symbolId","symbol"],e,"symbol")}));else if("v2_lite"===e)for(let e=0;e<i.length;e++)L(i[e]),q(i[e]);return h(["oracle"],n[t],"oracle"),h(["brokerManager"],n[t],"brokerManager"),n[t]}var a;throw new Error(`getJsonConfig(): invalid config of version '${e}' and env '${t}'`)})(e,t);var U=function(e){return e.pools.map((function(e){for(var t=[],n=0;n<e.bTokens.length;n++)for(var i=e.bTokens[n],a=0;a<e.symbols.length;a++){var r=e.symbols[a];t.push({pool:e.pool,pToken:e.pToken,lToken:e.lToken,router:e.router,initialBlock:e.initialBlock,chainId:e.chainId,bToken:i.bToken,bTokenId:i.bTokenId,bTokenSymbol:i.bTokenSymbol,symbol:r.symbol,symbolId:r.symbolId,unit:r.unit,version:"v2"})}return t})).flat()},V=function(e){return e.pools.map((function(e){for(var t=[],n=0;n<e.symbols.length;n++){var i=e.symbols[n];t.push({pool:e.pool,pToken:e.pToken,lToken:e.lToken,router:e.router,initialBlock:e.initialBlock,chainId:e.chainId,bToken:e.bToken,bTokenSymbol:e.bTokenSymbol,symbol:i.symbol,symbolId:i.symbolId,offchainSymbolIds:e.offchainSymbolIds,offchainSymbols:e.offchainSymbols,unit:i.unit,version:"v2_lite"})}return t})).flat()},H=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"v2",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"dev",n=_(e,t);return"v2"===e?U(n):"v2_lite"===e?V(n):void 0},$=function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"v2";t="number"===typeof t?t.toString():t,n="number"===typeof n?n.toString():n;var r=H(a,i.get()),s=null!=t?null!=n?function(i){return i.pool===e&&i.bTokenId===t&&i.symbolId===n}:function(n){return n.pool===e&&n.bTokenId===t}:null!=n?function(t){return t.pool===e&&t.symbolId===n}:function(t){return t.pool===e};if(r.length>0){var o=r.filter(s);if(o&&o.length>0)return o}throw new Error("getFilteredPoolConfigList(): cannot find the pool config by ".concat(e," bTokenId(").concat(t,") and symbolId(").concat(n,")"))},z=function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"v2";"v2_lite"===i&&(t=void 0);var a=$(e,t,n,i);return a[0]},W=function(e){var t=["v2","v2_lite"].reduce((function(e,t){return e.concat(_(t,i.get()).pools)}),[]),n=t.findIndex((function(t){return t.pool===e}));if(n>=0)return t[n].version},G=function(e){var t=W(e),n=_(t,i.get()).pools.find((function(t){return t.pool===e}));if(n)return n;throw new Error("Cannot find the pool by poolAddress(".concat(e,")"))},K=function(e,t,n){var i,a,r=G(e);return void 0===t&&null===t||(i=r.bTokens.find((function(e){return e.bTokenId===t}))||{bTokenId:"",bTokenSymbol:"",bToken:""}),void 0===n&&null===n||(a=r.symbols.find((function(e){return e.symbolId===n}))||{symbolId:"",symbol:"",unit:""}),{pool:r.pool,pToken:r.pToken,lToken:r.lToken,router:r.router,bTokenCount:r.bTokenCount,symbolCount:r.symbolCount,initialBlock:r.initialBlock,chainId:r.chainId,bToken:i.bToken,bTokenId:i.bTokenId,bTokenSymbol:i.bTokenSymbol,symbol:a.symbol,symbolId:a.symbolId,unit:a.unit,version:"v2"}},J=function(e){return G(e).bTokens.map((function(e){return{bTokenId:e.bTokenId,bTokenSymbol:e.bTokenSymbol,bTokenAddress:e.bToken}}))},Y=function(e){return G(e).bTokens.map((function(e){return e.bTokenId}))},X=function(e){return G(e).symbols.map((function(e){return{symbol:e.symbol,symbolId:e.symbolId,unit:e.unit}}))},Q=function(e){return G(e).symbols.map((function(e){return e.symbolId}))};const Z=(e="dev")=>"prod"===e?[{pool:"0xAf081e1426f64e74117aD5F695D2A80482679DE5",bToken:"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",pToken:"0x3c11c4990447F0AD575eBd74E8cD17bf61848A15",lToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17",initialBlock:"7906919",bTokenSymbol:"BUSD",symbol:"BTCUSD",unit:"BTC",chainId:"56",version:"v1",retired:!0},{pool:"0x011346B81e5326904B5B76A11dECAf2c67eFFc23",bToken:"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",pToken:"0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410",lToken:"0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17",initialBlock:"6753399",bTokenSymbol:"BUSD",symbol:"COIN",unit:"COIN",chainId:"56",version:"v1",retired:!0},{pool:"0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c",bToken:"0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5",pToken:"0x29Be63E854727BB3Fef77eB107B8d1c33081f989",lToken:"0x610b39F9ba0fF2167AEb646462473c011A431Cd7",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17",initialBlock:"8005906",bTokenSymbol:"DERI",symbol:"iMEME",unit:"iMEME",chainId:"56",version:"v1",retired:!0},{pool:"0x23779AAc1e74a65F27B4840A8E41F767Ce993118",bToken:"0xdAC17F958D2ee523a2206206994597C13D831ec7",pToken:"0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33",lToken:"0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8",initialBlock:"12548746",bTokenSymbol:"USDT",symbol:"BTCUSD",unit:"BTC",chainId:"1",version:"v1",retired:!0},{pool:"0x96a1F15676746b9339DBc185F277618359Ac6346",bToken:"0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a",pToken:"0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05",lToken:"0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8",initialBlock:"12548827",bTokenSymbol:"BAC",symbol:"BTCUSD",unit:"BTC",chainId:"1",version:"v1",retired:!0},{pool:"0xBA7e183042c8796E26A5a2375927DE7B1AB99d97",bToken:"0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047",pToken:"0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476",lToken:"0x90fE976Cbb48E0761A84DDA2974024377994a997",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8",initialBlock:"5220431",bTokenSymbol:"HUSD",symbol:"BTCUSD",unit:"BTC",chainId:"128",version:"v1",retired:!0}]:[{pool:"0x372b640A00a0A6B73381e9363A39644a712cCc37",bToken:"0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF",pToken:"0xB9113758D771750e9E8ECb359A19689eC89AC1a5",lToken:"0xC727a10Be4740441BE74960296097aF39D701980",initialBlock:"9378545",bTokenSymbol:"BUSD",symbol:"BTCUSD",unit:"BTC",chainId:"97",version:"v1"}],ee=(e="dev")=>"prod"===e?[{pool:"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd",bToken:"0xA3DfbF2933FF3d96177bde4928D0F5840eE55600",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x0000000000000000000000000000000000000000",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8",chainId:"1",bTokenSymbol:"DERI-USDT SLP",symbol:"--",type:"slp"},{pool:"0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98",bToken:"0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x83b31Abc899863B8Eb06952994580CE86414156E",dToken:"0x0000000000000000000000000000000000000000",MiningVault:"0x0000000000000000000000000000000000000000",initialBlock:"6894880",chainId:"56",bTokenSymbol:"CAKE-LP",symbol:"--",type:"clp",retired:!0},{pool:"0x73feaa1eE314F8c655E354234017bE2193C9E24E",bToken:"0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x0000000000000000000000000000000000000000",dToken:"0x0000000000000000000000000000000000000000",MiningVault:"0x0000000000000000000000000000000000000000",initialBlock:"699498",chainId:"56",bTokenSymbol:"CAKE-LP SYRUP",symbol:"--",type:"clp2"}]:[],te=(e="dev")=>"prod"===e?[{bToken:"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",pToken:"0x0000000000000000000000000000000000000000",lToken:"0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736",pool:"0x447A9BC67721cB115ce6E664a261568a3c8F5B35",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17",chainId:"56",staking:!1,url:"https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35",bTokenSymbol:"WBNB",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B",pool:"0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17",chainId:"56",staking:!1,url:"https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad",bTokenSymbol:"CAKE",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0xa184088a740c695E156F91f5cC086a06bb78b827",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA",pool:"0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17",chainId:"56",staking:!0,url:"https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A",bTokenSymbol:"AUTO",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA",pool:"0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8",chainId:"128",staking:!1,url:"https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc",bTokenSymbol:"WHT",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c",pToken:"0x0000000000000000000000000000000000000000",lToken:"0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1",pool:"0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8",chainId:"128",staking:!1,url:"https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0",bTokenSymbol:"MDX",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46",pool:"0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8",chainId:"1",staking:!1,url:"https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d",bTokenSymbol:"SUSHI",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",pToken:"0x0000000000000000000000000000000000000000",lToken:"0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465",pool:"0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8",chainId:"1",staking:!1,url:"https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2",bTokenSymbol:"AAVE",isInTvlRace:!1,retired:!0,premining:!0},{bToken:"0xA3DfbF2933FF3d96177bde4928D0F5840eE55600",pToken:"0x0000000000000000000000000000000000000000",lToken:"0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD",pool:"0x3f98429b673AF39671a495b5B12Ebd5C10092ccB",dToken:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",MiningVault:"0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8",chainId:"1",staking:!0,url:"https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB",bTokenSymbol:"DERI-USDT SLP",isInTvlRace:!1,retired:!0,premining:!0}]:[],ne=(e,t)=>{e=b(e);const n=ee(i.get()).filter((t=>t.chainId===e)).filter((e=>e.pool===t));return n.length>0?{poolAddress:n[0].pool,bTokenAddress:n[0].bToken,lTokenAddress:n[0].lToken,type:n[0].type}:(console.log(`getLpConfig(): contract address is not found: ${e} ${t}`),{})},ie=e=>{e=b(e);const t=((e="dev")=>"prod"===e?[{Deri:"0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9",Wormhole:"0x6874640cC849153Cb3402D193C33c416972159Ce",bTokenSymbol:"DERI",chainId:"1"},{Deri:"0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5",Wormhole:"0x15a5969060228031266c64274a54e02Fbd924AbF",bTokenSymbol:"DERI",chainId:"56"},{Deri:"0x2bdA3e331Cf735D9420e41567ab843441980C4B8",Wormhole:"0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46",bTokenSymbol:"DERI",chainId:"128"}]:[{Deri:"0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B",Wormhole:"0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e",bTokenSymbol:"DERI",chainId:"3"},{Deri:"0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2",Wormhole:"0x9028e43114Df57C97c15355224E575DF1e244919",bTokenSymbol:"DERI",chainId:"97"},{Deri:"0x932458a637F8060AF747167656651b64d4c36620",Wormhole:"0x629B0D3D32BE5ee5F7BF3845914d26446c04165d",bTokenSymbol:"DERI",chainId:"256"}])(i.get()).filter((t=>t.chainId===e));return t.length>0?{deriAddress:t[0].Deri,wormholeAddress:t[0].Wormhole,bTokenSymbol:t[0].bTokenSymbol}:(console.log(`getDeriConfig(): contract address is not found: ${e}`),{})},ae=(e,t)=>{e=b(e);const n=i.get(),a=Z(n).concat(te(n)).concat(ee(n)).filter((t=>t.chainId===e)).filter((e=>e.pool===t));if(a.length>0)return{poolAddress:a[0].pool,bTokenAddress:a[0].bToken,pTokenAddress:a[0].pToken,lTokenAddress:a[0].lToken,dTokenAdress:a[0].dToken,MinningVaultAddress:a[0].MiningVault,bTokenSymbol:a[0].bTokenSymbol,symbol:a[0].symbol,unit:a[0].unit,initialBlock:a[0].initialBlock};throw new Error(`getPoolV1Config(): contract address is not found: ${e} ${t}`)},re=(e,t)=>{const n=(e=>_(e).brokerManager)(t).filter((t=>t.chainId===e));if(n.length>0)return n[0];throw new Error(`getBrokerConfig(): invalid chainId(${e}).`)};var se=n(3),oe=n.n(se),ue=n(9),le=function(e){var t="prod"===i.get()?"https://oracle4.deri.finance/get_signed_price":"https://oracle2.deri.finance/get_signed_price";return e?function(e,t){return"".concat(e,"?symbol=").concat(t.toLowerCase())}(t,e):t},pe=function(){var e=Object(ue.a)(oe.a.mark((function e(t){var n;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,ce(t);case 2:if(!(n=e.sent).price){e.next=7;break}return e.abrupt("return",Object(l.c)(n.price).toString());case 7:throw new Error("getPrice() invalid format: ".concat(JSON.stringify(n)));case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),ce=function(){var e=Object(ue.a)(oe.a.mark((function e(t){var n,i,a,r;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=j(t),n=le(t),i=3;case 3:if(!(i>0)){e.next=16;break}return e.next=6,fetch(n,{mode:"cors",cache:"no-cache"});case 6:if(!(a=e.sent).ok){e.next=13;break}return e.next=10,a.json();case 10:if("200"!==(r=e.sent).status.toString()||!r.data){e.next=13;break}return e.abrupt("return",r.data);case 13:i-=1,e.next=3;break;case 16:if(0!==i){e.next=18;break}throw new Error("fetch oracle info exceed max retry(2): ".concat(t," ").concat(JSON.stringify(r)));case 18:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),de=function(){var e=Object(ue.a)(oe.a.mark((function e(t){var n,i,a,r;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=le(),i=3;case 2:if(!(i>0)){e.next=15;break}return e.next=5,fetch(n,{mode:"cors",cache:"no-cache",method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)});case 5:if(!(a=e.sent).ok){e.next=12;break}return e.next=9,a.json();case 9:if("200"!==(r=e.sent).status.toString()||!r.data){e.next=12;break}return e.abrupt("return",r.data);case 12:i-=1,e.next=2;break;case 15:if(0!==i){e.next=17;break}throw new Error("fetch oracle infos exceed max retry(3): ".concat(t," ").concat(JSON.stringify(r)));case 17:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),ye=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n){var i,a,r,s,o=arguments;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=o.length>2&&void 0!==o[2]?o[2]:"v2",t=b(t),n=j(n),!(a=F(t,n,i))||!a.address){e.next=11;break}return r=ve(t,a.address,n,a.decimal),e.next=8,r.getPrice();case 8:return e.abrupt("return",e.sent);case 11:return e.next=13,ce(n);case 13:return s=e.sent,e.abrupt("return",Object(l.c)(s.price).toString());case 15:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}();class me{constructor(e,t,n){this.chainId=e,this.contractAddress=t,this.contractAbi=n}async _init(){this.web3||(this.web3=await I.get(this.chainId),this.contract=new this.web3.eth.Contract(this.contractAbi,this.contractAddress))}async _call(e,t=[]){let n,i=2;for(;i>0;)try{await this._init(),n=await this.contract.methods[e](...t).call();break}catch(a){i-=1,this.web3=null,a.toString().includes("Invalid JSON RPC response")?console.log(`Invalid JSON RPC response with chainId(${this.chainId})`):a.toString().includes("Returned values aren't valid,")?console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`):console.log("error:",a)}if(0===i&&!n)throw new Error(`The contract(${this.contractAddress}) '${e}([${t.join(",")}])' failed with max retry 2.`);return n}async _estimatedGas(e,t=[],n){await this._init();let i=0;for(let r=0;r<2;r++)try{i=await this.contract.methods[e](...t).estimateGas({from:n}),i=parseInt(1.25*i);break}catch(a){}return(0==i||i>1e7)&&(i=832731),i}_getTransactionReceipt(e){const t=this;return function n(i,a){t.web3.eth.getTransactionReceipt(e,((e,t)=>{e?a(e):null===t?setTimeout((()=>n(i,a)),500):!1===t.status?(t.errorMessage="Transaction failed",a(t)):i(t)}))}}async _transact(e,t=[],n){await this._init();const i=await this._estimatedGas(e,t,n);let a=[{from:n,to:this.contractAddress,gas:Object(l.p)(i),value:Object(l.p)("0"),data:this.contract.methods[e](...t).encodeABI()}],r=await window.ethereum.request({method:"eth_sendTransaction",params:a});return await new Promise(this._getTransactionReceipt(r))}}const be=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],fe=[{inputs:[{internalType:"address",name:"oracle_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"oracle",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],ge=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"broker",type:"address"}],name:"SetBroker",type:"event"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getBroker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"broker",type:"address"}],name:"setBroker",outputs:[],stateMutability:"nonpayable",type:"function"}],he=[{inputs:[{internalType:"address",name:"bTokenAddress",type:"address"},{internalType:"address",name:"pTokenAddress",type:"address"},{internalType:"address",name:"poolRouterAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"}],name:"AddWhitelist",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"}],name:"AirdropPToken",type:"event"},{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"addWhitelist",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"airdropPToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getBTokenBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"isStartAirdrop",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"ownerAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"startAirdrop",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAirdrop",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalAirdropCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalWhitelistCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"withdrawBToken",outputs:[],stateMutability:"nonpayable",type:"function"}];class Te extends me{constructor(e,t,n,i="18"){super(e,t,fe),this.symbol=n,this.decimal=i}async getPrice(){const e=await this._call("getPrice");if(e)return Object(l.c)(e).toString()}}const ve=function(){const e={};return(t,n,i,a="18")=>{const r=n;if(Object.keys(e).includes(r))return e[r];if(R(i))e[r]=function(e){return{getPrice:function(){var t=Object(ue.a)(oe.a.mark((function t(){return oe.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",pe(e));case 1:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}()}}(i);else{if(!["56","137","97","80001"].includes(t))throw new Error(`please setup oracle contract for the chain(${t})`);e[r]=new Te(t,n,i,a)}return e[r]}}();class we{constructor(e,t){this.contractAddress=e,this.contractAbi=t}_init(){this.web3=new c.a(new c.a.providers.HttpProvider(this.providerUrl)),this.contract=new this.web3.eth.Contract(this.contractAbi,this.contractAddress)}async updateProviderUrl(){this.providerUrl||(this.providerUrl=await m(["https://data-seed-prebsc-1-s1.binance.org:8545/","https://data-seed-prebsc-1-s2.binance.org:8545/","https://data-seed-prebsc-1-s3.binance.org:8545/","https://data-seed-prebsc-2-s1.binance.org:8545/","https://data-seed-prebsc-2-s2.binance.org:8545/","https://data-seed-prebsc-2-s3.binance.org:8545/"]),this._init())}async _call(e,t){let n,i=3;for(;i>0;){try{await this.updateProviderUrl(),n=await this.contract.methods[e](...t).call();break}catch(a){this.providerUrl=null,console.log(a.toString())}i-=1}if(0===i&&!n)throw new Error(`database ${e}(${t}): exceed max retry 3.`);return n}}const ke=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"addController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"controllers",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"",type:"string"}],name:"data",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"oldController",type:"address"}],name:"delController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string[]",name:"keys",type:"string[]"}],name:"getValues",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"string",name:"key",type:"string"},{internalType:"bytes32",name:"value",type:"bytes32"}],internalType:"structDatabase.Params1[]",name:"pairs",type:"tuple[]"}],name:"setValues",outputs:[],stateMutability:"nonpayable",type:"function"}];class Ie extends we{constructor(e){super(e,ke)}async getValues(e){return await this._call("getValues",[e])}}const Ae=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"addController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"controllers",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"oldController",type:"address"}],name:"delController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"fromChainId",type:"uint256"},{internalType:"address",name:"fromWormhole",type:"address"},{internalType:"uint256",name:"toChainId",type:"uint256"},{internalType:"address",name:"toWormhole",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"structDatabase.Params1[]",name:"values",type:"tuple[]"}],name:"setSignature",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"signature",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"fromChainId",type:"uint256"},{internalType:"address",name:"fromWormhole",type:"address"},{internalType:"uint256",name:"toChainId",type:"uint256"},{internalType:"address",name:"toWormhole",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"},{internalType:"bool",name:"valid",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"values",type:"address[]"}],name:"unsetSignature",outputs:[],stateMutability:"nonpayable",type:"function"}];class Se extends we{constructor(e){super(e,Ae)}async signature(e){return await this._call("signature",[e])}}const Ee=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"addController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"controllers",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"",type:"string"}],name:"data",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"oldController",type:"address"}],name:"delController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string[]",name:"keys",type:"string[]"}],name:"getValues",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"string",name:"key",type:"string"},{internalType:"bytes32",name:"value",type:"bytes32"}],internalType:"structDatabase.Params1[]",name:"pairs",type:"tuple[]"}],name:"setValues",outputs:[],stateMutability:"nonpayable",type:"function"}];class Me extends we{constructor(e){super(e,Ee)}async getValues(e){return await this._call("getValues",[e])}}const xe=(()=>{const e={};return(t=!1)=>{const n=((e="dev",t)=>"prod"===e&&t?"0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89":"0x7C1267188379f57d92e640E519151229E1eA5565")(i.get(),t),a=n;if(Object.keys(e).includes(a))return e[a];const r=new Ie(n);return e[a]=r,r}})(),Oe=(()=>{const e={};return(t=!1)=>{const n=((e="dev",t)=>"prod"===e&&t?"0xd8137F05c1F432A80525053c473d0e286c4F46f0":"0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d")(i.get(),t),a=n;if(Object.keys(e).includes(a))return e[a];const r=new Se(n);return e[a]=r,r}})(),De=(()=>{const e={};return(t=!1)=>{const n=((e="dev",t)=>"prod"===e&&t?"0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7":"0x7C1267188379f57d92e640E519151229E1eA5565")(i.get(),t),a=n;if(Object.keys(e).includes(a))return e[a];const r=new Me(n);return e[a]=r,r}})(),Ce=u(class extends me{constructor(e,t){super(e,t,be)}async symbol(){return await this._call("symbol")}async decimals(){return await this._call("decimals")}async _balanceOf(e){return await this._call("balanceOf",[e])}async balanceOf(e){const[t,n]=await Promise.all([this._balanceOf(e),this.decimals()]);return Object(l.a)(t,-n)}async totalSupply(){const e=await this._call("totalSupply");return Object(l.c)(e)}async isUnlocked(e,t){const n=await this._call("allowance",[e,t]);return Object(l.a)(n).gt(0)}async unlock(e,t){return await this._transact("approve",[t,a],e)}}),Pe=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldController",type:"address"},{indexed:!1,internalType:"address",name:"newController",type:"address"}],name:"ChangeController",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];const Re=[{inputs:[{internalType:"address",name:"tokenAddress_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"destination",type:"address"}],name:"ApproveMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"deadline",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"Claim",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"destination",type:"address"}],name:"ExecuteMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"destination",type:"address"}],name:"PrepareMigration",type:"event"},{inputs:[],name:"CLAIM_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"approveMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"chainId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"source",type:"address"}],name:"executeMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isMigrated",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationDestination",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"graceDays",type:"uint256"}],name:"prepareMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"tokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"usedHash",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];const Be=[{inputs:[{internalType:"address",name:"token_",type:"address"},{internalType:"address",name:"miningVault_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"deadline",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"Claim",type:"event"},{inputs:[],name:"CLAIM_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"chainId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint8",name:"v1",type:"uint8"},{internalType:"bytes32",name:"r1",type:"bytes32"},{internalType:"bytes32",name:"s1",type:"bytes32"},{internalType:"uint8",name:"v2",type:"uint8"},{internalType:"bytes32",name:"r2",type:"bytes32"},{internalType:"bytes32",name:"s2",type:"bytes32"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimNewController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"miningVault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setNewController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"usedHash",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];const je=[{inputs:[{internalType:"address",name:"tokenAddress_",type:"address"},{internalType:"bool",name:"allowMintBurn_",type:"bool"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"destination",type:"address"}],name:"ApproveMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fromChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"fromWormhole",type:"address"},{indexed:!1,internalType:"uint256",name:"toChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"toWormhole",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Claim",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"destination",type:"address"}],name:"ExecuteMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fromChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"fromWormhole",type:"address"},{indexed:!1,internalType:"uint256",name:"toChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"toWormhole",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Freeze",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"destination",type:"address"}],name:"PrepareMigration",type:"event"},{inputs:[],name:"CLAIM_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"allowMintBurn",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"approveMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"chainId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"fromChainId",type:"uint256"},{internalType:"address",name:"fromWormhole",type:"address"},{internalType:"uint256",name:"fromNonce",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"source",type:"address"}],name:"executeMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"toChainId",type:"uint256"},{internalType:"address",name:"toWormhole",type:"address"}],name:"freeze",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isMigrated",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationDestination",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"graceDays",type:"uint256"}],name:"prepareMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"tokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"usedHash",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];const Fe=u(class extends me{constructor(e,t){super(e,t,Pe)}async isUnlocked(e,t){let n=await this._call("allowance",[e,t]);return Object(l.c)(n).gt(0)}async unlock(e,t){return await this._transact("approve",[t,a],e)}async decimals(){return await this._call("decimals")}async _balanceOf(e){return await this._call("balanceOf",[e])}async balanceOf(e){const[t,n]=await Promise.all([this._balanceOf(e),this.decimals()]);return Object(l.a)(t,-n)}}),Ne=u(class extends me{constructor(e,t){super(e,t,je)}async freeze(e,t,n){const{wormholeAddress:i}=ie(n);return this._transact("freeze",[Object(l.n)(t),n,i],e)}async mintDeri(e,t,n,i,a,r,s,o){return this._transact("claim",[t,n,i,a,r,s,o],e)}}),qe=u(class extends me{constructor(e,t){super(e,t,Be)}async mint(e,...t){await this._init();const n=await this._estimatedGas("claim",[e,...t],e);let i=[{from:e,to:this.contractAddress,gas:Object(l.p)(n),value:Object(l.p)("0"),data:this.contract.methods.claim(e,...t).encodeABI()}],a=await window.ethereum.request({method:"eth_sendTransaction",params:i});return await new Promise(this._getTransactionReceipt(a))}}),Le=u(class extends me{constructor(e,t){super(e,t,Re)}async mintDToken(e,...t){await this._init();const n=await this._estimatedGas("claim",[e,...t],e);let i=[{from:e,to:this.contractAddress,gas:Object(l.p)(n),value:Object(l.p)("0"),data:this.contract.methods.claim(e,...t).encodeABI()}],a=await window.ethereum.request({method:"eth_sendTransaction",params:i});return await new Promise(this._getTransactionReceipt(a))}}),_e=[{inputs:[{internalType:"contractSushiToken",name:"_sushi",type:"address"},{internalType:"address",name:"_devaddr",type:"address"},{internalType:"uint256",name:"_sushiPerBlock",type:"uint256"},{internalType:"uint256",name:"_startBlock",type:"uint256"},{internalType:"uint256",name:"_bonusEndBlock",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"},{inputs:[],name:"BONUS_MULTIPLIER",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"contractIERC20",name:"_lpToken",type:"address"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"bonusEndBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_devaddr",type:"address"}],name:"dev",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"devaddr",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"}],name:"getMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"migrate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"migrator",outputs:[{internalType:"contractIMigratorChef",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingSushi",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolInfo",outputs:[{internalType:"contractIERC20",name:"lpToken",type:"address"},{internalType:"uint256",name:"allocPoint",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"accSushiPerShare",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contractIMigratorChef",name:"_migrator",type:"address"}],name:"setMigrator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"sushi",outputs:[{internalType:"contractSushiToken",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"sushiPerBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalAllocPoint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}];class Ue extends me{constructor(e,t){super(e,t,_e)}async addLiquidity(e,t){const n=[152,Object(l.n)(t)];return await this._transact("deposit",n,e)}async removeLiquidity(e,t){const n=[152,Object(l.n)(t)];return await this._transact("withdraw",n,e)}async getLiquidity(e){const t=await this._call("userInfo",[152,e]);return t&&t.amount?Object(l.c)(t.amount):(console.log("the amount is not exist "),"0")}}const Ve=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"mintAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"AddLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"ExecuteMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"PrepareMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"lAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"removeAmount",type:"uint256"}],name:"RemoveLiquidity",type:"event"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"approveMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"source",type:"address"}],name:"executeMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getAddresses",outputs:[{internalType:"address",name:"bToken",type:"address"},{internalType:"address",name:"lToken",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getParameters",outputs:[{internalType:"uint256",name:"minAddLiquidity",type:"uint256"},{internalType:"uint256",name:"redemptionFeeRatio",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getStateValues",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"symbol_",type:"string"},{internalType:"address[2]",name:"addresses_",type:"address[2]"},{internalType:"uint256[2]",name:"parameters_",type:"uint256[2]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"migrationDestination",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"},{internalType:"uint256",name:"graceDays",type:"uint256"}],name:"prepareMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"lAmount",type:"uint256"}],name:"removeLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class He extends me{constructor(e,t){super(e,t,Ve)}async addLiquidity(e,t){const n=[Object(l.n)(t)];return await this._transact("addLiquidity",n,e)}async removeLiquidity(e,t){const n=[Object(l.n)(t)];return await this._transact("removeLiquidity",n,e)}async getParameters(){const e=await this._call("getParameters");return{minAddLiquidity:Object(l.c)(e.minAddLiquidity),redemptionFeeRatio:Object(l.c)(e.redemptionFeeRatio)}}async getStateValues(){const e=await this._call("getStateValues");return{liquidity:Object(l.c)(e)}}async getLiquidity(){const e=await this._call("getStateValues");if(e&&e.liquidity)return Object(l.c)(e.liquidity);throw new Error(`unable to get liquidity of this clp pool ${this.poolAddress}`)}}const $e=[{inputs:[{internalType:"contract CakeToken",name:"_cake",type:"address"},{internalType:"contract SyrupBar",name:"_syrup",type:"address"},{internalType:"address",name:"_devaddr",type:"address"},{internalType:"uint256",name:"_cakePerBlock",type:"uint256"},{internalType:"uint256",name:"_startBlock",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"pid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"},{inputs:[],name:"BONUS_MULTIPLIER",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"contract IBEP20",name:"_lpToken",type:"address"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"cake",outputs:[{internalType:"contract CakeToken",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"cakePerBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_devaddr",type:"address"}],name:"dev",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"devaddr",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"enterStaking",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"}],name:"getMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"leaveStaking",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"migrate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"migrator",outputs:[{internalType:"contract IMigratorChef",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingCake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolInfo",outputs:[{internalType:"contract IBEP20",name:"lpToken",type:"address"},{internalType:"uint256",name:"allocPoint",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"accCakePerShare",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"poolLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_allocPoint",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IMigratorChef",name:"_migrator",type:"address"}],name:"setMigrator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"syrup",outputs:[{internalType:"contract SyrupBar",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalAllocPoint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"multiplierNumber",type:"uint256"}],name:"updateMultiplier",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_pid",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}];class ze extends me{constructor(e,t){super(e,t,$e)}async addLiquidity(e,t){const n=[391,Object(l.n)(t)];return await this._transact("deposit",n,e)}async removeLiquidity(e,t){const n=[391,Object(l.n)(t)];return await this._transact("withdraw",n,e)}async getLiquidity(e){const t=await this._call("userInfo",[391,e]);return t&&t.amount?Object(l.c)(t.amount):(console.log("the amount is not exist "),"0")}}const We=function(){const e={};return(t,n)=>{let i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];const a=new Ue(t,n);return e[i]=a,a}}(),Ge=function(){const e={};return(t,n)=>{let i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];const a=new He(t,n);return e[i]=a,a}}(),Ke=function(){const e={};return(t,n)=>{let i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];const a=new ze(t,n);return e[i]=a,a}}(),Je=u(class extends me{constructor(e,t){super(e,t,ge)}async getBroker(e){return await this._call("getBroker",[e])}async setBroker(e,t){return await this._transact("setBroker",[t],e)}}),Ye=u(class extends me{constructor(e,t){super(e,t,he)}async getBTokenBalance(){return await this._call("getBTokenBalance",[])}async totalWhitelistCount(){return await this._call("totalWhitelistCount",[])}async airdropPToken(e){return await this._transact("airdropPToken",[],e)}}),Xe=async(e,t)=>{if("undefined"!==typeof window&&"undefined"!==typeof window.ethereum){const n=await window.ethereum.request({method:"eth_requestAccounts"}),i=parseInt(await window.ethereum.request({method:"net_version"})),a=Array.isArray(n)&&n[0];return window.ethereum.on("accountsChanged",(e=>{let n;n=e.length>0?e[0]:"","function"===typeof t?t(n):window.location.reload()})),window.ethereum.on("chainChanged",(t=>{let n=Object(l.g)(t);"function"===typeof e?e(n):window.location.reload()})),{success:!0,account:a,chainId:i}}return{success:!1,error:"Cannot connect wallet, please install MetaMask."}},Qe=async(e,t)=>{t=f(t);const n=await I.get(e),i=await n.eth.getBalance(t);return Object(l.f)(i)},Ze=async e=>{const t=await(async e=>{const t=xe(!0);e=Object(l.q)(e);const n=await t.getValues([`${e}.claim.chainId`,`${e}.claim.amount`,`${e}.claim.deadline`,`${e}.claim.nonce`,`${e}.claim.v`,`${e}.claim.r`,`${e}.claim.s`,`${e}.claim.valid`]).catch((e=>console.log("getUserInfo",e)));if(n){const[e,t,i,a,r,s,o,u]=n;return{chainId:Object(l.d)(e),amount:Object(l.c)(t).toString(),deadline:Object(l.d)(i),nonce:Object(l.d)(a),v:Object(l.d)(r),r:s,s:o,valid:Object(l.b)(u)}}})(e),n=await(async e=>{const t=xe(!0);e=Object(l.q)(e);const n=await t.getValues([`${e}.claim.harvest.lp`,`${e}.claim.harvest.trade`]).catch((e=>console.log("getUserInfoHarvest",e)));if(n){const[e,t]=n;return{lp:Object(l.c)(e).toString(),trade:Object(l.c)(t).toString()}}})(e),i=await(async e=>{const t=xe(!0);e=Object(l.q)(e);const n=await t.getValues([`${e}.claim.total`]).catch((e=>console.log("getUserInfoTotal",e)));if(n){const[e]=n;return{total:Object(l.c)(e).toString()}}})(e);return Object.assign(t,n,i)},et=async(e,t)=>{const n=xe(!0);try{const i=k(e),a=await n.getValues([`${i}.${t}.apy`,`${i}.${t}.volume.1h`,`${i}.${t}.volume.24h`]).catch((e=>console.log("getPoolInfoApy",e)));if(a){const[e,t,n]=a;return{apy:Object(l.c)(e).toString(),volume1h:Object(l.c)(t).toString(),volume24h:Object(l.c)(n).toString()}}}catch(i){console.log(i)}},tt=async(e,t)=>{const n=xe(!0);try{const i=k(e),a=await n.getValues([`${i}.${t}.apy`,`${i}.${t}.apy2`,`${i}.${t}.volume.1h`,`${i}.${t}.volume.24h`]).catch((e=>console.log("getPoolInfoApy",e)));if(a){const[e,t,n,i]=a;return{apy:Object(l.c)(e).toString(),apy2:Object(l.c)(t).toString(),volume1h:Object(l.c)(n).toString(),volume24h:Object(l.c)(i).toString()}}}catch(i){console.log(i)}},nt=async(e,t,n)=>{const i=xe(!0);n=Object(l.q)(n);try{const a=k(e),r=await i.getValues([`${a}.${t}.${n}.volume.1h`,`${a}.${t}.${n}.volume.24h`]).catch((e=>console.log("getUserInfoInPool",e)));if(r){const[e,t]=r;return{volume1h:Object(l.c)(e).toString(),volume24h:Object(l.c)(t).toString()}}}catch(a){console.log(a)}},it=async e=>{const t=De(!0);e=Object(l.q)(e);const n=await t.getValues([`${e}.claim.chainId`,`${e}.claim.amount`,`${e}.claim.deadline`,`${e}.claim.nonce`,`${e}.claim.v1`,`${e}.claim.r1`,`${e}.claim.s1`,`${e}.claim.v2`,`${e}.claim.r2`,`${e}.claim.s2`,`${e}.claim.valid`]).catch((e=>console.log("getUserInfoAllForAirDrop",e)));if(n){const[e,t,i,a,r,s,o,u,p,c,d]=n;return{chainId:Object(l.d)(e),amount:Object(l.c)(t).toString(),deadline:Object(l.d)(i),nonce:Object(l.d)(a),v1:Object(l.d)(r),r1:s,s1:o,v2:Object(l.d)(u),r2:p,s2:c,valid:Object(l.b)(d)}}},at=async e=>{const t=Oe(!0);return await t.signature(e)},rt=async(e,t)=>{const{wormholeAddress:n,deriAddress:i}=ie(e),a=Fe(e,i);return await a.isUnlocked(t,n)},st=async(e,t)=>{const{deriAddress:n}=ie(e),i=Fe(e,n);return(await i.balanceOf(t)).toString()},ot=async(e,t)=>{let n;const a=await Ze(t),r=Object(l.n)(a.amount),{deadline:s}=a,{nonce:o}=a,{v:u}=a,{r:p}=a,{s:c}=a;if(a.valid){const a=(e=>{e=b(e);const t=Z(i.get()).filter((t=>t.chainId===e));if(t.length>0&&t[0].MiningVault)return t[0].MiningVault})(e);if(a){const i=Le(e,a);try{n={success:!0,transaction:await i.mintDToken(t,r,s,o,u,p,c)}}catch(d){n={success:!1,error:d}}}else n={success:!1,error:`cannot find the mining vault address in chain ${e}`}}else n={success:!1,error:"userinfo is not valid"};return n},ut=async(e,t,n,i)=>{const{wormholeAddress:a}=ie(e),r=Ne(e,a);let s;try{s={success:!0,transaction:await r.freeze(t,i,n)}}catch(o){s={success:!1,error:o}}return s},lt=async(e,t)=>{let n;const i=Oe(!0),a=await i.signature(t),{amount:r}=a,{fromChainId:s}=a,{fromWormhole:o}=a,u=a.nonce,{v:l}=a,{r:p}=a,{s:c}=a;if(a.valid){const{wormholeAddress:i}=ie(e);if(i){const a=Ne(e,i);try{n={success:!0,transaction:await a.mintDeri(t,r,s,o,u,l,p,c)}}catch(d){n={success:!1,error:d}}}else n={success:!1,error:`cannot find the wormhole address in chain ${s}`}}else n={success:!1,error:"userinfo is not valid"};return n},pt=async(e,t)=>{const{wormholeAddress:n,deriAddress:i}=ie(e),a=Fe(e,i);let r;try{r={success:!0,transaction:await a.unlock(t,n)}}catch(s){r={success:!1,error:s}}return r},ct=async(e,t)=>{let n;const i=await it(t),a=Object(l.n)(i.amount).toString(),{deadline:r,nonce:s,v1:o,r1:u,s1:p,v2:c,r2:d,s2:y}=i;if(i.valid){const i=(e=>{const t=[{MiningVaultRouter:"0x8d5613451Dc0592388f98d7Ab1ce5A732561936e",chainId:"56"}].filter((t=>t.chainId===e));if(t.length>0)return t[0].MiningVaultRouter;throw new Error(`getMiningVaultRouterAddressConfig: no address for chainId ${e}`)})(e);if(i){const l=qe(e,i);try{n={success:!0,transaction:await l.mint(t,a,r,s,o,u,p,c,d,y)}}catch(m){n={success:!1,error:m}}}else n={success:!1,error:`cannot find the mining vault router address in chain ${e}`}}else n={success:!1,error:"userinfo is not valid"};return n},dt=[{inputs:[{internalType:"uint256[9]",name:"parameters",type:"uint256[9]"},{internalType:"address[4]",name:"addresses",type:"address[4]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"bTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"AddLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"bTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"AddMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"liquidator",type:"address"},{indexed:!1,internalType:"uint256",name:"reward",type:"uint256"}],name:"Liquidate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"collector",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ProtocolFeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"bTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"RemoveLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"bTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"RemoveMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"symbolId",type:"uint256"},{indexed:!1,internalType:"int256",name:"tradeVolume",type:"int256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Trade",type:"event"},{inputs:[{components:[{internalType:"address",name:"bTokenAddress",type:"address"},{internalType:"address",name:"swapperAddress",type:"address"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"},{internalType:"int256",name:"discount",type:"int256"},{internalType:"int256",name:"price",type:"int256"},{internalType:"int256",name:"liquidity",type:"int256"},{internalType:"int256",name:"pnl",type:"int256"},{internalType:"int256",name:"cumulativePnl",type:"int256"}],internalType:"struct IPerpetualPool.BTokenInfo",name:"info",type:"tuple"}],name:"addBToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"blength",type:"uint256"},{internalType:"uint256",name:"slength",type:"uint256"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"addMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"int256",name:"multiplier",type:"int256"},{internalType:"int256",name:"feeRatio",type:"int256"},{internalType:"int256",name:"fundingRateCoefficient",type:"int256"},{internalType:"int256",name:"price",type:"int256"},{internalType:"int256",name:"cumulativeFundingRate",type:"int256"},{internalType:"int256",name:"tradersNetVolume",type:"int256"},{internalType:"int256",name:"tradersNetCost",type:"int256"}],internalType:"struct IPerpetualPool.SymbolInfo",name:"info",type:"tuple"}],name:"addSymbol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"targetPool",type:"address"}],name:"approvePoolMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"collectProtocolFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sourcePool",type:"address"}],name:"executePoolMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getAddresses",outputs:[{internalType:"address",name:"lTokenAddress",type:"address"},{internalType:"address",name:"pTokenAddress",type:"address"},{internalType:"address",name:"routerAddress",type:"address"},{internalType:"address",name:"protocolFeeCollector",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"}],name:"getBToken",outputs:[{components:[{internalType:"address",name:"bTokenAddress",type:"address"},{internalType:"address",name:"swapperAddress",type:"address"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"},{internalType:"int256",name:"discount",type:"int256"},{internalType:"int256",name:"price",type:"int256"},{internalType:"int256",name:"liquidity",type:"int256"},{internalType:"int256",name:"pnl",type:"int256"},{internalType:"int256",name:"cumulativePnl",type:"int256"}],internalType:"struct IPerpetualPool.BTokenInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"}],name:"getBTokenOracle",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLengths",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getParameters",outputs:[{internalType:"uint256",name:"decimals0",type:"uint256"},{internalType:"int256",name:"minBToken0Ratio",type:"int256"},{internalType:"int256",name:"minPoolMarginRatio",type:"int256"},{internalType:"int256",name:"minInitialMarginRatio",type:"int256"},{internalType:"int256",name:"minMaintenanceMarginRatio",type:"int256"},{internalType:"int256",name:"minLiquidationReward",type:"int256"},{internalType:"int256",name:"maxLiquidationReward",type:"int256"},{internalType:"int256",name:"liquidationCutRatio",type:"int256"},{internalType:"int256",name:"protocolFeeCollectRatio",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeeAccrued",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"getSymbol",outputs:[{components:[{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"int256",name:"multiplier",type:"int256"},{internalType:"int256",name:"feeRatio",type:"int256"},{internalType:"int256",name:"fundingRateCoefficient",type:"int256"},{internalType:"int256",name:"price",type:"int256"},{internalType:"int256",name:"cumulativeFundingRate",type:"int256"},{internalType:"int256",name:"tradersNetVolume",type:"int256"},{internalType:"int256",name:"tradersNetCost",type:"int256"}],internalType:"struct IPerpetualPool.SymbolInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"getSymbolOracle",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"liquidator",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"blength",type:"uint256"},{internalType:"uint256",name:"slength",type:"uint256"}],name:"liquidate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"blength",type:"uint256"},{internalType:"uint256",name:"slength",type:"uint256"}],name:"removeLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"blength",type:"uint256"},{internalType:"uint256",name:"slength",type:"uint256"}],name:"removeMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"address",name:"swapperAddress",type:"address"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"discount",type:"uint256"}],name:"setBTokenParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"feeRatio",type:"uint256"},{internalType:"uint256",name:"fundingRateCoefficient",type:"uint256"}],name:"setSymbolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"int256",name:"tradeVolume",type:"int256"},{internalType:"uint256",name:"blength",type:"uint256"},{internalType:"uint256",name:"slength",type:"uint256"}],name:"trade",outputs:[],stateMutability:"nonpayable",type:"function"}],yt=[{inputs:[{internalType:"address",name:"lTokenAddress",type:"address"},{internalType:"address",name:"pTokenAddress",type:"address"},{internalType:"address",name:"liquidatorQualifierAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"ExecuteMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"PrepareMigration",type:"event"},{inputs:[{internalType:"address",name:"bTokenAddress",type:"address"},{internalType:"address",name:"swapperAddress",type:"address"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"discount",type:"uint256"}],name:"addBToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolRouter.PriceInfo[]",name:"infos",type:"tuple[]"}],name:"addLiquidityWithPrices",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"addMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolRouter.PriceInfo[]",name:"infos",type:"tuple[]"}],name:"addMarginWithPrices",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"multiplier",type:"uint256"},{internalType:"uint256",name:"feeRatio",type:"uint256"},{internalType:"uint256",name:"fundingRateCoefficient",type:"uint256"}],name:"addSymbol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"approveMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimNewController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"sourceRouter",type:"address"}],name:"executeMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"liquidate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolRouter.PriceInfo[]",name:"infos",type:"tuple[]"}],name:"liquidateWithPrices",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidatorQualifier",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationDestination",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"graceDays",type:"uint256"}],name:"prepareMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"removeLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolRouter.PriceInfo[]",name:"infos",type:"tuple[]"}],name:"removeLiquidityWithPrices",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"removeMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolRouter.PriceInfo[]",name:"infos",type:"tuple[]"}],name:"removeMarginWithPrices",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"address",name:"swapperAddress",type:"address"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"discount",type:"uint256"}],name:"setBTokenParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"qualifierAddress",type:"address"}],name:"setLiquidatorQualifier",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setNewController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"poolAddress",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"feeRatio",type:"uint256"},{internalType:"uint256",name:"fundingRateCoefficient",type:"uint256"}],name:"setSymbolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"int256",name:"tradeVolume",type:"int256"}],name:"trade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"int256",name:"tradeVolume",type:"int256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolRouter.PriceInfo[]",name:"infos",type:"tuple[]"}],name:"tradeWithPrices",outputs:[],stateMutability:"nonpayable",type:"function"}],mt=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint256",name:"numBTokens_",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"bTokenId",type:"uint256"},{indexed:!1,internalType:"int256",name:"liquidity",type:"int256"},{indexed:!1,internalType:"int256",name:"pnl",type:"int256"},{indexed:!1,internalType:"int256",name:"lastCumulativePnl",type:"int256"}],name:"UpdateAsset",type:"event"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"exists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"}],name:"getAsset",outputs:[{components:[{internalType:"int256",name:"liquidity",type:"int256"},{internalType:"int256",name:"pnl",type:"int256"},{internalType:"int256",name:"lastCumulativePnl",type:"int256"}],internalType:"struct ILToken.Asset",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"getAssets",outputs:[{components:[{internalType:"int256",name:"liquidity",type:"int256"},{internalType:"int256",name:"pnl",type:"int256"},{internalType:"int256",name:"lastCumulativePnl",type:"int256"}],internalType:"struct ILToken.Asset[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"numBTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"num",type:"uint256"}],name:"setNumBTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"},{components:[{internalType:"int256",name:"liquidity",type:"int256"},{internalType:"int256",name:"pnl",type:"int256"},{internalType:"int256",name:"lastCumulativePnl",type:"int256"}],internalType:"struct ILToken.Asset",name:"asset",type:"tuple"}],name:"updateAsset",outputs:[],stateMutability:"nonpayable",type:"function"}],bt=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint256",name:"numSymbols_",type:"uint256"},{internalType:"uint256",name:"numBTokens_",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"bTokenId",type:"uint256"},{indexed:!1,internalType:"int256",name:"amount",type:"int256"}],name:"UpdateMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"symbolId",type:"uint256"},{indexed:!1,internalType:"int256",name:"volume",type:"int256"},{indexed:!1,internalType:"int256",name:"cost",type:"int256"},{indexed:!1,internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],name:"UpdatePosition",type:"event"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"exists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"}],name:"getMargin",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"getMargins",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"getPosition",outputs:[{components:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],internalType:"struct IPToken.Position",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"getPositions",outputs:[{components:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],internalType:"struct IPToken.Position[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"numBTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"numSymbols",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"num",type:"uint256"}],name:"setNumBTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"num",type:"uint256"}],name:"setNumSymbols",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"bTokenId",type:"uint256"},{internalType:"int256",name:"amount",type:"int256"}],name:"updateMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"int256[]",name:"margins",type:"int256[]"}],name:"updateMargins",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"symbolId",type:"uint256"},{components:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],internalType:"struct IPToken.Position",name:"position",type:"tuple"}],name:"updatePosition",outputs:[],stateMutability:"nonpayable",type:"function"}];const ft=e=>({liquidity:Object(l.c)(e[0]),pnl:Object(l.c)(e[1]),lastCumulativePnl:Object(l.c)(e[2])});const gt=e=>({volume:Object(l.c)(e.volume),cost:Object(l.c)(e.cost),lastCumulativeFundingRate:Object(l.c)(e.lastCumulativeFundingRate)});const ht=e=>{let t={};return(n,i)=>{const a=i;return Object.keys(t).includes(a)||(t[a]=new e(n,i)),t[a]}},Tt=ht(class extends me{constructor(e,t){super(e,t,dt),this.bTokenCount=0,this.symbolCount=0,this.lTokenAddress="",this.pTokenAddress="",this.routerAddress="",this.protocolFeeCollector="",this.protocolFeeAccrued=0}async _update(){await Promise.all([this.getLengths(),this.getAddresses(),this.getParameters()])}async getLengths(){try{const e=await this._call("getLengths");e[0]&&e[1]&&(this.bTokenCount=parseInt(e[0]),this.symbolCount=parseInt(e[1]))}catch(e){throw new Error(`PerpetualPool#_getLength error: ${e}`)}}async getAddresses(){try{const e=await this._call("getAddresses");this.lTokenAddress=e.lTokenAddress,this.pTokenAddress=e.pTokenAddress,this.routerAddress=e.routerAddress,this.protocolFeeCollector=e.protocolFeeCollector}catch(e){throw new Error(`PerpetualPool#_getAddress error: ${e}`)}}async getParameters(){const e=await this._call("getParameters");return{decimals0:e.decimals0,minBToken0Ratio:Object(l.c)(e.minBToken0Ratio),minPoolMarginRatio:Object(l.c)(e.minPoolMarginRatio),minInitialMarginRatio:Object(l.c)(e.minInitialMarginRatio),minMaintenanceMarginRatio:Object(l.c)(e.minMaintenanceMarginRatio),minLiquidationReward:Object(l.c)(e.minLiquidationReward),maxLiquidationReward:Object(l.c)(e.maxLiquidationReward),liquidationCutRatio:Object(l.c)(e.liquidationCutRatio),protocolFeeCollectRatio:Object(l.c)(e.protocolFeeCollectRatio)}}async getProtocolFeeAccrued(){const e=await this._call("getProtocolFeeAccrued");this.protocolFeeAccrued=Object(l.c)(e)}async getBToken(e){try{const t=await this._call("getBToken",[e]);return{bTokenAddress:t.bTokenAddress,swapperAddress:t.bTokenAddress,oracleAddress:t.oracleAddress,decimals:t.decimals,discount:Object(l.c)(t.discount),price:Object(l.c)(t.price),liquidity:Object(l.c)(t.liquidity),pnl:Object(l.c)(t.pnl),cumulativePnl:Object(l.c)(t.cumulativePnl)}}catch(t){throw new Error(`PerpetualPool#getBToken error: ${t}`)}}async getBTokenOracle(e){return await this._call("getBTokenOracle",[e])}async getSymbol(e){try{const t=await this._call("getSymbol",[e]);return{symbol:t.symbol,oracleAddress:t.oracleAddress,multiplier:Object(l.c)(t.multiplier),feeRatio:Object(l.c)(t.feeRatio),fundingRateCoefficient:Object(l.c)(t.fundingRateCoefficient),price:Object(l.c)(t.price),cumulativeFundingRate:Object(l.c)(t.cumulativeFundingRate),tradersNetVolume:Object(l.c)(t.tradersNetVolume),tradersNetCost:Object(l.c)(t.tradersNetCost)}}catch(t){throw new Error(`PerpetualPool#getSymbol error: ${t}`)}}async getSymbolOracle(e){return await this._call("getSymbolOracle",[e])}async _getTimeStamp(e){return await this._init(),await this.web3.eth.getBlock(e)}async getLastUpdatedBlockNumber(){await this._init();const e=await this.web3.eth.getStorageAt(this.contractAddress,0);return Object(l.g)(e)}async getLatestBlockNumber(){await this._init();return await this.web3.eth.getBlockNumber()}_calculateFee(e,t,n,i){return Object(l.a)(e).abs().times(t).times(n).times(i).toString()}async _getBlockInfo(e){return await this._init(),await this.web3.eth.getBlock(e)}async _getPastEvents(e,t={},n=0,i=0){await this._init();let a,r=[];for(a=["56","97","127","80001"].includes(this.chainId)?999:4999,n+a>i&&(a=i-n);n<=i;){let s=await this.contract.getPastEvents(e,{filter:t,fromBlock:n,toBlock:n+a});for(let e of s)r.push(e);(n+=a+1)+a>i&&(a=i-n)}return r}}),vt=ht(class extends me{constructor(e,t){super(e,t,yt),this.poolAddress=""}async pool(){return this.poolAddress=await this._call("pool"),this.poolAddress}async addLiquidity(e,t,n){return this.poolAddress||await this.pool(),await this._transact("addLiquidity",[t,Object(l.n)(n)],e)}async removeLiquidity(e,t,n,i){return i?await this._transact("removeLiquidity",[t,r],e):await this._transact("removeLiquidity",[t,Object(l.n)(n)],e)}async addMargin(e,t,n){return this.poolAddress||await this.pool(),await this._transact("addMargin",[t,Object(l.n)(n)],e)}async removeMargin(e,t,n,i){return this.poolAddress||await this.pool(),i?await this._transact("removeMargin",[t,r],e):await this._transact("removeMargin",[t,Object(l.n)(n)],e)}async trade(e,t,n){return this.poolAddress||await this.pool(),await this._transact("trade",[t,Object(l.n)(n)],e)}async addLiquidityWithPrices(e,t,n,i){return this.poolAddress||await this.pool(),await this._transact("addLiquidityWithPrices",[t,Object(l.n)(n),i],e)}async removeLiquidityWithPrices(e,t,n,i,a){return a?await this._transact("removeLiquidityWithPrices",[t,r,i],e):await this._transact("removeLiquidityWithPrices",[t,Object(l.n)(n),i],e)}async addMarginWithPrices(e,t,n,i){return this.poolAddress||await this.pool(),await this._transact("addMarginWithPrices",[t,Object(l.n)(n),i],e)}async removeMarginWithPrices(e,t,n,i,a){return this.poolAddress||await this.pool(),a?await this._transact("removeMarginWithPrices",[t,r,i],e):await this._transact("removeMarginWithPrices",[t,Object(l.n)(n),i],e)}async tradeWithPrices(e,t,n,i){return this.poolAddress||await this.pool(),await this._transact("tradeWithPrices",[t,Object(l.n)(n),i],e)}}),wt=ht(class extends me{constructor(e,t){super(e,t,mt)}async balanceOf(e){return await this._call("balanceOf",[e])}async pool(){return await this._call("pool")}async exists(e){return await this._call("exists",[e])}async getAsset(e,t){const n=await this._call("getAsset",[e,t]);if(Array.isArray(n))return ft(n);throw console.log("address",this.contractAddress),console.log("res",n),new Error(`LToken#getAsset: invalid result with (${e} ${t})`)}async getAssets(e){const t=await this._call("getAssets",[e]);if(Array.isArray(t))return t.map((e=>ft(e)));throw new Error(`LToken#getAsset: invalid result with (${e})`)}}),kt=ht(class extends me{constructor(e,t){super(e,t,bt)}async pool(){return await this._call("pool")}async balanceOf(e){return await this._call("balanceOf",[e])}async exists(e){return await this._call("exists",[e])}async getMargin(e,t){const n=await this._call("getMargin",[e,t]);return Object(l.c)(n)}async getMargins(e){const t=await this._call("getMargins",[e]);if(Array.isArray(t))return t.map((e=>Object(l.c)(e)))}async getPosition(e,t){const n=await this._call("getPosition",[e,t]);if(Array.isArray(n))return gt(n);throw new Error(`PToken#getMargin: invalid result with (${e})`)}async getPositions(e){const t=await this._call("getPositions",[e]);if(Array.isArray(t))return t.map((e=>gt(e)))}}),It=async(e,t,n)=>{e=b(e),t=f(t),n=f(n);const{address:i}=re(e);let a;try{const r=Je(e,i);a={success:!0,transaction:await r.setBroker(t,n)}}catch(r){a={success:!1,error:r}}return a},At=()=>"prod"===i.get()?"0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA":"0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6",St=async(e,t)=>{let n,i=At();try{n={success:!0,transaction:await Ye(e,i).airdropPToken(t)}}catch(a){n={success:!1,error:a}}return n},Et=async e=>{let t,n=At();try{t=await Ye(e,n).totalWhitelistCount()}catch(i){console.log(`${i}`)}return t},Mt=async(e,t,n)=>{let i="";try{const{pToken:a}=K(t),r=kt(e,a),s=await r.balanceOf(n);"1"===s?i=!0:"0"===s&&(i=!1)}catch(a){console.log(`${a}`)}return i},xt=(e,t,n,i,a)=>Object(l.a)(e*t*n/i*a).abs(),Ot=(e,t,n,i,a)=>e*t*n/i*a,Dt=(e,t)=>{const n=w(e);return Object(l.a)(t).times(n)},Ct=(e,t)=>e.eq(0)?Object(l.a)(0):t.div(e),Pt=(e,t,n,i,a,r,s,o)=>{const u=Ct(t,n),p=i.times(o).times(r),c=n.plus(a).minus(p).minus(p.abs().times(s));return Object(l.l)(Object(l.m)(e,c.div(u)),Object(l.a)(0))},Rt=(e,t,n)=>e.eq(0)?Object(l.a)(0):t.div(e).div(n),Bt=(e,t,n,i)=>t.abs().times(e).times(n).times(i),jt=(e,t,n,i)=>t.times(e).times(n).minus(i),Ft=(e,t,n,i,a)=>{const r=n.minus(t).div(e).div(i);let s=e.gt(0)?r.div(Object(l.a)(1).minus(a)):r.div(Object(l.a)(1).plus(a));return s=Object(l.l)(s,Object(l.a)(0)),s},Nt=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"lShares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"AddLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"DepositMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"ExecuteMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"int256",name:"volume",type:"int256"},{indexed:!1,internalType:"int256",name:"cost",type:"int256"},{indexed:!1,internalType:"uint256",name:"margin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"address",name:"liquidator",type:"address"},{indexed:!1,internalType:"uint256",name:"reward",type:"uint256"}],name:"Liquidate",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"PrepareMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"lShares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"RemoveLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"int256",name:"tradeVolume",type:"int256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Trade",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"WithdrawMargin",type:"event"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"approveMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"depositMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"depositMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"source",type:"address"}],name:"executeMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getAddresses",outputs:[{internalType:"address",name:"bToken",type:"address"},{internalType:"address",name:"pToken",type:"address"},{internalType:"address",name:"lToken",type:"address"},{internalType:"address",name:"oracle",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getParameters",outputs:[{internalType:"uint256",name:"multiplier",type:"uint256"},{internalType:"uint256",name:"feeRatio",type:"uint256"},{internalType:"uint256",name:"minPoolMarginRatio",type:"uint256"},{internalType:"uint256",name:"minInitialMarginRatio",type:"uint256"},{internalType:"uint256",name:"minMaintenanceMarginRatio",type:"uint256"},{internalType:"uint256",name:"minAddLiquidity",type:"uint256"},{internalType:"uint256",name:"redemptionFeeRatio",type:"uint256"},{internalType:"uint256",name:"fundingRateCoefficient",type:"uint256"},{internalType:"uint256",name:"minLiquidationReward",type:"uint256"},{internalType:"uint256",name:"maxLiquidationReward",type:"uint256"},{internalType:"uint256",name:"liquidationCutRatio",type:"uint256"},{internalType:"uint256",name:"priceDelayAllowance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getStateValues",outputs:[{internalType:"int256",name:"cumuFundingRate",type:"int256"},{internalType:"uint256",name:"cumuFundingRateBlock",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"int256",name:"tradersNetVolume",type:"int256"},{internalType:"int256",name:"tradersNetCost",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"symbol_",type:"string"},{internalType:"address[4]",name:"addresses_",type:"address[4]"},{internalType:"uint256[12]",name:"parameters_",type:"uint256[12]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"liquidate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"liquidate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"migrationDestination",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"},{internalType:"uint256",name:"graceDays",type:"uint256"}],name:"prepareMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"lShares",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"lShares",type:"uint256"}],name:"removeLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"int256",name:"tradeVolume",type:"int256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"trade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"int256",name:"tradeVolume",type:"int256"}],name:"trade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"int256",name:"tradeVolume",type:"int256"},{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"tradeWithMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"int256",name:"tradeVolume",type:"int256"},{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"tradeWithMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"}],name:"withdrawMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"withdrawMargin",outputs:[],stateMutability:"nonpayable",type:"function"}];class qt extends me{constructor(e,t,n){super(e,t,Nt,n)}async symbol(){return await this._call("symbol")}async getStateValues(){let e;const t=Object(l.a)(0);try{const t=await this._call("getStateValues");e={cumuFundingRate:Object(l.c)(t.cumuFundingRate),cumuFundingRateBlock:Object(l.a)(t.cumuFundingRateBlock),liquidity:Object(l.c)(t.liquidity),tradersNetVolume:Object(l.c)(t.tradersNetVolume),tradersNetCost:Object(l.c)(t.tradersNetCost)}}catch(n){e={cumuFundingRate:t,cumuFundingRateBlock:t,liquidity:t,tradersNetCost:t,tradersNetVolume:t},console.log(`getStateValues: ${n}`)}return e}async getParameters(){let e;const t=Object(l.a)(0);try{const t=await this._call("getParameters");e={multiplier:Object(l.c)(t.multiplier),feeRatio:Object(l.c)(t.feeRatio),minPoolMarginRatio:Object(l.c)(t.minPoolMarginRatio),minInitialMarginRatio:Object(l.c)(t.minInitialMarginRatio),minMaintenanceMarginRatio:Object(l.c)(t.minMaintenanceMarginRatio),minAddLiquidity:Object(l.c)(t.minAddLiquidity),redemptionFeeRatio:Object(l.c)(t.redemptionFeeRatio),fundingRateCoefficient:Object(l.c)(t.fundingRateCoefficient),minLiquidationReward:Object(l.c)(t.minLiquidationReward),maxLiquidationReward:Object(l.c)(t.maxLiquidationReward),liquidationCutRatio:Object(l.c)(t.liquidationCutRatio),priceDelayAllowance:Object(l.a)(t.priceDelayAllowance)}}catch(n){e={multiplier:t,feeRatio:t,minPoolMarginRatio:t,minInitialMarginRatio:t,minMaintenanceMarginRatio:t,minAddLiquidity:t,redemptionFeeRatio:t,fundingRateCoefficient:t,minLiquidationReward:t,maxLiquidationReward:t,liquidationCutRatio:t,priceDelayAllowance:t},console.log(`getParameters: ${n}`)}return e}_getTransactionReceipt(e){const t=this;return function n(i,a){t.web3.eth.getTransactionReceipt(e,((e,t)=>{e?a(e):null==t?setTimeout((()=>n(i,a)),500):!1===t.status?(t.errorMessage="Transaction failed",a(t)):i(t)}))}}async _estimatedGas(e,t,n){let i=0;for(let r=0;r<20;r++)try{i=await this.contract.methods[e](...t).estimateGas({from:n}),i=parseInt(1.25*i);break}catch(a){}return 0==i&&(i=532731),i>532731&&(i=532731),i}async _transact(e,t=[],n){await this._init();const i=await this.symbol(),a=await ce(i);let r=[a.timestamp,a.price,a.v,a.r,a.s];const s=await this._estimatedGas(e,[...t,...r],n);let o=[{from:n,to:this.contractAddress,gas:Object(l.p)(s),value:Object(l.p)("0"),data:this.contract.methods[e](...t,...r).encodeABI()}],u=await window.ethereum.request({method:"eth_sendTransaction",params:o});return await new Promise(this._getTransactionReceipt(u))}async getFundingRate(){let e,t,n,i;const a=await this.symbol();e=await pe(a);try{const a=await this.getStateValues(),r=await this.getParameters(),{tradersNetVolume:s,liquidity:o}=a,{multiplier:u,fundingRateCoefficient:l,minPoolMarginRatio:p}=r,c=[s,e,u,o,l];g(...c)?(t="0",n="0"):(n=Ot(...c),t=Dt(this.chainId,n));const d=[s,e,u,o,p];return i=g(...d)?"0":xt(...d),{price:e,multiplier:u.toString(),fundingRate:t,fundingRatePerBlock:n,tradersNetVolume:s.toString(),liquidity:o.toString(),fundingRateCoefficient:l.toString(),liquidityUsed:i,poolMarginRatio:p.toString()}}catch(r){throw console.log("PerpetualPool#gerFundingRate():",r),r}}async depositMargin(e,t){let n;try{n={success:!0,transaction:await this._transact("depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)",[t],e)}}catch(i){console.log("here"),n={success:!1,error:i}}return n}async _getBlockInfo(e){return await this._init(),await this.web3.eth.getBlock(e)}async _getPastEvents(e,t={},n=0,i=0){await this._init();let a,r=[];for(a=["56","137","97","80001"].includes(this.chainId)?999:4999,n+a>i&&(a=i-n);n<=i;){let s=await this.contract.getPastEvents(e,{filter:t,fromBlock:n,toBlock:n+a});for(let e of s)r.push(e);(n+=a+1)+a>i&&(a=i-n)}return r}async _getTimeStamp(e){return await this._init(),await this.web3.eth.getBlock(e)}_calculateFee(e,t,n,i){return Object(l.a)(e).abs().times(t).times(n).times(i).toString()}}const Lt=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"int256",name:"volume",type:"int256"},{indexed:!1,internalType:"int256",name:"cost",type:"int256"},{indexed:!1,internalType:"int256",name:"lastCumuFundingRate",type:"int256"},{indexed:!1,internalType:"uint256",name:"margin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastUpdateTimestamp",type:"uint256"}],name:"Update",type:"event"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"exists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"exists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"getPosition",outputs:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumuFundingRate",type:"int256"},{internalType:"uint256",name:"margin",type:"uint256"},{internalType:"uint256",name:"lastUpdateTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getPosition",outputs:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumuFundingRate",type:"int256"},{internalType:"uint256",name:"margin",type:"uint256"},{internalType:"uint256",name:"lastUpdateTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"margin",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumuFundingRate",type:"int256"},{internalType:"uint256",name:"margin",type:"uint256"},{internalType:"uint256",name:"lastUpdateTimestamp",type:"uint256"}],name:"update",outputs:[],stateMutability:"nonpayable",type:"function"}];class _t extends me{constructor(e,t){super(e,t,Lt)}async getPositionInfo(e){let t={};try{const n=await this._call("getPosition(address)",[e]);t={volume:Object(l.c)(n[0]),cost:Object(l.c)(n[1]),lastCumuFundingRate:Object(l.c)(n[2]),margin:Object(l.c)(n[3]),lastUpdateTimestamp:Object(l.a)(n[4])}}catch(n){t={volume:Object(l.a)(0),cost:Object(l.a)(0),lastCumuFundingRate:Object(l.a)(0),margin:Object(l.a)(0),lastUpdateTimestamp:Object(l.a)(0)}}return t}async exists(e){return await this._call("exists",[e])}}const Ut=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class Vt extends me{constructor(e,t){super(e,t,Ut)}async balance(e){return Object(l.c)(await this._call("balanceOf",[e]))}async balanceOf(e){return Object(l.c)(await this._call("balanceOf",[e]))}async totalSupply(){return Object(l.c)(await this._call("totalSupply"))}}const Ht=(()=>{const e={};return(t,n)=>{let i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];const a=new qt(t,n);return e[i]=a,a}})(),$t=function(){const e={};return(t,n)=>{let i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];const a=new _t(t,n);return e[i]=a,a}}(),zt=function(){const e={};return(t,n)=>{let i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];const a=new Vt(t,n);return e[i]=a,a}}(),Wt=async(e,t,n)=>{const{type:i}=ne(e,t);return"slp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t);if(i){const a=We(e,t),r=Ce(e,i),[s,o,u]=await Promise.all([r.balanceOf(t),r.balanceOf(n),a.getLiquidity(n)]);return{poolLiquidity:s.toString(),bTokenBalance:o.toString(),shares:u.toString(),shareValue:"1"}}return console.log("no SlpPool address, please check"),{}})(e,t,n):"clp"===i?await(async(e,t,n)=>{const{lTokenAddress:i}=ne(e,t),a=Ge(e,t),r=zt(e,i),[s,o]=await Promise.all([r.balanceOf(n),r.totalSupply()]),{liquidity:u}=await a.getStateValues();return{totalSupply:o.toString(),poolLiquidity:u.toString(),shares:s.toString(),shareValue:(o.eq(0)?Object(l.a)(0):u.div(o)).toString(),maxRemovableShares:s.toString()}})(e,t,n):"clp2"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t);if(i){const a=Ke(e,t),r=Ce(e,i),[s,o,u]=await Promise.all([r.balanceOf(t),r.balanceOf(n),a.getLiquidity(n)]);return{poolLiquidity:s.toString(),bTokenBalance:o.toString(),shares:u.toString(),shareValue:"1"}}return console.log("no Clp2Pool address, please check"),{}})(e,t,n):void console.log(`getLpLiquidityInfo(): invalid lp type ${i}`)},Gt=async(e,t,n)=>{const{type:i}=ne(e,t);return"slp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);return await a.isUnlocked(n,t)})(e,t,n):"clp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);return await a.isUnlocked(n,t)})(e,t,n):"clp2"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);return await a.isUnlocked(n,t)})(e,t,n):void console.log(`isLpLiquidity(): invalid lp type ${i}`)},Kt=async(e,t,n)=>{const{type:i}=ne(e,t);return"slp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);return(await a.balanceOf(n)).toString()})(e,t,n):"clp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);return(await a.balanceOf(n)).toString()})(e,t,n):"clp2"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);return(await a.balanceOf(n)).toString()})(e,t,n):void console.log(`getLpWalletBalance(): invalid lp type ${i}`)},Jt=async(e,t,n,i)=>{const a=Ht(e,t);return await a.depositMargin(n,Object(l.n)(i))},Yt=async(e,t,n,i)=>{let a;const{pTokenAddress:r,symbol:s}=ae(e,t),o=Ht(e,t),u=$t(e,r,t),p=await pe(s),{volume:c,margin:d,cost:y}=await u.getPositionInfo(n),{multiplier:m,minInitialMarginRatio:b}=await o.getParameters(),f=((e,t,n,i,a,r)=>{if(t.eq(0))return n;const s=Bt(e,t,a,r),o=jt(e,t,a,i);return Object(l.l)(n.plus(o).minus(s.times(1.02)),Object(l.a)(0))})(p,c,d,y,m,b);if(Object(l.a)(i).lte(f))try{a={success:!0,transaction:await o._transact("withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)",[Object(l.n)(i)],n)}}catch(g){a={success:!1,error:g}}else a={success:!1,error:"amount exceeds allowed"};return a},Xt=async(e,t,n,i)=>{const a=Ht(e,t);let r;try{r={success:!0,transaction:await a._transact("addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)",[Object(l.n)(i)],n)}}catch(s){r={success:!1,error:s}}return r},Qt=async(e,t,n,i)=>{const{lTokenAddress:a,symbol:r}=ae(e,t),s=Ht(e,t),o=zt(e,a,t),u=await pe(r),[p,c]=await Promise.all([o.balance(n),o.totalSupply()]),{multiplier:d,minPoolMarginRatio:y}=await s.getParameters(),{liquidity:m,tradersNetVolume:b,tradersNetCost:f}=await s.getStateValues(),g=Pt(p,c,m,b,f,d,y,u);let h;if(Object(l.a)(i).lte(g))try{h={success:!0,transaction:await s._transact("removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)",[Object(l.n)(i)],n)}}catch(T){h={success:!1,error:T}}else h={success:!1,error:"shares exceeds allowed"};return h},Zt=async(e,t,n,i,a="0")=>{const{pTokenAddress:r,symbol:s}=ae(e,t),o=Ht(e,t),u=$t(e,r,t),p=await pe(s),{multiplier:c,minInitialMarginRatio:d,minPoolMarginRatio:y}=await o.getParameters(),{liquidity:m,tradersNetVolume:b}=await o.getStateValues(),{volume:f,margin:g}=await u.getPositionInfo(n);let h;const T=((e,t,n,i,a,r,s,o,u,l)=>{const p=n.plus(u).abs().times(e).times(r).times(o),c=i.div(s).div(e).div(r);return t.plus(l).gte(p)?u.lte(c.minus(a))&&u.gte(c.negated().minus(a))?{success:!0}:{success:!1,message:"Pool insufficient liquidity"}:{success:!1,message:"Trader insufficient margin"}})(p,g,f,m,b,c,y,d,Object(l.a)(i),Object(l.a)(a));if(T.success)try{h={success:!0,transaction:await o._transact("tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)",[Object(l.n)(i),Object(l.n)(a)],n)}}catch(v){h={success:!1,error:v}}else h={success:!1,error:T.message};return h},en=async(e,t,n)=>{const{pTokenAddress:i}=ae(e,t),a=Ht(e,t),r=$t(e,i,t);let s,{volume:o}=await r.getPositionInfo(n);if(o=o.negated(),o.eq(0))s={success:!1,error:"no position to close"};else try{s={success:!0,transaction:await a._transact("tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)",[Object(l.n)(o),"0"],n)}}catch(u){s={success:!1,error:u}}return s};var tn=n(101);const nn=function(){let e={};return{get(t,n){const i=`${t}.${n}`;if(Object.keys(e).includes(i))return e[i];console.log(`Cache key is not in resourceMap: ${i}`)},set(t,n,i){e[`${t}.${n}`]=i}}}(),an=(function(){let e=""}(),function(){let e="",t=null;return{get:()=>(""===e&&console.log("please init 'price' first"),e),async _update(t,n){try{const t=await pe(n);""!==t&&(e=t)}catch(i){console.log(`priceCache.update: ${i}`)}},update(e,n){const i=this;t=setInterval((()=>{i._update(e,n)}),3e3)},clear(){t&&clearInterval(t),e=""}}}()),rn=function(){let e={};return{get:()=>(e.multiplier||console.log("please init 'perpetual pool parameters' first"),e),async update(t,n){const i=Ht(t,n),a=await i.getParameters();return a.multiplier&&(e=a),a}}}(),sn=function(){let e=null;return{get(){if(e)return e;console.log("wsInstance.get() error: ws instance is not init")},set(t){try{const n=Object(tn.io)(t,{transports:["websocket"],path:"/ws"});n.on("connect",(()=>{console.log("hello from ws:",n.id)})),n?e=n:console.log("wsInstance.get() error: ws instance is not init")}catch(n){console.log("wsInstance.set():",n)}},getOrSet(t){return e||this.set(t),e}}}(),on=async e=>{const t=sn.getOrSet(Object(s.a)(i.get()));await t.send(e);return await((e,t)=>new Promise((n=>{e.on(t,(function(e){n(JSON.parse(e))}))})))(t,"trade_tx_receipt")},un=async(e,t,n,i="0")=>{const a=await(async(e,t,n,i)=>{let a;const{bTokenAddress:r}=ne(e,t);if(r){const r=We(e,t);try{a={success:!0,transaction:await r.addLiquidity(n,i)}}catch(s){a={success:!1,error:s}}}else a={success:!1,error:"unable to get bToken address of slp pool"};return a})(e,t,n,i);if(a.success){return{...await on(`add_slp_liquidity(${e},${t},${n})`),...a}}return a},ln=async(e,t,n,i="0")=>{const a=await(async(e,t,n,i)=>{let a;const{bTokenAddress:r}=ne(e,t);if(r){const r=We(e,t);try{a={success:!0,transaction:await r.removeLiquidity(n,i)}}catch(s){a={success:!1,error:s}}}else a={success:!1,error:"unable to get bToken address of slp pool"};return a})(e,t,n,i);if(a.success){return{...await on(`remove_slp_liquidity(${e},${t},${n})`),...a}}return a},pn=async(e,t,n,i="0")=>{const a=await(async(e,t,n,i)=>{let a;const{bTokenAddress:r}=ne(e,t);if(r){const r=Ge(e,t);try{const e=await r.addLiquidity(n,i);console.log(e,typeof e),a={success:!0,transaction:e}}catch(s){a={success:!1,error:s}}}else a={success:!1,error:"unable to get bToken address of clp pool"};return a})(e,t,n,i);if(a.success){return{...await on(`add_clp_liquidity(${e},${t},${n})`),...a}}return a},cn=async(e,t,n,i="0")=>{const a=await(async(e,t,n,i)=>{let a;const{bTokenAddress:r}=ne(e,t);if(r){const r=Ge(e,t);try{a={success:!0,transaction:await r.removeLiquidity(n,i)}}catch(s){a={success:!1,error:s}}}else a={success:!1,error:"unable to get bToken address of clp pool"};return a})(e,t,n,i);if(a.success){return{...await on(`remove_clp_liquidity(${e},${t},${n})`),...a}}return a},dn=async(e,t,n,i="0")=>{const a=await(async(e,t,n,i)=>{let a;const{bTokenAddress:r}=ne(e,t);if(r){const r=Ke(e,t);try{a={success:!0,transaction:await r.addLiquidity(n,i)}}catch(s){a={success:!1,error:s}}}else a={success:!1,error:"unable to get bToken address of clp2 pool"};return a})(e,t,n,i);if(a.success){return{...await on(`add_clp_liquidity(${e},${t},${n})`),...a}}return a},yn=async(e,t,n,i="0")=>{const a=await(async(e,t,n,i)=>{let a;const{bTokenAddress:r}=ne(e,t);if(r){const r=Ke(e,t);try{a={success:!0,transaction:await r.removeLiquidity(n,i)}}catch(s){a={success:!1,error:s}}}else a={success:!1,error:"unable to get bToken address of clp2 pool"};return a})(e,t,n,i);if(a.success){return{...await on(`remove_clp_liquidity(${e},${t},${n})`),...a}}return a},mn=async(e,t,n)=>{const{type:i}=ne(e,t);return"slp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);let r;try{r={success:!0,transaction:await a.unlock(n,t)}}catch(s){r={success:!1,error:s}}return r})(e,t,n):"clp"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);let r;try{r={success:!0,transaction:await a.unlock(n,t)}}catch(s){r={success:!1,error:s}}return r})(e,t,n):"clp2"===i?await(async(e,t,n)=>{const{bTokenAddress:i}=ne(e,t),a=Ce(e,i);let r;try{r={success:!0,transaction:await a.unlock(n,t)}}catch(s){r={success:!1,error:s}}return r})(e,t,n):void console.log(`unlockLp(): invalid lp type ${i}`)},bn=async(e,t,n,i)=>{const{type:a}=ne(e,t);return"slp"===a?await un(e,t,n,i):"clp"===a?await pn(e,t,n,i):"clp2"===a?await dn(e,t,n,i):void console.log(`addLpLiquidity(): invalid lp type ${a}`)},fn=async(e,t,n,i)=>{const{type:a}=ne(e,t);return"slp"===a?await ln(e,t,n,i):"clp"===a?await cn(e,t,n,i):"clp2"===a?await yn(e,t,n,i):void console.log(`removeLpLiquidity(): invalid lp type ${a}`)},gn=async(e,t,n,i,a,r,s)=>{const o=Object(l.c)(n.tradeVolume),u=await e._getTimeStamp(i),p=o.gt(0)?"LONG":"SHORT",c=Object(l.c)(n.price),d=+u.timestamp+"000",y=e._calculateFee(o,c,r,s),m=o.abs().times(c).times(r),b=o.abs();return{direction:p,baseToken:t,price:c.toString(),notional:m.toString(),volume:b.toString(),transactionFee:y.toString(),transactionHash:a.toString(),time:d}},hn=async(e,t,n,i)=>{const a=Object(l.c)(e.volume).abs(),r=`${e.timestamp}000`,s=Object(l.c)(e.price),o=a.times(s).times(i);return{direction:"Liquidation",baseToken:n,price:s.toString(),notional:o.toString(),volume:a.toString(),transactionFee:"0",transactionHash:t.toString(),time:r}},Tn=async(e,t,n,i)=>{const{bTokenSymbol:a}=ae(e,t),r=Ht(e,t),s=await r._getBlockInfo("latest");i=parseInt(i);const o={owner:n},u=await r._getPastEvents("Trade",o,i,s.number),{multiplier:l,feeRatio:p,minInitialMarginRatio:c}=await r.getParameters(),d=[];for(let y=0;y<u.length;y++){const e=u[y],t=await gn(r,a,e.returnValues,e.blockNumber,e.transactionHash,l,p);d.unshift(t)}return d},vn=async(e,t,n,i)=>{const{bTokenSymbol:a}=ae(e,t),r=Ht(e,t),s=await r._getBlockInfo("latest");i=parseInt(i);const o={owner:n},u=await r._getPastEvents("Liquidate",o,i,s.number),{multiplier:l}=await r.getParameters(),p=[];for(let c=0;c<u.length;c++){const e=u[c],t=await hn(e.returnValues,e.transactionHash,a,l);p.unshift(t)}return p},wn=()=>Object(s.a)(i.get()),kn=async(e,t)=>{const n=await fetch(e,t);return await n.json()},In=async(e,t={method:"GET"})=>await kn(`${wn()}${e}`,t),An=(e,t,n)=>e.eq(0)?Object(l.a)(0):t.div(e).div(n),Sn=(e,t,n,i,a,r)=>{const s=n.minus(t);let o=e.gt(0)?s.div(Object(l.a)(1).minus(r)).minus(i).div(e).div(a):s.div(Object(l.a)(1).plus(r)).minus(i).div(e).div(a);return o=Object(l.l)(o,Object(l.a)(0)),o},En=(e,t,n,i)=>{const a=t;return e.gte(a)?n.minus(i).gte(0)?{success:!0}:{success:!1,error:"Pool has insufficient liquidity"}:{success:!1,error:"Trader has insufficient margin"}},Mn=(e,t,n,i)=>Object(l.a)(e).abs().times(t).times(n).times(i).toString(),xn=(e,t,n,i,a)=>{if(g(e,t,n,i,a))return Object(l.a)(i).eq(0)?Object(l.a)(0):Object(l.a)(e).times(t).times(n).times(a).div(i);throw new Error(`calculateFundingRate: invalid args: ${[e,t,n,i,a]}`)},On=(e,t)=>{const n=w(e);return Object(l.a)(t).times(n)},Dn=(e,t,n,i,a,r,s,o,u,p)=>{if(Object(l.a)(p).eq(0))return"0";{const c=[e,t,n,i,a,r,s,o,u,p];return g(...c)?Object(l.a)(a).eq(0)?Object(l.a)(0):Object(l.a)(e).times(t).times(n).times(t).times(n).times(i).div(a).times(Object(l.a)(u).minus(o)).plus(r).minus(s).times(p):(console.log(`calculateFundingFee: invalid args: ${c}`),"NaN")}},Cn=e=>e.reduce(((e,t)=>e.plus(Object(l.a)(t.liquidity).times(t.price).times(t.discount).plus(t.pnl))),Object(l.a)(0)),Pn=(e,t,n,i)=>{e[t].liquidity=Object(l.a)(e[t].liquidity).plus(n);const a=Cn(e),r=e[0],s=Object(l.a)(r.liquidity).times(r.price).times(r.discount).plus(r.pnl);return!a.eq(0)&&s.div(a).times("1").lt(i)?{success:!1,error:"Trader has insufficient bToken0"}:{success:!0}},Rn=(e,t,n,i,a,r)=>{Object(l.a)(n).gte(i)?e[t].liquidity=Object(l.a)(e[t].liquidity).minus(i):e[t].liquidity=Object(l.a)(e[t].liquidity).minus(n);let s=Cn(e),o=Object(l.a)(0);for(let u=0;u<a.length;u++){const e=a[u];if(!Object(l.a)(e.tradersNetVolume).eq(0)){const t=Object(l.a)(e.tradersNetVolume).times(e.price).times(e.multiplier);s=s.plus(e.tradersNetCost).minus(t),o=o.plus(t.abs())}}return!o.eq(0)&&s.div(o).times("1").lt(r)?{success:!1,error:"Trader has insufficient liquidity"}:{success:!0}},Bn=async(e,t,n,i)=>{try{const{lToken:a}=K(t,i),r=Tt(e,t),s=wt(e,a),o=Y(t),u=Q(t),[p,c,d]=await Promise.all([r.getParameters(),r.getBToken(i),s.getAsset(n,i)]),{minPoolMarginRatio:y}=p;let m=[];for(let e=0;e<o.length;e++)m.push(r.getBToken(o[e]));const b=await Promise.all(m);m=[];for(let e=0;e<u.length;e++)m.push(r.getSymbol(u[e]));const f=await Promise.all(m),g=f.reduce(((e,t)=>e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier).abs())),Object(l.a)(0)),h=f.reduce(((e,t)=>e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier).minus(t.tradersNetCost))),Object(l.a)(0)),T=b.reduce(((e,t,n)=>n===parseInt(i)?e.plus(t.pnl):e.plus(Object(l.a)(t.liquidity).times(t.price).times(t.discount).plus(t.pnl))),Object(l.a)(0)),{liquidity:v}=c,{liquidity:w,pnl:k,lastCumulativePnl:I}=d,A=((e,t,n,i,a,r)=>Object(l.a)(n).eq(0)?t:Object(l.l)(Object(l.m)(e.liquidity.minus(r.times(n).plus(i).minus(a).div(e.price).div(e.discount)).times("0.98"),t),Object(l.a)(0)))(b[i],w,g,h,T,y),S=k.plus(Object(l.a)(b[i].cumulativePnl).minus(I).times(w));return{poolLiquidity:v.toString(),shares:w.toString(),pnl:S.div(b[i].price).toString(),maxRemovableShares:A.toString()}}catch(a){console.log(`${a}`)}return{poolLiquidity:"",shares:"",pnl:"",maxRemovableShares:""}},jn=function(){let e={};return{get(t,n){const i=`${t}.${n}`;if(Object.keys(e).includes(i)){const[t]=e[i].split("|");return t}console.log("please init priceCache first")},set(t,n,i){if(!isNaN(parseFloat(i))){const a=Date.now().toString();e[`${t}.${n}`]=`${i}|${a}`}}}}(),Fn=function(){let e={};return{get(t,n,i){const a=`${t}.${n}.${i}`;if(Object.keys(e).includes(a))return e[a];console.log(`fundingRateCache: key is not in exist: ${a}`)},set(t,n,i,a){e[`${t}.${n}.${i}`]=a}}}(),Nn=async(e,t,n)=>{const i=Tt(e,t),{symbol:a}=K(t,null,n);let r=Y(t),s=[];for(let l=0;l<r.length;l++)s.push(i.getBToken(l));const o=(await Promise.all(s)).reduce(((e,t)=>e.plus(Object(l.a)(t.liquidity).times(t.price).times(t.discount).plus(t.pnl))),Object(l.a)(0)),[u,p,c]=await Promise.all([ye(e,a),i.getSymbol(n),i.getParameters()]);jn.set(t,n,u);const{multiplier:d,fundingRateCoefficient:y,tradersNetVolume:m,feeRatio:b}=p,{minPoolMarginRatio:f}=c,g=xn(...[m,u,d,o,y]),h=On(e,g);let T=Q(t),v=[];for(let l=0;l<T.length;l++)v.push(i.getSymbol(T[l]));const w=(await Promise.all(v)).reduce(((e,t)=>e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier).times(f).abs())),Object(l.a)(0)),k={price:u,multiplier:d.toString(),feeRatio:b.toString(),tradersNetVolume:m.toString(),liquidity:o.toString(),fundingRateCoefficient:y.toString(),minPoolMarginRatio:f.toString(),fundingRatePerBlock:g,fundingRate:h,liquidityUsed:w.div(o)};return Fn.set(e,t,n,k),k},qn=async(e,t,n,i)=>{try{let a=J(t);const r=Tt(e,t),{pToken:s}=K(t,null,i),o=kt(e,s);let u=[];for(let t=0;t<a.length;t++)u.push(Ce(e,a[t].bTokenAddress).balanceOf(n));const p=await Promise.all(u);for(let e=0;e<a.length;e++)a[e].walletBalance=p[e].toString();const c=Y(t),d=Q(t),[y,m,b]=await Promise.all([o.getMargins(n),o.getPositions(n),r.getParameters()]),{minInitialMarginRatio:f}=b;let g=[];for(let e=0;e<c.length;e++)g.push(r.getBToken(c[e]));const h=await Promise.all(g),T=h.reduce(((e,t,n)=>e.plus(Object(l.a)(t.price).times(t.discount).times(y[n]))),Object(l.a)(0));g=[];for(let e=0;e<d.length;e++)g.push(r.getSymbol(d[e]));const v=await Promise.all(g),w=v.reduce(((e,t,n)=>e.plus(Object(l.a)(t.price).times(t.multiplier).times(m[n].volume).abs().times(f))),Object(l.a)(0)),k=v.reduce(((e,t,n)=>e.plus(Object(l.a)(t.price).times(t.multiplier).times(m[n].volume).minus(m[n].cost))),Object(l.a)(0));return a=a.map(((e,t)=>(isNaN(parseFloat(h[t].price))&&"0"===h[t].price?e.availableBalance="-":e.availableBalance=Object(l.l)(Object(l.m)(T.minus(w).plus(k).div(h[t].price).div(h[t].discount),y[t]),Object(l.a)(0)).toString(),e))),a}catch(a){console.log(`${a}`)}return[]};var Ln=n(50),_n=function(){var e=Object(ue.a)(oe.a.mark((function e(t){var n;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t);case 2:return n=e.sent,e.next=5,n.json();case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),Un=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,i,a,r,s,o){var u,p,c,d,y,m,b,f,g,h,T;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return u=Object(l.c)(n.tradeVolume),e.next=3,t._getTimeStamp(i);case 3:return p=e.sent,c=u.gt(0)?"LONG":"SHORT",d=Object(l.c)(n.price),y="".concat(+p.timestamp,"000"),m=n.symbolId,b=o.find((function(e){return e.symbolId==n.symbolId})),f=t._calculateFee(u,d,r[parseInt(m)],s[parseInt(m)]),g=u.abs().times(d).times(r[parseInt(m)]),h=u.abs(),T={direction:c,symbolId:m,symbol:b&&b.symbol,price:d.toString(),notional:g.toString(),volume:h.toString(),transactionFee:f.toString(),transactionHash:a.toString(),time:y},e.abrupt("return",T);case 14:case"end":return e.stop()}}),e)})));return function(t,n,i,a,r,s,o){return e.apply(this,arguments)}}(),Vn=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,i,a,r){var s,o,u,l,p,c,d,y,m,b,f,g,h,T;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s=Q(n),o=Tt(t,n),e.next=4,o._getBlockInfo("latest");case 4:for(u=e.sent,r=parseInt(r),l=[],p=0;p<s.length;p++)l.push(o.getSymbol(s[p]));return e.next=10,Promise.all(l);case 10:return c=e.sent,d=c.map((function(e){return e.multiplier.toString()})),y=c.map((function(e){return e.feeRatio.toString()})),m={owner:i},e.next=16,o._getPastEvents("Trade",m,r,u.number);case 16:b=e.sent,f=[],b=b.filter((function(e){return e.returnValues.symbolId===a})),g=0;case 20:if(!(g<b.length)){e.next=29;break}return h=b[g],e.next=24,Un(o,h.returnValues,h.blockNumber,h.transactionHash,d,y,c);case 24:T=e.sent,f.unshift(T);case 26:g++,e.next=20;break;case 29:return e.abrupt("return",f);case 30:case"end":return e.stop()}}),e)})));return function(t,n,i,a,r){return e.apply(this,arguments)}}(),Hn=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,a,r){var o,u,p,c,d,y,m,b,f,g,h,T,v;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,u=[],e.next=4,_n("".concat(Object(s.a)(i.get()),"/trade_history/").concat(t,"/").concat(n,"/").concat(a,"/").concat(r));case 4:if((p=e.sent)&&p.success&&(o=parseInt(p.data.tradeHistoryBlock),p.data.tradeHistory&&Array.isArray(p.data.tradeHistory)&&(u=p.data.tradeHistory)),u.length>0&&(u=u.filter((function(e){return e})).map((function(e){return{direction:e.direction.trim(),symbolId:e.symbolId,symbol:e.symbol,price:Object(l.c)(e.price).toString(),notional:Object(l.c)(e.notional).toString(),volume:Object(l.c)(e.volume).toString(),transactionFee:Object(l.c)(e.transactionFee).toString(),transactionHash:e.transactionHash,time:e.time.toString()}}))),0===o){e.next=17;break}return e.next=10,Promise.all([Vn(t,n,a,r,o+1)]);case 10:return c=e.sent,d=Object(Ln.a)(c,1),y=d[0],m=y.concat(u),e.abrupt("return",m.sort((function(e,t){return parseInt(t.time)-parseInt(e.time)})));case 17:return b=K(n),f=b.initialBlock,o=parseInt(f),e.next=21,Promise.all([Vn(t,n,a,r,o+1)]);case 21:return g=e.sent,h=Object(Ln.a)(g,1),T=h[0],v=T,e.abrupt("return",v.sort((function(e,t){return parseInt(t.time)-parseInt(e.time)})));case 26:e.next=31;break;case 28:e.prev=28,e.t0=e.catch(0),console.log("getTradeHistory(".concat(t,", ").concat(n,", ").concat(a,", ").concat(r,"): ").concat(e.t0));case 31:return e.abrupt("return",[]);case 32:case"end":return e.stop()}}),e,null,[[0,28]])})));return function(t,n,i,a){return e.apply(this,arguments)}}(),$n=n(4),zn=n(5),Wn=n(13),Gn=n(12);const Kn=[{inputs:[{internalType:"uint256[7]",name:"parameters",type:"uint256[7]"},{internalType:"address[5]",name:"addresses",type:"address[5]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"lShares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"AddLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"AddMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"ExecuteMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"liquidator",type:"address"},{indexed:!1,internalType:"uint256",name:"reward",type:"uint256"}],name:"Liquidate",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"migrationTimestamp",type:"uint256"},{indexed:!1,internalType:"address",name:"source",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"}],name:"PrepareMigration",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"collector",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ProtocolFeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"lShares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"RemoveLiquidity",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"bAmount",type:"uint256"}],name:"RemoveMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"symbolId",type:"uint256"},{indexed:!1,internalType:"int256",name:"tradeVolume",type:"int256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Trade",type:"event"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolLite.OraclePrice[]",name:"prices",type:"tuple[]"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolLite.OraclePrice[]",name:"prices",type:"tuple[]"}],name:"addMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"multiplier",type:"uint256"},{internalType:"uint256",name:"feeRatio",type:"uint256"},{internalType:"uint256",name:"fundingRateCoefficient",type:"uint256"}],name:"addSymbol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"approveMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimNewController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"collectProtocolFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"controller",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"source",type:"address"}],name:"executeMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getAddresses",outputs:[{internalType:"address",name:"bTokenAddress",type:"address"},{internalType:"address",name:"lTokenAddress",type:"address"},{internalType:"address",name:"pTokenAddress",type:"address"},{internalType:"address",name:"liquidatorQualifierAddress",type:"address"},{internalType:"address",name:"protocolFeeCollector",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLiquidity",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getParameters",outputs:[{internalType:"int256",name:"minPoolMarginRatio",type:"int256"},{internalType:"int256",name:"minInitialMarginRatio",type:"int256"},{internalType:"int256",name:"minMaintenanceMarginRatio",type:"int256"},{internalType:"int256",name:"minLiquidationReward",type:"int256"},{internalType:"int256",name:"maxLiquidationReward",type:"int256"},{internalType:"int256",name:"liquidationCutRatio",type:"int256"},{internalType:"int256",name:"protocolFeeCollectRatio",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeeAccrued",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"getSymbol",outputs:[{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"int256",name:"multiplier",type:"int256"},{internalType:"int256",name:"feeRatio",type:"int256"},{internalType:"int256",name:"fundingRateCoefficient",type:"int256"},{internalType:"int256",name:"price",type:"int256"},{internalType:"int256",name:"cumulativeFundingRate",type:"int256"},{internalType:"int256",name:"tradersNetVolume",type:"int256"},{internalType:"int256",name:"tradersNetCost",type:"int256"}],internalType:"struct IPerpetualPoolLite.SymbolInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolLite.OraclePrice[]",name:"prices",type:"tuple[]"}],name:"liquidate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"migrationDestination",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"migrationTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"graceDays",type:"uint256"}],name:"prepareMigration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"lShares",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolLite.OraclePrice[]",name:"prices",type:"tuple[]"}],name:"removeLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"bAmount",type:"uint256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolLite.OraclePrice[]",name:"prices",type:"tuple[]"}],name:"removeMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"removeSymbol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setNewController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"address",name:"oracleAddress",type:"address"},{internalType:"uint256",name:"feeRatio",type:"uint256"},{internalType:"uint256",name:"fundingRateCoefficient",type:"uint256"}],name:"setSymbolParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"toggleCloseOnly",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"int256",name:"tradeVolume",type:"int256"},{components:[{internalType:"uint256",name:"symbolId",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IPerpetualPoolLite.OraclePrice[]",name:"prices",type:"tuple[]"}],name:"trade",outputs:[],stateMutability:"nonpayable",type:"function"}],Jn=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Yn=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"int256",name:"amount",type:"int256"}],name:"UpdateMargin",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"symbolId",type:"uint256"},{indexed:!1,internalType:"int256",name:"volume",type:"int256"},{indexed:!1,internalType:"int256",name:"cost",type:"int256"},{indexed:!1,internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],name:"UpdatePosition",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"int256",name:"delta",type:"int256"}],name:"addMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"addSymbolId",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"exists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActiveSymbolIds",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"getMargin",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"getNumPositionHolders",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"getPosition",outputs:[{components:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],internalType:"struct IPTokenLite.Position",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"isActiveSymbolId",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"removeSymbolId",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newPool",type:"address"}],name:"setPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"symbolId",type:"uint256"}],name:"toggleCloseOnly",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"int256",name:"margin",type:"int256"}],name:"updateMargin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"symbolId",type:"uint256"},{components:[{internalType:"int256",name:"volume",type:"int256"},{internalType:"int256",name:"cost",type:"int256"},{internalType:"int256",name:"lastCumulativeFundingRate",type:"int256"}],internalType:"struct IPTokenLite.Position",name:"position",type:"tuple"}],name:"updatePosition",outputs:[],stateMutability:"nonpayable",type:"function"}],Xn=[{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"getOffChainOracleSymbols",outputs:[{internalType:"string[]",name:"",type:"string[]"}],stateMutability:"view",type:"function"}];class Qn extends me{constructor(e,t){super(e,t,Yn)}async pool(){return await this._call("pool")}async balanceOf(e){return await this._call("balanceOf",[e])}async exists(e){return await this._call("exists",[e])}async ownerOf(e){return await this._call("ownerOf",[e])}async getMargin(e){const t=await this._call("getMargin",[e]);return Object(l.c)(t)}async getPosition(e,t){const n=await this._call("getPosition",[e,t]);if(Array.isArray(n))return(e=>({volume:Object(l.c)(e.volume),cost:Object(l.c)(e.cost),lastCumulativeFundingRate:Object(l.c)(e.lastCumulativeFundingRate)}))(n);throw new Error(`PToken#getMargin: invalid result with (${e})`)}async getActiveSymbolIds(){return await this._call("getActiveSymbolIds")}async isActiveSymbolId(e){return await this._call("isActiveSymbolId",[e])}async isApprovedForAll(e,t){return await this._call("isApprovedForAll",[e,t])}async getApproved(e){return await this._call("getApproved",[e])}async getNumPositionHolders(e){return await this._call("getNumPositionHolders",[e])}}class Zn extends me{constructor(e,t){super(e,t,Xn)}async getOffChainOracleSymbols(e){return await this._call("getOffChainOracleSymbols",[e])}}var ei=function(e){Object(Wn.a)(n,e);var t=Object(Gn.a)(n);function n(e,a){var r;return Object($n.a)(this,n),(r=t.call(this,e,a,Kn)).config=z(a,void 0,void 0,"v2_lite"),r.offchainSymbolIds=r.config.offchainSymbolIds,r.offchainSymbols=r.config.offchainSymbols,r.bTokenAddress=r.config.bToken,r.lTokenAddress=r.config.lToken,r.pTokenAddress=r.config.pToken,r.viewerAddress=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"v2_lite",n=_(t,i.get()).poolLiteViewer.filter((function(t){return t.chainId===e.toString()}));if(n.length>0)return n[0].address;throw new Error("getpoolLiteViewerConfig(): invalid chainId(".concat(e,") or version(").concat(t,")."))}(r.chainId),r}return Object(zn.a)(n,[{key:"_update",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([this.getAddresses()]);case 2:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"_updateOffchainSymbols",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){var t,n;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.pToken||(this.pToken=new Qn(this.chainId,this.pTokenAddress)),this.viewer||(this.viewer=new Zn(this.chainId,this.viewerAddress)),e.next=4,this.pToken.getActiveSymbolIds();case 4:if(t=e.sent,this.activeSymbolIds&&this.activeSymbolIds.length===t.length&&this.activeSymbolIds.toString()===t.toString()){e.next=12;break}return e.next=8,this.viewer.getOffChainOracleSymbols(this.contractAddress);case 8:n=e.sent,this.offchainSymbolIds=t.reduce((function(e,t,i){return""==n[i]?e:e.concat([t])}),[]),this.offchainSymbols=n.filter((function(e){return e&&""!==e})),this.activeSymbolIds=t;case 12:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getAddresses",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){var t;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._call("getAddresses");case 2:t=e.sent,this.bTokenAddress=t.bTokenAddress,this.lTokenAddress=t.lTokenAddress,this.pTokenAddress=t.pTokenAddress,this.liquidatorQualifierAddress=t.liquidatorQualifierAddress,this.protocolFeeCollector=t.protocolFeeCollector;case 8:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getParameters",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){var t;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._call("getParameters");case 2:return t=e.sent,e.abrupt("return",{minPoolMarginRatio:Object(l.c)(t.minPoolMarginRatio),minInitialMarginRatio:Object(l.c)(t.minInitialMarginRatio),minMaintenanceMarginRatio:Object(l.c)(t.minMaintenanceMarginRatio),minLiquidationReward:Object(l.c)(t.minLiquidationReward),maxLiquidationReward:Object(l.c)(t.maxLiquidationReward),liquidationCutRatio:Object(l.c)(t.liquidationCutRatio),protocolFeeCollectRatio:Object(l.c)(t.protocolFeeCollectRatio)});case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getProtocolFeeAccrued",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){var t;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._call("getProtocolFeeAccrued");case 2:return t=e.sent,e.abrupt("return",Object(l.c)(t));case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getLiquidity",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){var t;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._call("getLiquidity");case 2:return t=e.sent,e.abrupt("return",Object(l.c)(t));case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getSymbol",value:function(){var e=Object(ue.a)(oe.a.mark((function e(t){var n;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this._call("getSymbol",[t]);case 3:return n=e.sent,e.abrupt("return",{symbol:n.symbol,oracleAddress:n.oracleAddress,multiplier:Object(l.c)(n.multiplier),feeRatio:Object(l.c)(n.feeRatio),fundingRateCoefficient:Object(l.c)(n.fundingRateCoefficient),price:Object(l.c)(n.price),cumulativeFundingRate:Object(l.c)(n.cumulativeFundingRate),tradersNetVolume:Object(l.c)(n.tradersNetVolume),tradersNetCost:Object(l.c)(n.tradersNetCost)});case 7:throw e.prev=7,e.t0=e.catch(0),new Error("PerpetualPool#getSymbol error: ".concat(e.t0));case 10:case"end":return e.stop()}}),e,this,[[0,7]])})));return function(t){return e.apply(this,arguments)}}()},{key:"_getSymbolPrices",value:function(){var e=Object(ue.a)(oe.a.mark((function e(){var t,n,i=this;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=[],e.next=3,this._updateOffchainSymbols();case 3:if(!(this.offchainSymbolIds.length>0)){e.next=8;break}return e.next=6,de(this.offchainSymbols);case 6:n=e.sent,t=Object.values(n).reduce((function(e,t,a){return e.push([i.offchainSymbolIds[i.offchainSymbols.indexOf(Object.keys(n)[a])],t.timestamp,t.price,parseInt(t.v).toString(),t.r,t.s]),e}),[]);case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"addLiquidity",value:function(){var e=Object(ue.a)(oe.a.mark((function e(t,n){var i;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._getSymbolPrices();case 2:return i=e.sent,e.next=5,this._transact("addLiquidity",[Object(l.n)(n),i],t);case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"removeLiquidity",value:function(){var e=Object(ue.a)(oe.a.mark((function e(t,n){var i;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._getSymbolPrices();case 2:return i=e.sent,e.next=5,this._transact("removeLiquidity",[Object(l.n)(n),i],t);case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"addMargin",value:function(){var e=Object(ue.a)(oe.a.mark((function e(t,n){var i;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._getSymbolPrices();case 2:return i=e.sent,e.next=5,this._transact("addMargin",[Object(l.n)(n),i],t);case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"removeMargin",value:function(){var e=Object(ue.a)(oe.a.mark((function e(t,n){var i;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._getSymbolPrices();case 2:return i=e.sent,e.next=5,this._transact("removeMargin",[Object(l.n)(n),i],t);case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"trade",value:function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,i){var a;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._getSymbolPrices();case 2:return a=e.sent,e.next=5,this._transact("trade",[n,Object(l.n)(i),a],t);case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e,this)})));return function(t,n,i){return e.apply(this,arguments)}}()}]),n}(me);const ti=e=>{let t={};return(n,i)=>{const a=i;return Object.keys(t).includes(a)||(t[a]=new e(n,i)),t[a]}},ni=ti(ei),ii=ti(class extends me{constructor(e,t){super(e,t,Jn)}async balanceOf(e){const t=await this._call("balanceOf",[e]);return Object(l.c)(t)}async totalSupply(){const e=await this._call("totalSupply");return Object(l.c)(e)}async pool(){return await this._call("pool")}}),ai=ti(Qn),ri=(ti(Zn),async(e,t,n)=>{const{lToken:i,pToken:a}=z(t,"0","0","v2_lite"),r=ni(e,t),s=ii(e,i),o=ai(e,a),[u,p,c,d,y]=await Promise.all([r.getParameters(),r.getLiquidity(),s.balanceOf(n),s.totalSupply(),o.getActiveSymbolIds()]),{minPoolMarginRatio:m}=u;let b=[];for(let l=0;l<y.length;l++)b.push(r.getSymbol(y[l]));const f=await Promise.all(b),g=f.reduce(((e,t)=>e.plus(t.tradersNetVolume.times(t.price).times(t.multiplier).minus(t.tradersNetCost))),Object(l.a)(0)),h=p.minus(g),T=f.reduce(((e,t)=>e.plus(t.tradersNetCost)),Object(l.a)(0)),v=f.reduce(((e,t)=>e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier))),Object(l.a)(0));return{totalSupply:d.toString(),poolLiquidity:p.toString(),shares:c.toString(),shareValue:Ct(d,h).toString(),maxRemovableShares:Pt(c,d,p,v,T,m).toString()}}),si=async(e,t,n)=>{const{symbol:i,pToken:a}=z(t,"0",n,"v2_lite"),r=ni(e,t),s=ai(e,a),[o,u,p,c,d]=await Promise.all([r.getLiquidity(),ye(e,i,"v2_lite"),r.getSymbol(n),r.getParameters(),s.getActiveSymbolIds()]);jn.set(t,n,u);const{multiplier:y,fundingRateCoefficient:m,tradersNetVolume:b,feeRatio:f}=p,{minPoolMarginRatio:g}=c,h=xn(...[b,u,y,o,m]),T=On(e,h);let v=[];for(let l=0;l<d.length;l++)v.push(r.getSymbol(d[l]));const w=(await Promise.all(v)).reduce(((e,t)=>e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier).times(g).abs())),Object(l.a)(0)),k={price:u,multiplier:y.toString(),feeRatio:f.toString(),tradersNetVolume:b.toString(),liquidity:o.toString(),fundingRateCoefficient:m.toString(),minPoolMarginRatio:g.toString(),fundingRatePerBlock:h,fundingRate:T,liquidityUsed:w.div(o)};return Fn.set(e,t,n,k),k};var oi=function(){var e=Object(ue.a)(oe.a.mark((function e(t){var n;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t);case 2:return n=e.sent,e.next=5,n.json();case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),ui=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,i,a,r,s,o,u){var p,c,d,y,m,b,f,g,h,T,v;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return p=Object(l.c)(n.tradeVolume),e.next=3,E(t,i);case 3:return c=e.sent,d=p.gt(0)?"LONG":"SHORT",y=Object(l.c)(n.price),m="".concat(+c.timestamp,"000"),b=n.symbolId,f=u.find((function(e){return e.symbolId==n.symbolId})),g=Mn(p,y,r[parseInt(b)],s[parseInt(b)]),h=p.abs().times(y).times(r[parseInt(b)]),T=p.abs(),v={direction:d,baseToken:o,symbolId:b,symbol:f&&f.symbol,price:y.toString(),notional:h.toString(),volume:T.toString(),transactionFee:g.toString(),transactionHash:a.toString(),time:m},e.abrupt("return",v);case 14:case"end":return e.stop()}}),e)})));return function(t,n,i,a,r,s,o,u){return e.apply(this,arguments)}}(),li=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,i,a,r){var s,o,u,l,p,c,d,y,m,b,f,g,h,T,v,w;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s=Q(n),o=z(n,void 0,void 0,"v2_lite"),u=o.bTokenSymbol,l=ni(t,n),e.next=5,E(t,"latest");case 5:for(p=e.sent,r=parseInt(r),c=[],d=0;d<s.length;d++)c.push(l.getSymbol(s[d]));return e.next=11,Promise.all(c);case 11:return y=e.sent,m=y.map((function(e){return e.multiplier.toString()})),b=y.map((function(e){return e.feeRatio.toString()})),f={account:i},e.next=17,M(t,l.contract,"Trade",f,r,p.number);case 17:g=e.sent,h=[],g=g.filter((function(e){return e.returnValues.symbolId===a})),T=0;case 21:if(!(T<g.length)){e.next=30;break}return v=g[T],e.next=25,ui(t,v.returnValues,v.blockNumber,v.transactionHash,m,b,u,y);case 25:w=e.sent,h.unshift(w);case 27:T++,e.next=21;break;case 30:return e.abrupt("return",h);case 31:case"end":return e.stop()}}),e)})));return function(t,n,i,a,r){return e.apply(this,arguments)}}(),pi=function(){var e=Object(ue.a)(oe.a.mark((function e(t,n,a,r){var o,u,p,c,d,y,m,b,f,g,h,T,v;return oe.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,u=[],e.next=4,oi("".concat(Object(s.a)(i.get()),"/trade_history/").concat(t,"/").concat(n,"/").concat(a,"/").concat(r));case 4:if((p=e.sent)&&p.success&&(o=parseInt(p.data.tradeHistoryBlock),p.data.tradeHistory&&Array.isArray(p.data.tradeHistory)&&(u=p.data.tradeHistory)),u.length>0&&(u=u.filter((function(e){return e})).map((function(e){return{direction:e.direction.trim(),baseToken:e.baseToken.trim(),symbolId:e.symbolId,symbol:e.symbol,price:Object(l.c)(e.price).toString(),notional:Object(l.c)(e.notional).toString(),volume:Object(l.c)(e.volume).toString(),transactionFee:Object(l.c)(e.transactionFee).toString(),transactionHash:e.transactionHash,time:e.time.toString()}}))),0===o){e.next=17;break}return e.next=10,Promise.all([li(t,n,a,r,o+1)]);case 10:return c=e.sent,d=Object(Ln.a)(c,1),y=d[0],m=y.concat(u),e.abrupt("return",m.sort((function(e,t){return parseInt(t.time)-parseInt(e.time)})));case 17:return b=K(n),f=b.initialBlock,o=parseInt(f),e.next=21,Promise.all([li(t,n,a,r,o+1)]);case 21:return g=e.sent,h=Object(Ln.a)(g,1),T=h[0],v=T,e.abrupt("return",v.sort((function(e,t){return parseInt(t.time)-parseInt(e.time)})));case 26:e.next=31;break;case 28:e.prev=28,e.t0=e.catch(0),console.log("getTradeHistory(".concat(t,", ").concat(n,", ").concat(a,", ").concat(r,"): ").concat(e.t0));case 31:return e.abrupt("return",[]);case 32:case"end":return e.stop()}}),e,null,[[0,28]])})));return function(t,n,i,a){return e.apply(this,arguments)}}();const ci=(e="dev",t)=>{if(t&&"1"!==t&&"v1"!==t){if("v2"===t||"v2_lite"===t)return H(t,e);throw new Error(`getContractAddressConfig: invalid version: ${t}`)}return Z(e)},di=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n)=>x(ri,[e,t,n],"getLiquidityInfo",{totalSupply:"",poolLiquidity:"",shares:"",shareValue:"",maxRemovableShares:""}))(e,t,n):void 0===i?(async(e,t,n)=>{const{lTokenAddress:i}=ae(e,t),a=Ht(e,t),r=zt(e,i,t),[s,o,u]=await Promise.all([r.balanceOf(n),r.totalSupply(),a.symbol()]),l=await pe(u),{liquidity:p,tradersNetCost:c,tradersNetVolume:d}=await a.getStateValues(),{multiplier:y,minPoolMarginRatio:m}=await a.getParameters(),b=p.plus(c.minus(d.times(l).times(y)));return{totalSupply:o.toString(),poolLiquidity:p.toString(),shares:s.toString(),shareValue:Ct(o,b).toString(),maxRemovableShares:Pt(s,o,p,d,c,y,m,l).toString()}})(e,t,n):Bn(e,t,n,i),yi=async(e,t,n)=>"v2_lite"===W(t)?(async(e,t)=>{const n=xe();try{const i=await n.getValues([`${e}.${t}.liquidity`]).catch((e=>console.log("getPoolLiquidity",e)));if(i){const[e]=i;return{liquidity:Object(l.c)(e).toString(),symbol:""}}}catch(i){console.log(`${i}`)}return{liquidity:"",symbol:""}})(e,t):void 0===n?(async(e,t)=>{const n=xe();try{const i=await n.getValues([`${e}.${t}.liquidity`]).catch((e=>console.log("getPoolLiquidity",e))),{symbol:a}=ae(e,t);if(i){const[e]=i;return{liquidity:Object(l.c)(e).toString(),symbol:a}}}catch(i){console.log(i)}})(e,t):(async(e,t,n)=>{const i=xe();try{const a=await i.getValues([`${e}.${t}.liquidity${n}`]).catch((e=>console.log("getPoolLiquidity",e)));if(a){const[e]=a;return{liquidity:Object(l.c)(e).toString(),symbol:""}}}catch(a){console.log(`${a}`)}return{liquidity:"",symbol:""}})(e,t,n),mi=async(e,t,n)=>"v2_lite"===W(t)?(async(e,t)=>{const n=xe(!0);try{const i=k(e),a=await n.getValues([`${i}.${t}.apy`,`${i}.${t}.volume.1h`,`${i}.${t}.volume.24h`]).catch((e=>console.log("getPoolInfoApy",e)));if(a){const[e,t,n]=a;return{apy:Object(l.c)(e).toString(),volume1h:Object(l.c)(t).toString(),volume24h:Object(l.c)(n).toString()}}}catch(i){console.log(`${i}`)}})(e,t):void 0===n?et(e,t):(async(e,t,n)=>{const i=xe(!0);try{const a=k(e),r=await i.getValues([`${a}.${t}.apy${n}`,`${a}.${t}.volume.1h`,`${a}.${t}.volume.24h`,`${a}.${t}.V2.multiplier${n}`]).catch((e=>console.log("getPoolInfoApy",e)));if(r){const[e,t,n,i]=r;return{apy:Object(l.c)(e).toString(),volume1h:Object(l.c)(t).toString(),volume24h:Object(l.c)(n).toString(),multiplier:Object(l.c)(i).toString()}}}catch(a){console.log(`${a}`)}})(e,t,n),bi=async(e,t,n,i,a)=>"v2_lite"===W(t)?(async(e,t,n,i)=>O((async(e,t,n,i)=>{const a=ni(e,t);return await a.addLiquidity(n,i)}),[e,t,n,i]))(e,t,n,i):void 0===a?Xt(e,t,n,i):(async(e,t,n,i,a)=>{const{router:r}=K(t),s=vt(e,r),o=Tt(e,t),u=Y(t);let l=[];for(let b=0;b<u.length;b++)l.push(o.getBToken(u[b]));const p=await Promise.all(l),{minBToken0Ratio:c}=await o.getParameters(),d=Pn(p,a,i,c);let y;if(d.success)try{y={success:!0,transaction:await s.addLiquidity(n,a,i)}}catch(m){y={success:!1,error:m}}else y={success:!1,error:d.error};return y})(e,t,n,i,a),fi=async(e,t,n,i,a,r)=>"v2_lite"===W(t)?(async(e,t,n,i,a=!1)=>O((async(e,t,n,i,a)=>{const r=ni(e,t);return await r.removeLiquidity(n,i,a)}),[e,t,n,i,a]))(e,t,n,i,r):void 0===a?Qt(e,t,n,i):(async(e,t,n,i,a,r=!1)=>{const{router:s,lToken:o}=K(t),u=vt(e,s),l=Tt(e,t),p=wt(e,o),c=await p.getAsset(n,a),{liquidity:d}=c,y=Y(t);let m=Q(t),b=[];for(let k=0;k<y.length;k++)b.push(l.getBToken(y[k]));const f=await Promise.all(b);b=[];for(let k=0;k<m.length;k++)b.push(l.getSymbol(m[k]));const g=await Promise.all(b),{minPoolMarginRatio:h}=await l.getParameters(),T=Rn(f,a,i,d,g,h);let v;if(T.success)try{v={success:!0,transaction:await u.removeLiquidity(n,a,i,r)}}catch(w){v={success:!1,error:w}}else v={success:!1,error:T.error};return v})(e,t,n,i,a,r),gi=async(e,t,n)=>"v2_lite"===W(t)?(async(e,t,n)=>x((async(e,t,n)=>{const{bTokenSymbol:i}=z(t,"0","0","v2_lite"),a=ni(e,t),[r,s]=await Promise.all([a.getSymbol(n),a.getParameters()]),{symbol:o,multiplier:u,feeRatio:l,fundingRateCoefficient:p}=r,{minPoolMarginRatio:c,minInitialMarginRatio:d,minMaintenanceMarginRatio:y,minLiquidationReward:m,maxLiquidationReward:b,liquidationCutRatio:f,protocolFeeCollectRatio:g}=s;return{symbol:o,bTokenSymbol:i,multiplier:u.toString(),feeRatio:l.toString(),fundingRateCoefficient:p.toString(),minPoolMarginRatio:c.toString(),minInitialMarginRatio:d.toString(),minMaintenanceMarginRatio:y.toString(),minLiquidationReward:m.toString(),maxLiquidationReward:b.toString(),liquidationCutRatio:f.toString(),protocolFeeCollectRatio:g.toString()}}),[e,t,n],"getSpecification",{symbol:"",bTokenSymbol:"",multiplier:"",feeRatio:"",fundingRateCoefficient:"",minPoolMarginRatio:"",minInitialMarginRatio:"",minMaintenanceMarginRatio:"",minLiquidationReward:"",maxLiquidationReward:"",liquidationCutRatio:"",protocolFeeCollectRatio:""}))(e,t,n):void 0===n?(async(e,t)=>{const{bTokenAddress:n}=ae(e,t),i=Ht(e,t),a=Ce(e,n,t),{multiplier:r,feeRatio:s,minPoolMarginRatio:o,minInitialMarginRatio:u,minMaintenanceMarginRatio:l,minAddLiquidity:p,redemptionFeeRatio:c,fundingRateCoefficient:d,minLiquidationReward:y,maxLiquidationReward:m,liquidationCutRatio:b,priceDelayAllowance:f}=await i.getParameters();return{addresses:t,symbol:await i.symbol(),bTokenSymbol:await a.symbol(),multiplier:r.toString(),feeRatio:s.toString(),minPoolMarginRatio:o.toString(),minInitialMarginRatio:u.toString(),minMaintenanceMarginRatio:l.toString(),minAddLiquidity:p.toString(),redemptionFeeRatio:c.toString(),fundingRateCoefficient:d.toString(),minLiquidationReward:y.toString(),maxLiquidationReward:m.toString(),liquidationCutRatio:b.toString(),priceDelayAllowance:f.toString()}})(e,t):(async(e,t,n)=>{try{const{symbol:i}=K(t,void 0,n),a=J(t),r=Tt(e,t),[s,o]=await Promise.all([r.getSymbol(n),r.getParameters()]),u=(await Promise.all(a.reduce(((e,t,n)=>e.concat([r.getBToken(n.toString())])),[]))).map((e=>e.discount)),{multiplier:l,feeRatio:p,fundingRateCoefficient:c}=s,{minPoolMarginRatio:d,minInitialMarginRatio:y,minMaintenanceMarginRatio:m,minLiquidationReward:b,maxLiquidationReward:f,liquidationCutRatio:g,protocolFeeCollectRatio:h}=o;return{symbol:i,bTokenSymbol:a.map((e=>e.bTokenSymbol)),bTokenMultiplier:u.map((e=>e.toString())),multiplier:l.toString(),feeRatio:p.toString(),fundingRateCoefficient:c.toString(),minPoolMarginRatio:d.toString(),minInitialMarginRatio:y.toString(),minMaintenanceMarginRatio:m.toString(),minLiquidationReward:b.toString(),maxLiquidationReward:f.toString(),liquidationCutRatio:g.toString(),protocolFeeCollectRatio:h.toString()}}catch(i){console.log(`${i}`)}return{symbol:"",bTokenSymbol:[],bTokenMultiplier:[],multiplier:"",feeRatio:"",fundingRateCoefficient:"",minPoolMarginRatio:"",minInitialMarginRatio:"",minMaintenanceMarginRatio:"",minLiquidationReward:"",maxLiquidationReward:"",liquidationCutRatio:"",protocolFeeCollectRatio:""}})(e,t,n),hi=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n,i)=>x((async(e,t,n,i)=>{const{pToken:a,symbol:r}=z(t,"0",i,"v2_lite"),s=ni(e,t),o=ai(e,a),[u,p,c,d,y,m,b,f,g]=await Promise.all([s.getParameters(),s.getSymbol(i),s.getLiquidity(),o.getActiveSymbolIds(),A(e,t,5),S(e),o.getPosition(n,i),o.getMargin(n),ye(e,r,"v2_lite")]),{volume:h,cost:T,lastCumulativeFundingRate:v}=b,{multiplier:w,fundingRateCoefficient:k,tradersNetVolume:I,cumulativeFundingRate:E}=p,{minInitialMarginRatio:M,minMaintenanceMarginRatio:x}=u;let O=[];for(let l=0;l<d.length;l++)O.push(s.getSymbol(d[l]));const D=await Promise.all(O),C=D.map((e=>e.symbol));O=[];for(let l=0;l<d.length;l++)O.push(ye(e,C[l],"v2_lite"));const P=await Promise.all(O),R=d.indexOf(i);let B;"-1"===R?B="0":(B=P[R],jn.set(t,i,B)),O=[];for(let l=0;l<d.length;l++)O.push(o.getPosition(n,d[l]));const j=await Promise.all(O),F=D.reduce(((e,t,n)=>e.plus(Object(l.a)(P[n]).times(t.multiplier).times(j[n].volume).times(M).abs())),Object(l.a)(0)),N=Object(l.a)(h).abs().times(w).times(B).times(M),q=D.reduce(((e,t,n)=>e.plus(Object(l.a)(P[n]).times(t.multiplier).times(j[n].volume).minus(j[n].cost))),Object(l.a)(0)),L=D.map(((e,t)=>[e.symbol,Object(l.a)(P[t]).times(e.multiplier).times(j[t].volume).minus(j[t].cost).toString()]),Object(l.a)(0)),_=j.reduce(((e,t)=>e.plus(Object(l.a)(t.cost))),Object(l.a)(0)),U=D.reduce(((e,t,n)=>n!==parseInt(i)?e.plus(Object(l.a)(j[n].volume).times(P[n]).times(t.multiplier)):e),Object(l.a)(0)),V=Dn(I,g,w,k,c,E,v,y,m,h);return{price:B,volume:h.toString(),averageEntryPrice:An(h,T,w).toString(),margin:f.toString(),marginHeld:F.toString(),marginHeldBySymbol:N.toString(),unrealizedPnl:q.toString(),unrealizedPnlList:L,fundingFee:V.toString(),liquidationPrice:Sn(h,f,_,U,w,x).toString()}}),[e,t,n,i],"getPositionInfo",{price:"",volume:"",averageEntryPrice:"",margin:"",marginHeld:"",marginHeldBySymbol:"",unrealizedPnl:"",unrealizedPnlList:[],fundingFee:"",liquidationPrice:""}))(e,t,n,i):void 0===i?(async(e,t,n)=>{const{pTokenAddress:i}=ae(e,t),a=Ht(e,t),r=$t(e,i,t),{multiplier:s,minInitialMarginRatio:o,minMaintenanceMarginRatio:u}=await a.getParameters(),l=await a.symbol(),{volume:p,margin:c,cost:d}=await r.getPositionInfo(n),y=await pe(l);return""===y?{price:y,volume:p.toString(),averageEntryPrice:Rt(p,d,s).toString(),margin:c.toString(),marginHeld:"",unrealizedPnl:"",liquidationPrice:Ft(p,c,d,s,u).toString()}:{price:y,volume:p.toString(),averageEntryPrice:Rt(p,d,s).toString(),margin:c.toString(),marginHeld:Bt(y,p,s,o).toString(),unrealizedPnl:jt(y,p,s,d).toString(),liquidationPrice:Ft(p,c,d,s,u).toString()}})(e,t,n):(async(e,t,n,i)=>{try{const a=X(t),r=Y(t),s=a.map((e=>e.symbolId)),o=a.map((e=>e.symbol)),u=Tt(e,t),{pToken:p}=K(t,null,i),c=kt(e,p),[d,y,m,b,f,g,h,T]=await Promise.all([u.getSymbol(i),u.getParameters(),u.getLastUpdatedBlockNumber(),u.getLatestBlockNumber(),c.getPosition(n,i),c.getMargins(n),c.getPositions(n),ye(e,o[parseInt(i)])]),{volume:v,cost:w,lastCumulativeFundingRate:k}=f,{multiplier:I,fundingRateCoefficient:A,tradersNetVolume:S,cumulativeFundingRate:E}=d,{minInitialMarginRatio:M,minMaintenanceMarginRatio:x}=y;let O=[];for(let e=0;e<r.length;e++)O.push(u.getBToken(r[e]));const D=await Promise.all(O),C=D.reduce(((e,t,n)=>e.plus(Object(l.a)(t.price).times(t.discount).times(g[n]))),Object(l.a)(0));O=[];for(let e=0;e<s.length;e++)O.push(u.getSymbol(s[e]));const P=await Promise.all(O);O=[];for(let t=0;t<o.length;t++)O.push(ye(e,o[t]));const R=await Promise.all(O),B=R[i];jn.set(t,i,B);const j=P.reduce(((e,t,n)=>e.plus(Object(l.a)(R[n]).times(t.multiplier).times(h[n].volume).times(M).abs())),Object(l.a)(0)),F=Object(l.a)(v).abs().times(I).times(R[i]).times(M),N=P.reduce(((e,t,n)=>e.plus(Object(l.a)(R[n]).times(t.multiplier).times(h[n].volume).minus(h[n].cost))),Object(l.a)(0)),q=P.map(((e,t)=>[e.symbol,Object(l.a)(R[t]).times(e.multiplier).times(h[t].volume).minus(h[t].cost).toString()])),L=h.reduce(((e,t)=>e.plus(Object(l.a)(t.cost))),Object(l.a)(0)),_=P.reduce(((e,t,n)=>n!==parseInt(i)?e.plus(Object(l.a)(h[n].volume).times(R[n]).times(t.multiplier)):e),Object(l.a)(0)),U=D.reduce(((e,t)=>e.plus(Object(l.a)(t.liquidity).times(t.price).times(t.discount).plus(t.pnl))),Object(l.a)(0)),V=Dn(S,T,I,A,U,E,k,m,b,v);return{price:B,volume:v.toString(),averageEntryPrice:An(v,w,I).toString(),margin:C.toString(),marginHeld:j.toString(),marginHeldBySymbol:F.toString(),unrealizedPnl:N.toString(),unrealizedPnlList:q,liquidationPrice:Sn(v,C,L,_,I,x).toString(),fundingFee:V.toString()}}catch(a){console.log(`${a}`)}return{volume:"",averageEntryPrice:"",margin:"",marginHeld:"",unrealizedPnl:"",liquidationPrice:""}})(e,t,n,i),Ti=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n)=>x((async(e,t,n)=>{const{bToken:i}=z(t,"0","0","v2_lite");return(await Ce(e,i).balanceOf(n)).toString()}),[e,t,n],"getWalletBalance",""))(e,t,n):void 0===i?(async(e,t,n)=>{const{bTokenAddress:i}=ae(e,t),a=Ce(e,i,t);return(await a.balanceOf(n)).toString()})(e,t,n):(async(e,t,n,i)=>{try{const{bToken:a}=K(t,i);return(await Ce(e,a).balanceOf(n)).toString()}catch(a){console.log(`${a}`)}return""})(e,t,n,i),vi=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n)=>x((async(e,t,n)=>{const{bToken:i}=z(t,"0","0","v2_lite"),a=Ce(e,i);return await a.isUnlocked(n,t)}),[e,t,n],"isUnlocked",""))(e,t,n):void 0===n?rt(e,t):void 0===i?(async(e,t,n)=>{const{bTokenAddress:i}=ae(e,t),a=Ce(e,i);return await a.isUnlocked(n,t)})(e,t,n):(async(e,t,n,i)=>{try{const{bToken:a}=K(t,i),r=Ce(e,a);return await r.isUnlocked(n,t)}catch(a){console.log(`${a}`)}return!1})(e,t,n,i),wi=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n,i)=>x((async(e,t,n,i)=>{let a=jn.get(t,i);const{symbol:r}=z(t,"0",i,"v2_lite");a||(a=await ye(e,r,"v2_lite"),jn.set(t,i,a));let s=Fn.get(e,t,i);s&&s.multiplier||(await si(e,t,i),s=Fn.get(e,t,i));const{multiplier:o,feeRatio:u}=s;return Object(l.a)(n).abs().times(a).times(o).times(u).toString()}),[e,t,n,i],"getFundingFee",""))(e,t,n,i):void 0===i?(async(e,t,n)=>{let i=an.get(),a=rn.get();if(""===i){const n=Ht(e,t),a=await n.symbol();await an._update(t,a),i=an.get()}a.multiplier||(a=await rn.update(e,t));const{multiplier:r,feeRatio:s}=a;return Object(l.a)(n).abs().times(i).times(r).times(s).toString()})(e,t,n):(async(e,t,n,i)=>{try{let a=jn.get(t,i);const{symbol:r}=K(t,null,i);a||(a=await ye(e,r),jn.set(t,i,a));let s=Fn.get(e,t,i);s&&s.multiplier||(await Nn(e,t,i),s=Fn.get(e,t,i));const{multiplier:o,feeRatio:u}=s;return Object(l.a)(n).abs().times(a).times(o).times(u).toString()}catch(a){console.log(`${a}`)}return""})(e,t,n,i),ki=async(e,t,n)=>"v2_lite"===W(t)?(async(e,t,n)=>x((async(e,t,n)=>{const i=await si(e,t,n),{fundingRate:a,fundingRatePerBlock:r,liquidity:s,tradersNetVolume:o}=i;return{fundingRate0:a.times(100).toString(),fundingRatePerBlock:r.toString(),liquidity:s.toString(),volume:"-",tradersNetVolume:o.toString()}}),[e,t,n],"getFundingRate",{fundingRate0:"",fundingRatePerBlock:"",liquidity:"",volume:"",tradersNetVolume:""}))(e,t,n):void 0===n?(async(e,t)=>{const n=Ht(e,t),i=await n.getFundingRate().catch((e=>console.log("getFundingRate",e)));nn.set(e,t,i);const a=await et(e,t);if(i){const{fundingRate:e,fundingRatePerBlock:t,liquidity:n,tradersNetVolume:r}=i,s=a.volume24h;return{fundingRate0:Object(l.o)(e),fundingRatePerBlock:Object(l.a)(t).toExponential(10),liquidity:n.toString(),volume:Object(l.c)(s).toString(),tradersNetVolume:r.toString()}}})(e,t):(async(e,t,n)=>{try{const i=await Nn(e,t,n),{fundingRate:a,fundingRatePerBlock:r,liquidity:s,tradersNetVolume:o}=i;return{fundingRate0:a.times(100).toString(),fundingRatePerBlock:r.toString(),liquidity:s.toString(),volume:"-",tradersNetVolume:o.toString()}}catch(i){console.log(`${i}`)}return{fundingRate0:"",fundingRatePerBlock:"",liquidity:"",volume:"",tradersNetVolume:""}})(e,t,n),Ii=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n,i)=>x((async(e,t,n,i)=>{let a=Fn.get(e,t,i);a||(a=await si(e,t,i));const r=[Object(l.a)(a.tradersNetVolume).plus(n).toString(),a.price,a.multiplier,a.liquidity,a.fundingRateCoefficient];let s=xn(...r);return s=On(e,s),{fundingRate1:s.times(100).toString()}}),[e,t,n,i],"getEstimatedFundingRate",""))(e,t,n,i):void 0===i?(async(e,t,n)=>{let i,a;if(a=nn.get(e,t),!a){const n=Ht(e,t);a=await n.getFundingRate()}if(a){const t=[Object(l.a)(a.tradersNetVolume).plus(Object(l.a)(n)).toString(),a.price,a.multiplier,a.liquidity,a.fundingRateCoefficient];return g(...t)?{fundingRate1:"0"}:(i=Ot(...t),i=Dt(e,i),{fundingRate1:Object(l.o)(i)})}})(e,t,n):(async(e,t,n,i)=>{try{let a=Fn.get(e,t,i);a||(a=await Nn(e,t,i));const r=[Object(l.a)(a.tradersNetVolume).plus(n).toString(),a.price,a.multiplier,a.liquidity,a.fundingRateCoefficient];let s=xn(...r);return s=On(e,s),{fundingRate1:s.times(100).toString()}}catch(a){console.log(`${a}`)}return{fundingRate1:""}})(e,t,n,i),Ai=async(e,t,n)=>"v2_lite"===W(t)?(async(e,t,n)=>x((async(e,t,n)=>{let i=Fn.get(e,t,n);return i||(i=await si(e,t,n)),{liquidityUsed0:i.liquidityUsed.times(100).toString()}}),[e,t,n],"getLiquidityUsed",""))(e,t,n):void 0===n?(async(e,t)=>{let n;if(n=nn.get(e,t),!n){const i=Ht(e,t);n=await i.getFundingRate()}if(n){const{liquidityUsed:e}=n;return{liquidityUsed0:Object(l.o)(e)}}})(e,t):(async(e,t,n)=>{try{let i=Fn.get(e,t,n);return i||(i=await Nn(e,t,n)),{liquidityUsed0:i.liquidityUsed.times(100).toString()}}catch(i){console.log(`${i}`)}return{liquidityUsed0:""}})(e,t,n),Si=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n,i)=>x((async()=>{let a=Fn.get(e,t,i);a||(a=await si(e,t,i));const{pToken:r}=z(t,"0",i,"v2_lite"),s=ni(e,t),o=ai(e,r),u=await o.getActiveSymbolIds();let p=[];for(let e=0;e<u.length;e++)p.push(s.getSymbol(u[e]));return{liquidityUsed1:(await Promise.all(p)).reduce(((e,t,a)=>a===parseInt(i)?e.plus(Object(l.a)(t.price).times(t.multiplier).times(t.tradersNetVolume.plus(n)).abs()):e.plus(Object(l.a)(t.price).times(t.multiplier).times(t.tradersNetVolume).abs())),Object(l.a)(0)).times(a.minPoolMarginRatio).div(a.liquidity).times(100).toString()}}),[e,t,n,i],"getEstimatedLiquidityUsed",""))(e,t,n,i):void 0===i?(async(e,t,n)=>{let i;if(i=nn.get(e,t),!i){const n=Ht(e,t);i=await n.getFundingRate().catch((e=>console.log("getLiquidityUsed",e)))}if(i){const e=[Object(l.a)(i.tradersNetVolume).plus(Object(l.a)(n)).toString(),i.price,i.multiplier,i.liquidity,i.poolMarginRatio];if(g(...e))return{liquidityUsed1:"0"};const t=xt(...e);return{liquidityUsed1:Object(l.o)(t)}}})(e,t,n):(async(e,t,n,i)=>{try{let a=Fn.get(e,t,i);a||(a=await Nn(e,t,i));const r=Tt(e,t);let s=Q(t),o=[];for(let e=0;e<s.length;e++)o.push(r.getSymbol(s[e]));return{liquidityUsed1:(await Promise.all(o)).reduce(((e,t,a)=>a===parseInt(i)?e.plus(Object(l.a)(t.price).times(t.multiplier).times(t.tradersNetVolume.plus(n)).abs()):e.plus(Object(l.a)(t.price).times(t.multiplier).times(t.tradersNetVolume).abs())),Object(l.a)(0)).times(a.minPoolMarginRatio).div(a.liquidity).times(100).toString()}}catch(a){console.log(`${a}`)}return{liquidityUsed1:""}})(e,t,n,i),Ei=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n)=>O((async(e,t,n)=>{const{bToken:i}=z(t,"0","0","v2_lite"),a=Ce(e,i);return await a.unlock(n,t)}),[e,t,n]))(e,t,n):void 0===n?pt(e,t):void 0===i?(async(e,t,n)=>{const{bTokenAddress:i}=ae(e,t),a=Ce(e,i,t);let r;try{r={success:!0,transaction:await a.unlock(n)}}catch(s){r={success:!1,error:s}}return r})(e,t,n):(async(e,t,n,i)=>{const{bToken:a}=K(t,i),r=Ce(e,a);let s;try{s={success:!0,transaction:await r.unlock(n,t)}}catch(o){s={success:!1,error:o}}return s})(e,t,n,i),Mi=async(e,t,n,i,a)=>"v2_lite"===W(t)?(async(e,t,n,i)=>O((async(e,t,n,i)=>{const a=ni(e,t);return await a.addMargin(n,i)}),[e,t,n,i]))(e,t,n,i):void 0===a?Jt(e,t,n,i):(async(e,t,n,i,a)=>{const{router:r}=K(t),s=vt(e,r);let o;try{o={success:!0,transaction:await s.addMargin(n,a,i)}}catch(u){o={success:!1,error:u}}return o})(e,t,n,i,a),xi=async(e,t,n,i,a,r)=>"v2_lite"===W(t)?(async(e,t,n,i,a=!1)=>O((async(e,t,n,i,a)=>{const r=ni(e,t);return await r.removeMargin(n,i,a)}),[e,t,n,i,a]))(e,t,n,i,r):void 0===a?Yt(e,t,n,i):(async(e,t,n,i,a,r=!1)=>{const{router:s}=K(t),o=vt(e,s);let u;try{u={success:!0,transaction:await o.removeMargin(n,a,i,r)}}catch(l){u={success:!1,error:l}}return u})(e,t,n,i,a,r),Oi=async(e,t,n,i,a)=>"v2_lite"===W(t)?(async(e,t,n,i,a)=>O((async(e,t,n,i,a)=>{const{pToken:r}=z(t,"0","0","v2_lite"),s=ai(e,r),o=ni(e,t),[u,p,c,d]=await Promise.all([o.getParameters(),o.getLiquidity(),s.getMargin(n),s.getActiveSymbolIds()]),{minInitialMarginRatio:y,minPoolMarginRatio:m}=u;let b=[];for(let l=0;l<d.length;l++)b.push(o.getSymbol(d[l]));const f=await Promise.all(b);b=[];for(let l=0;l<d.length;l++)b.push(s.getPosition(n,d[l]));const g=await Promise.all(b);let h=f.reduce(((e,t,n)=>n===parseInt(a)?e.plus(Object(l.a)(t.price).times(t.multiplier).times(g[n].volume.plus(i)).abs()):e.plus(Object(l.a)(t.price).times(t.multiplier).times(g[n].volume).abs())),Object(l.a)(0));h=h.times(y);let T=f.reduce(((e,t,n)=>n===parseInt(a)?e.plus(Object(l.a)(t.tradersNetVolume).plus(i).times(t.price).times(t.multiplier).abs()):e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier).abs())),Object(l.a)(0));T=T.times(m);const v=En(c,h,p,T);if(v.success)return await o.trade(n,a,i);throw new Error(v.error)}),[e,t,n,i,a]))(e,t,n,i,a):void 0===a?Zt(e,t,n,i):(async(e,t,n,i,a)=>{const{router:r,pToken:s}=K(t),o=vt(e,r),u=Tt(e,t),p=kt(e,s),[c,d]=await Promise.all([u.getParameters(),p.getPositions(n)]),{minInitialMarginRatio:y,minPoolMarginRatio:m}=c,b=Y(t),f=await p.getMargins(n);let g=[];for(let l=0;l<b.length;l++)g.push(u.getBToken(b[l]));const h=await Promise.all(g),T=h.reduce(((e,t,n)=>e.plus(Object(l.a)(t.price).times(t.discount).times(f[n]))),Object(l.a)(0)),v=h.reduce(((e,t)=>e.plus(Object(l.a)(t.liquidity).times(t.price).times(t.discount).plus(t.pnl))),Object(l.a)(0));let w=Q(t);g=[];for(let l=0;l<w.length;l++)g.push(u.getSymbol(w[l]));const k=await Promise.all(g);let I=k.reduce(((e,t,n)=>n===parseInt(a)?e.plus(Object(l.a)(t.price).times(t.multiplier).times(d[n].volume.plus(i)).abs()):e.plus(Object(l.a)(t.price).times(t.multiplier).times(d[n].volume).abs())),Object(l.a)(0));I=I.times(y);let A=k.reduce(((e,t,n)=>n===parseInt(a)?e.plus(Object(l.a)(t.tradersNetVolume).plus(i).times(t.price).times(t.multiplier).abs()):e.plus(Object(l.a)(t.tradersNetVolume).times(t.price).times(t.multiplier).abs())),Object(l.a)(0));A=A.times(m);const S=En(T,I,v,A);let E;if(S.success)try{E={success:!0,transaction:await o.trade(n,a,i)}}catch(M){E={success:!1,error:M}}else E={success:!1,error:S.error};return E})(e,t,n,i,a),Di=async(e,t,n,i)=>"v2_lite"===W(t)?(async(e,t,n,i)=>O((async(e,t,n,i)=>{const{pToken:a}=z(t,"0","0","v2_lite"),r=ni(e,t),s=ai(e,a),{volume:o}=await s.getPosition(n,i);if(o.eq(0))throw new Error("no position to close");{const e=o.negated();return await r.trade(n,i,e)}}),[e,t,n,i]))(e,t,n,i):void 0===i?en(e,t,n):(async(e,t,n,i)=>{const{router:a,pToken:r}=K(t),s=vt(e,a),o=kt(e,r),{volume:u}=await o.getPosition(n,i),l=u.negated();let p;if(!u.eq(0)){try{p={success:!0,transaction:await s.trade(n,i,l)}}catch(c){p={success:!1,error:c}}return p}return p={success:!1,error:"no position to close"},p})(e,t,n,i),Ci=async(e,t,n,i)=>"v2_lite"===W(t)?pi(e,t,n,i):void 0===i?(async(e,t,n)=>{let i,a,r;const s=await kn(`${wn()}/trade_history/${e}/${t}/${n}`);if(s&&s.success&&(i=parseInt(s.data.tradeHistoryBlock),a=parseInt(s.data.liquidateHistoryBlock),r=s.data.tradeHistory),r=r.filter((e=>e)).map((e=>({direction:e.direction.trim(),baseToken:e.baseToken.trim(),price:Object(l.c)(e.price).toString(),notional:Object(l.c)(e.notional).toString(),volume:Object(l.c)(e.volume).toString(),transactionFee:Object(l.c)(e.transactionFee).toString(),transactionHash:e.transactionHash,time:e.time.toString()}))),0!==i&&0!==a){const[s,o]=await Promise.all([Tn(e,t,n,i+1),vn(e,t,n,a+1)]);return s.concat(o).concat(r).sort(((e,t)=>parseInt(t.time)-parseInt(e.time)))}{const{initialBlock:r}=ae(e,t);i=parseInt(r),a=parseInt(r);const[s,o]=await Promise.all([Tn(e,t,n,i+1),vn(e,t,n,a+1)]);return s.concat(o).sort(((e,t)=>parseInt(t.time)-parseInt(e.time)))}})(e,t,n):Hn(e,t,n,i)},151:function(e,t,n){"use strict";var i=n(148),a=(n(283),n(16));t.a=Object(i.a)((function(){return Object(a.jsx)("div",{className:"loading-mask",children:Object(a.jsx)("div",{className:"snippet","data-title":".dot-pulse",children:Object(a.jsx)("div",{className:"stage",children:Object(a.jsx)("div",{className:"dot-pulse"})})})})}))},21:function(e,t,n){"use strict";var i,a=n(4),r=n(5),s=n(2),o=n(33),u=n(88),l={};(i=n(559)).keys().forEach((function(e){var t=e.split("/"),n=t[1],a=t[2].split(".")[0].toLowerCase();if(l[n]||(l[n]={}),/mobile-/.test(a)){var r=a.split("-")[1];l[n][r]||(l[n][r]={}),l[n][r].mobile=i(e)}else l[n][a]=i(e)}));var p=function(){function e(){Object(a.a)(this,e),this.locale="en",Object(s.o)(this,{locale:s.p,setLocale:s.f,dict:s.g,localeLabel:s.g});var t=navigator.language,n=t&&t.split("-")[0],i=Object(o.m)();i&&Object.keys(u).includes(i)?this.locale=i:n&&Object.keys(u).includes(n)&&(this.locale=n)}return Object(r.a)(e,[{key:"setLocale",value:function(e){e&&u[e]&&(this.locale=e,Object(o.p)(e))}},{key:"get",value:function(e,t){return l[this.locale][e][t]}},{key:"dict",get:function(){return l[this.locale]}},{key:"localeLabel",get:function(){var e=u[this.locale];return e?e.substr(0,2).toUpperCase():"EN"}}]),e}();t.a=new p},257:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(4),a=n(5),r=n(2),s=n(15),o=function(){function e(){Object(i.a)(this,e),this.all=[],Object(r.o)(this,{all:r.p,setAll:r.f})}return Object(a.a)(e,[{key:"load",value:function(e){var t=e&&e.current,n=Object(s.l)(s.a.get(),t);return e&&(n=n.filter((function(t){return t.version===e.current})),e.isV2&&(n=n.reduce((function(e,t){return-1===e.findIndex((function(e){return e.symbol===t.symbol&&e.pool===t.pool}))&&e.push(t),e}),[]))),this.setAll(n),this.all}},{key:"setAll",value:function(e){this.all=e}}]),e}()},283:function(e,t,n){},284:function(e,t,n){},29:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return o})),n.d(t,"l",(function(){return u})),n.d(t,"m",(function(){return l})),n.d(t,"f",(function(){return p})),n.d(t,"q",(function(){return c})),n.d(t,"i",(function(){return d})),n.d(t,"g",(function(){return y})),n.d(t,"h",(function(){return m})),n.d(t,"c",(function(){return b})),n.d(t,"n",(function(){return f})),n.d(t,"d",(function(){return g})),n.d(t,"b",(function(){return h})),n.d(t,"o",(function(){return T})),n.d(t,"e",(function(){return v})),n.d(t,"p",(function(){return w})),n.d(t,"j",(function(){return k})),n.d(t,"k",(function(){return I}));var i=n(22),a=n.n(i),r=n(31),s=n.n(r);s.a.config({DECIMAL_PLACES:18,ROUNDING_MODE:s.a.ROUND_DOWN,EXPONENTIAL_AT:256});const o=(e,t=0)=>0===t?s()(e):t>0?s()(e).times(s()(`1${"0".repeat(t)}`)):s()(e).div(s()(`1${"0".repeat(-t)}`)),u=(e,t)=>e.gte(t)?e:t,l=(e,t)=>e.lte(t)?e:t,p=(e,t="ether")=>a.a.utils.fromWei(e,t),c=e=>a.a.utils.toChecksumAddress(e),d=e=>a.a.utils.hexToUtf8(e),y=e=>a.a.utils.hexToNumber(e),m=e=>a.a.utils.hexToNumberString(e),b=e=>o(e,-18),f=e=>o(e,18).toFixed(0),g=e=>o(e).toString(),h=e=>1===o(e).toNumber(),T=e=>`${o(e).sd(4).times(100).toFixed(4).toString()}%`,v=e=>e.toFormat().replaceAll(",","").toString(),w=e=>a.a.utils.numberToHex(e),k=()=>"undefined"!==typeof window&&"undefined"!==typeof window.document,I=()=>"undefined"!==typeof window&&navigator.userAgent.includes("jsdom")}).call(this,n(17))},297:function(e,t){},32:function(e,t,n){"use strict";var i=n(2);n(33);t.a=new class{constructor(){this.current=null,Object(i.n)(this,{current:i.p,setCurrent:i.f,isV1:i.g,isV2:i.g,isV2Lite:i.g})}setCurrent(e){this.current=e}switch(){"v1"===this.current?this.setCurrent("v2"):this.setCurrent("v1")}get isV1(){return"v1"===this.current}get isV2(){return"v2"===this.current}get isV2Lite(){return"v2_lite"===this.current}}},320:function(e,t){},322:function(e,t){},33:function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return u})),n.d(t,"c",(function(){return l})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return c})),n.d(t,"j",(function(){return d})),n.d(t,"o",(function(){return m})),n.d(t,"f",(function(){return b})),n.d(t,"n",(function(){return f})),n.d(t,"p",(function(){return g})),n.d(t,"m",(function(){return h})),n.d(t,"a",(function(){return T})),n.d(t,"i",(function(){return v})),n.d(t,"h",(function(){return w})),n.d(t,"g",(function(){return k}));var i=n(31),a=n.n(i),r=n(32);function s(e,t=0){return 0==t?a()(e):t>0?a()(e).times(a()("1"+"0".repeat(t))):a()(e).div(a()("1"+"0".repeat(-t)))}function o(e){return e&&`${e.substr(0,6)}...${e.substr(-4)}`}function u(e){return e&&(+e).toFixed(4)}function l(e,t){return+e===+t}function p(e){return"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd"===e||"0x73feaa1eE314F8c655E354234017bE2193C9E24E"===e}function c(e){return"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd"===e}function d(e){return"0x73feaa1eE314F8c655E354234017bE2193C9E24E"===e}function y(e){return`${e}-current-trading-pool`}function m(e,t){if(t){const n=y(e);sessionStorage.setItem(n,JSON.stringify(t))}}function b(e){return JSON.parse(sessionStorage.getItem(y(e)))}function f(e){sessionStorage.setItem("current-chain",JSON.stringify(e))}function g(e){sessionStorage.setItem("current-locale",e)}function h(){return sessionStorage.getItem("current-locale")}function T(e,t,n=window.location.href){const i=new URL(n);return i.searchParams.has(e)?i.searchParams.set(e,t):i.searchParams.append(e,t),i.toString()}function v(e,t=window.location.href){return new URL(t).searchParams.has(e)}function w(e,t=window.location.href){return new URL(t).searchParams.get(e)}function k(e){const t=JSON.parse(sessionStorage.getItem("current-chain"))||{code:""};return"v2"===r.a.current||"v2_lite"===r.a.current?`${e}_V2_${t?t.code.toUpperCase():"BSC"}`:e}},336:function(e,t){},337:function(e,t){},398:function(e,t){},400:function(e,t){},432:function(e,t){},437:function(e,t){},439:function(e,t){},446:function(e,t){},459:function(e,t){},477:function(e,t){},488:function(e,t){},491:function(e,t){},559:function(e,t,n){var i={"./de/Signin.json":560,"./de/bridge.json":561,"./de/broker.json":562,"./de/dip-history.json":563,"./de/footer.json":564,"./de/governance.json":565,"./de/header.json":566,"./de/home.json":567,"./de/lite.json":568,"./de/mining.json":569,"./de/mobile-lite.json":570,"./de/pro.json":571,"./de/team.json":572,"./en/Signin.json":573,"./en/bridge.json":574,"./en/broker.json":575,"./en/dip-history.json":576,"./en/footer.json":577,"./en/governance.json":578,"./en/header.json":579,"./en/home.json":580,"./en/lite.json":581,"./en/mining.json":582,"./en/mobile-lite.json":583,"./en/pro.json":584,"./en/team.json":585,"./zh/Signin.json":586,"./zh/bridge.json":587,"./zh/broker.json":588,"./zh/dip-history.json":589,"./zh/footer.json":590,"./zh/governance.json":591,"./zh/header.json":592,"./zh/home.json":593,"./zh/lite.json":594,"./zh/mining.json":595,"./zh/mobile-lite.json":596,"./zh/pro.json":597,"./zh/team.json":598};function a(e){var t=r(e);return n(t)}function r(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}a.keys=function(){return Object.keys(i)},a.resolve=r,e.exports=a,a.id=559},560:function(e){e.exports=JSON.parse('{"title-one":"Pr\xe4mienpool:\xa0","title-num":" $100,000","title-two":" in DERI ","title-three":"Stempeln & Gewinnen","title-five":"Anl\xe4sslich des Hinzuf\xfcgens von WBNB und CAKE als Basis-Token f\xfcr Deri auf der Binance Smart Chain (BSC), veranstaltet Deri Protocol ein Promotion-Event mit Pr\xe4mien im Wert von 100.000 $ in DERI","title-frou":"Zeit: Vom 14. Juli 10:00 Uhr bis 31. Juli 10:00 Uhr UTC","header":"SCHRITTE","sign-in":"STEMPELN","trade":"HANDELN","claim-ptoken":"Beanspruche Ptoken","go-trade":"Jetzt handeln","approve":"GENEHMIGEN","less-bnb":"Weniger BNB als mindestens erforderlich","use-a-new-address":"Verwenden Sie eine neue Adresse, um teilzunehmen, danke!","already-stamped-today":"Heute bereits gestempelt","claim":"BEANSPRUCHEN","pending":"AUSSTEHEND...","activity-ends":"AKTIVIT\xc4TS ENDS","exceed-participants":"Nur die ersten 5.000 neuen Adressen k\xf6nnen den Ptoken beanspruchen","approve-failed":"Genehmigen fehlgeschlagen","claim-failed":"Beanspruchung fehlgeschlagen","claim-success":"Sie haben Ihr Ptoken erfolgreich beansprucht!","sign-in-failed":"STEMPELN fehlgeschlagen","connect-wallet":"WALLET VERBINDEN","who-are-eligibles":"Detaillierte Regeln","please-switch-to-bsc":"Bitte wechseln Sie zur BSC","rules-two":"- BNB-Mindestguthaben erforderlich: mehr als 0,2 BNB","rules-one":"- Diese Aktion gilt nicht f\xfcr Adressen, die vor dem 14. Juli 2021, 10:00 Uhr, auf Deri Protocol gehandelt haben","rules-three":"- Benutzer, die alle Aufgaben erf\xfcllen, sind berechtigt, einen Anteil des Preispools von $100.000 zu gewinnen","how-to-participate":"Wie Sie teilnehmen","step-one":"Schritt 1: Klicken Sie dreimal auf die Schaltfl\xe4che \'STEMPEL\'. Beachten Sie, dass die Schaltfl\xe4che \'STEMPEL\' nur einmal pro Tag angeklickt werden kann","step-two":"Schritt 2:  Genehmigen Sie Ihre Wallet auf Deri Protocol, sobald Sie das \'STEMPELN\' drei mal durchgef\xfchrt haben","step-three":"Schritt 3: Klicken Sie auf die Schaltfl\xe4che \'BEANSPRUICHEN\', um den Deri Position Token zu erhalten. Nur die ersten 5.000 neuen Adressen k\xf6nnen den Ptoken beanspruchen","step-four":"Schritt 4: Schlie\xdfen Sie mindestens drei Trades auf Deri Protocol","description":"Alle Benutzer, die den Stempel vervollst\xe4ndigen, haben Anspruch auf einen Anteil des 100.000 USDT-Preispools, w\xe4hrend nur die ersten 5.000 Teilnehmer Deri Ptoken . beanspruchen k\xf6nnen"}')},561:function(e){e.exports=JSON.parse('{"bridge":"BR\xdcCKE","asset":"Verm\xf6genswert","deri":"DERI","from":"Von","to":"Zu","bsc":"BSC","bsc-testnet":"BSC-Testnet","heco":"HECO","heco-testnet":"HECO-Testnet","ethereum":"Ethereum","ropsten":"Ropsten","amount":"Betrag","send":"SENDEN","claim":"BEANSPRUCHEN","connect-wallet":"Wallet Verbinden","approve":"FREIGEBEN","connected":"Verbunden","unconnected":"Nicht Verbunden","sending-deri-to-wormhole":"Sende DERI an Wurmloch ...","processing":"Prozessieren...","finished":"abgeschlossen","this-step-do-not-close":"Dieser Schritt dauert mehrere oder \xfcber 10 Minuten. Schlie\xdfen Sie diese Seite nicht...","waiting-for-bridge-to-sign":"Warten auf Signierung der Br\xfccke","bridge-signed":"Br\xfccke signiert.","send-finished-one":"Wechseln Sie Ihr Wallet Netzwerk auf","send-finished-two":"um Ihr DERI zu beanspruchen.","claim-deri-ing":"Beanspruche DERI ...","waiting-for-bridge-to-sync":"Warten auf Synchronisierung der Br\xfccke...","done":"Erledigt!","back":"ZUR\xdcCK","pending":"AUSSTEHEND","bridge-to-polygon":"Br\xfccke zum Polygon","approve-faild":"Genehmigung fehlgeschlagen","claim-faild":"Beanspruche fehlgeschlagen","amount-must-be-greater-than-zero":"Betrag muss gr\xf6\xdfer als Null sein","there-is-not-enough-amount":"Der Betrag ist nicht ausreichend"}')},562:function(e){e.exports=JSON.parse('{"title-one":"Brokerage Mining","title-two":"Freunde einladen, DERI verdienen","rewards":"BELOHNUNGEN","your-rewards":"IHRE BELOHNUNGEN","invute-friends":"Freunde einladen","bind-address":"Adresse binden","earn-deri":"DERI verdienen","become-broker":"Werde Broker","detailed-rules":"Detaillierte Regeln","my-harvest":"MEINE ERTR\xc4GE","claimed-deri":"Beanspruchte DERI","unclaimed-deri":"Unbeanspruchte DERI","my-trading-volume-in-current-hour":"Meine Brokerage-Ertr\xe4ge im aktuellen Zyklus (gesch.)","time-invited":"Zeit Eingeladen","friends-add":"Adre. des Freundes","contract-vol":"Handelsvol","deri-minted":"Belohnung","page":"Seite","your-deri-is-on":"Ihr Deri ist auf dem","connect-to":". Verbinden mit","to-claim":"zu beanspruchen .","no-deri-to-claim":"Es gibt keine DERI zu beanspruchen","claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch":"Die Beanspruchung von DERI ist w\xe4hrend der ersten 30 Minuten eiens jeden Zyklus nicht m\xf6glich.","claim-failed":"Beanspruchung nicht m\xf6glich","of":"von","bind":"BINDEN","claim":"BEANSPRUCHEN","pending":"AUSSTEHEND","address":"Adresse","bind-faild":"Binden fehlgeschlagen","h":"h","m":"m","s":"s","current-epoch-remaining-time":"Verbleibende Zeit des aktuellen Zyklus","please-enter-a-correct-address":"Bitte geben Sie eine korrekte Adresse ein","brokder-addr-cannot-be-the-same-as-trader":"Die Adresse des Brokers kann nicht mit der des Traders \xfcbereinstimmen","please-enter-address":"Bitte Adresse eingeben","cannot-bind-twice":"Keine doppelte Bindung m\xf6glich","your-total-claimed-deri-title":"Ihre insgesamt beanspruchten DERI = Brokerage Mining + Liquidit\xe4ts-Mining, falls vorhanden","your-total-unclaimed-deri-title":"Ihre insgesamt nicht beanspruchten DERI = Brokerage Mining + Liquidit\xe4ts-Mining, falls vorhanden","brokers-address":"BROKER\'S ADRESSE "}')},563:function(e){e.exports=JSON.parse('{"governance-title":"DIP1: Bitte stimmen Sie f\xfcr eine der folgenden Optionen:","governance-options-one":"Die Mitbeteiligung von DERI-Inhabern an den Transaktionsgeb\xfchren :","governance-options-one-describe":"20 % der Transaktionsgeb\xfchren flie\xdfen in einen Pool, in dem man DERI staken kann, um xDERI zu erhalten. xDERI-Inhaber teilen sich die Einnahmen aus dem Pool der Transaktionsgeb\xfchren.","governance-options-two":"DERI mit Einnahmen aus Transaktionsgeb\xfchren zur\xfcckkaufen","governance-options-two-describe":"20% der Transaktionsgeb\xfchr flie\xdfen in einen DAO Fond, der regelm\xe4\xdfig DERI vom sekund\xe4ren Markt zur\xfcckkauft und anschlie\xdfend diese verbrennt (sie werden recycelt, um wieder gemint zu werden).","governance-options-three":"Status quo beibehalten","vote":"ABSTIMMEN","voting-ended":"Abstimmung beendet","your-vote":"Deine Abstimmung","your-voting-power":"Ihr Stimmrechtsanteil","voting-rules":"Abstimmungsregeln","vote-rules-one":"Ihr Stimmrechtsanteil ist Ihr DERI-Saldo + der entsprechende DERI-Anteil Ihres DERI-USDT SLP-Saldos auf Sushiswap zum Stichtag. Die genaue Formel lautet","vote-rules-two":"Sie k\xf6nnen eine der 3 Blockchains (ETH/BSC/HECO) ausw\xe4hlen, um Ihre Stimmabgabe bis zum Ablauf der Frist zu best\xe4tigen.","vote-rules-three":" Abstimmungsfrist = 2021 March 19th 4:00:00AM UTC","vote-rules-four":"Es wird eine Bestandsaufnahme des Blocks zum Stichtag durchgef\xfchrt und f\xfcr die Berechnung des Wahlergebnisses herangezogen. Das hei\xdft, wenn Sie vor dem Stichtag abstimmen, aber Ihr DERI oder SLP vor dem Stichtag transferiert haben, z\xe4hlt nur der verf\xfcgbare Saldo zum Stichtag."}')},564:function(e){e.exports=JSON.parse('{"app":"App","docs":"Docs","team":"Team","faq":"FAQ","visit-us-on":"Besuche uns auf","deri-protocol":"Deri Protocol","unsupported-chain-id":"Nicht unterst\xfctzte Netzwerk-ID"}')},565:function(e){e.exports=JSON.parse('{"governance-title":"Meme-Coin-Index Inklusions Abstimmung","governance-describe":"Der Deri Protocol Meme Coin Index (iMEME) ist nun handelbar! DERI-Inhabern wird es nun erm\xf6glicht durch eine Abstimmung zu entscheiden, welcher Coin erg\xe4nzend dem iMEME Index hinzugef\xfcgt wird.","opction-title":"Stimmen Sie bitte f\xfcr eine der folgenden Meme-Coins ab:","wallet-balance":"Wallet Guthaben","amount":"Betrag","approve":"GENEHMIGEN","vote":"ABSTIMMEN","vote-rules":"ABSTIMMUNGSREGELN","vote-rules-one":"Jeder DERI stellt eine Wahlstimme dar. Es gibt keine Begrenzung hinsichtlich der Stimmenzahl","vote-rules-two":"Der beliebteste Meme-Coin wird in den Meme-Coin-Index aufgenommen.","vote-rules-three":"Sie k\xf6nnen eine der 3 Blockchains (ETH/BSC/HECO) ausw\xe4hlen, um Ihre Stimmabgabe bis zum Ablauf der Frist zu best\xe4tigen.","vote-rules-four":"Abstimmungszeitraum von 10:00 May 22, 2021 bis 10:00 May 27, 2021 (UTC)","all-the-deri-co-wi-be-re-to-be-min-again":"Alle DERIs werden recycelt und k\xf6nnen wieder gemint werden.","dip-list":"DIP Liste","dip-list-title":"DIP steht f\xfcr Deri Protocol Improvement Proposal (Vorschl\xe4ge zur Verbesserung des Deri Protocols.)","dip-list-dip1":"DIP1","dip":"DIP","detail":"Detail"}')},566:function(e){e.exports=JSON.parse('{"mining":"Minen","trade":"Trade","governance":"Governance","bridge":"Br\xfccke","docs":"Docs","more":"Mehr","broker":"Brokerage Mining","broker-bind":"Broker Binden","signin":"Aktivit\xe4tszentrum","retired-pools":"Inaktive Pools","deri-token":"Deri Zeichen","team":"Team","faq":"FAQ","code-audit":"Auditberichte","github":"Github","guide":"Anleitung","whitepaper":"Whitepaper","use-deri":"BENUTZE DERI","unsupported-chain-id":"Nicht unterst\xfctzte Netzwerk-ID","connect-wallet":"Wallet Verbinden","select-network":"Netzwerk ausw\xe4hlen"}')},567:function(e){e.exports=JSON.parse('{"the":"THE","defi-way":"DEFI ART","the-deri-token":"DAS DERI-TOKEN","add-deri-to-matemask":"DERI zu Metamask hinzuf\xfcgen","buy-deri":"DERI KAUFEN","price":"PREIS","market-cap":"MARKTKAPITALISIERUNG (IM UMLAUF)","circulating-supply":"UMLAUFVERSORGUNG","total-supply":"GESAMTVERSORGUNG","to-trade-derivatives":"UM DERIVATE ZU HANDELN","deri-protocol":"DERI Protocol","deri-describe":"ist ein dezentrales Protokoll zum pr\xe4zisen und kapitaleffizienten Austausch von Risikopositionen.","we-are-on":"Wir sind auf","logo-download":"LOGO-Download","sushi":"SUSHI","and":"und","pancake":"PANCAKE","read-our":"Lies unseren","whitepaper":"Whitepaper","and-peckshield":"und ","audit-report":"Auditbericht","defining-features":"DEFINIERENDE MERKMALE","completely-on-chain":"Vollst\xe4ndig On-Chain","ex-me-fu-im-wi-eth-sm-con":"Der Tauschmechanismus ist vollst\xe4ndig in Ethereum-Smart-Contracts implementiert","real-derivatives":"Echte Derivate","get-ri-ex-pr-and-cap-eff":"Erfassen Sie Risikopositionen pr\xe4zise und kapitaleffizient","composability":"Kompatibilit\xe4t","ri-ex-to-as-nft-to-be-ut-as-le-bl":"Risikopositionen, die als NFTs tokenisiert werden und \xe4hnlich wie Bausteine nutzbar sind","eth-bsc-heco":"ETH + BSC + HECO","three-chains-one-ecosystem":"Drei Blockchains, ein \xd6kosystem","roles-in-deri":"SCHL\xdcSSELAKTEURE IN DERI","liquidity-providers":"Liquidit\xe4tsgeber","liquidity-providers-roles":"Liquidit\xe4tsgeber stellen den Pools Liquidit\xe4t zur Verf\xfcgung, um Transaktionsgeb\xfchren, F\xf6rdergeb\xfchren und DERI-Pr\xe4mien usw. einzunehmen.","traders":"Trader","traders-roles":"Mit Deri Protocol k\xf6nnen Trader die gew\xfcnschte Risikoposition pr\xe4zise und kapitaleffizient akquirieren.","arbitragers":"Arbitrageure","arbitragers-roles":"Arbitrageure sind eine spezielle Gruppe von Tradern, die mittels einer zu verdienen F\xf6rdergeb\xfchr dazu angeregt werden, die beiden Seiten von Long- und Short-Positionen auszugleichen.","position-liquidators":"Position Liquidatoren","position-liquidators-roles":"Positionen, die ihre Liquidationsgrenze \xfcberschreiten, werden von Positionsliquidatoren liquidiert, die die verbleibende Marge der Position als Belohnung teilen.","investors":"INVESTOREN","partners":"PARTNER"}')},568:function(e){e.exports=JSON.parse('{"lite":"LITE","pro":"PRO","trade":"HANDELN","long-buy":"LONG / KAUFEN","long":"LONG","short-sell":"SHORT / VERKAUFEN","short":"SHORT","no-data":"Keine Daten","current-position":"Aktuelle Position","contract-volume":"Kontraktmenge","index-price":"Indexpreis","funding-rate-annual":"Finanzierungsrate T\xe4glich","balance-in-contract":"Saldo im Kontrakt","dynamic-balance":"Dynamischer Saldo","margin":"Margin","available-balance":"Verf\xfcgbares Guthaben","available-balance-title":"Dynamisch effektiver Saldo - Margin Total gehalten","dynamic-effective-balance":"Dynamisch effektiver Saldo","dynamic-effective-balance-title":"Disagio Margin + Unrealisierter PnL","total-held":"Total gehalten","total-held-title":"Margin gehalten in allen Positionen","for-this-pos":"f\xfcr diese Pos","for-this-pos-title":"Margin gehalten in dieser Position","contract-info":"KONTRAKT INFO","base-token":"Basis Token","symbol":"Symbol","multiplier":"Multiplikator","funding-rate-coefficient":"Finanzierungsrate Koeffizient","min-initial-margin-ratio":"Min Ersteinschussquote","min-maintenance-margin-ratio":"Min Erhaltungsmarginquote","transaction-fee":"Transaktionsgeb\xfchr","enter-volume":"VOLUMEN EINGEBEN","approve":"GENEHMIGEN","approve-failed":"GENEHMIGUNG FEHLGESCHLAGEN","connect-wallet":"WALLET VERBINDEN","pool-liquidity":"Pool-Liquidit\xe4t","liquidity-used":"Genutzte Liquidit\xe4t","funding-rate-impact":"Auswirkung der Finanzierungsrate","no-margin-tip":"Sie haben kein Guthaben im Kontrakt.\xa0Zahlen Sie bitte zuerst ein.","not-enough-margin-tip":"Das Handelsvolumen \xfcbersteigt das Leverage-Limit. Bitte mehr Guthaben einzahlen","confirm":"BEST\xc4TIGEN","of-contracts":"von Kontrakten","position-after-execution":"Position nach Ausf\xfchrung","trade-price-estimated":"Handelspreis (gesch\xe4tzt)","leverage-after-execution":"Hebelwirkung nach Ausf\xfchrung","cancel":"ABBRECHEN","ok":"OK","deposit":"EINZAHLUNG","balance-in-contract-uppercase":"SALDO IM KONTRAKT","wallet-balance":"Wallet Guthaben","add":"Hinzuf\xfcgen","remove":"Entfernen","deposit-margin":"MARGIN EINZAHLEN","max":"max","max-add":"max","add-all":"ALLES HINZUF\xdcGEN","amount":"Betrag","add-margin":"Margin hinzuf\xfcgen","remove-margin":"Margin entfernen","insufficient-balance-in-wallet":"Unzureichendes Guthaben in der Wallet","deposit-failed":"Einzahlung fehlgeschlagen","withdraw-margin":"MARGIN ABHEBEN","withdraw":"ABHEBEN","remove-all":"ALLES ENTFERNEN","under-margin":"unter margin","it-has-to-be-greater-than-zero-tip":"Der Wert muss gr\xf6\xdfer als Null sein","my-position":"MEINE POSITION","position":"POSITION","close":"Schlie\xdfen","average-entry-price":"Durchschn. Einstiegspreis","detail":"Detail","direction":"Richtung","unrealized-pnl":"Nicht realisierter PnL","liquidation-price":"Liquidationspreis","liquidation-failed":"Liquidation fehlgeschlagen","close-position-failed":"Position schlie\xdfen fehlgeschlagen","history":"HISTORIE","volume-price":"Volumen @ Preis","notional":"Fiktiv","liquidation":"LIQUIDATION","time":"Zeit","price":"Preis","volume":"Volumen","pending":"AUSSTEHEND","funding-rate-per-block":"Finanzierungsrate (pro block)","1-long-contract-pays-1-short-contract":"1 long-Kontrakt zahlt 1 Short-Kontrakt","index-price-camelize":"Indexpreis","per-block":"pro block","funding-fee":"Anf. Finanz.","funding-fee-tip":"+: Der Pool schuldet Ihnen \\n -: Sie schulden dem Pool","multiplier-tip":"Der Multiplikator ist das effektive Verh\xe4ltnis des als Sicherheit verwendeten Margin-Tokens (umgerechnet in den effektiven Saldo).\\nBeispiel: Wenn Sie 1 B1-Token als Margin buchen und der Multiplikator 0,8 betr\xe4gt, dann ist die effektive Margin 0,8","main-zone":"Main","innovation-zone":"Inno"}')},569:function(e){e.exports=JSON.parse('{"pool-liq":"Pool Liq","total":"total","symbol":"Symbol","retired-text":"Es gibt keine Mining-Ertr\xe4ge mehr aus diesen Pools. Bitte entfernen Sie Ihre Liquidit\xe4t und \xfcbertragen Sie sie auf die ","new-pools":" neue Pools","premining-pools":"Premining Pools","retired-pools":"Inaktive Pools","apy":"APY","deri-apy":"DERI-APY","sushi-apy":"SUSHI-APY","cake-apy":"CAKE-APY","address":"Adresse","staking":"STAKING","premining-finished":"Die Premining phase ist beendet. Bitte unstaken Sie ihre Liquidit\xe4t aus den Premining-Pools","my-liquidity-providing-harvest-in-current-epoch":"Meine Liquidit\xe4tsertr\xe4ge im aktuellen Zyklus","my-trading-harvest-in-current-epoch":"Meine Tradingertr\xe4ge im aktuellen Zyklus","current-epoch-remaining-time":"Verbleibende Zeit des aktuellen Zyklus","my-harvest-in-current-epoch-estimated":"Meine Ertr\xe4ge im aktuellen Zyklus (gesch\xe4tzt)","my-trading-harvest-in-current-epoch-Est":" Meine Tradingertr\xe4ge im aktuellen Zyklus (gesch.)","deri":"DERI","h":"h","m":"m","s":"s","claimed-deri":"Beanspruchte DERI","unclaimed-deri":"Unbeanspruchte DERI","your-deri-is-on":"Ihr Deri ist auf dem","connect-to":". Verbinden mit","to-claim":"zu beanspruchen .","claim":"BEANSPRUCHEN","no-deri-to-claim":"Es gibt keine DERI zu beanspruchen","no-deri-to-claim-yet":"Sorry, es gibt derzeit keine DERI zu beanspruchen","please-switch-to-BSC-to-claim-deri":"Bitte wechseln Sie zur BSC, um DERI zu beanspruchen","claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch":"Die Beanspruchung von DERI ist w\xe4hrend der ersten 30 Minuten eiens jeden Zyklus nicht m\xf6glich.","claim-failed":"Beanspruchung nicht m\xf6glich","liquidity-mining":"LIQUIDITY MINING","provide":"Bereitstellen","earn-deri":"Verdiene DERI","pool-total-liquidity":"Pool Gesamtliquidit\xe4t","my-liquidity-pencentage":"Mein Liquidit\xe4tsanteil","my-liquidity":"Meine Liquidit\xe4t","mining-pnl":"Mining Pnl","add-liquidity":"LIQUIDIT\xc4T HINZUF\xdcGEN","remove-liquidity":"LIQUIDIT\xc4T ENTFERNEN","staked-balance":"Gestaktes Guthaben","liquidity-share-value":"Liquidit\xe4t Anteilswert","connect-wallet":"Wallet verbinden","wrong-network":"Falsches Netzwerk","approve":"GENEHMIGEN","approve-failed":"GENEHMIGUNG fehlgeschlagen","trading-mining":"HANDELN MINING","trade-to-earn-deri":"Handel, um DERI zu verdienen","total-trading-volume-in-current-hour":"Gesamtes Handelsvolumen in der aktuellen Stunde","my-trading-volume-in-current-hour":"Mein Handelsvolumen in der aktuellen Stunde","trade":"HANDELN","wallet-balance":"Wallet Guthaben","liquidity":"LIQUIDIT\xc4T","liquidity-available":"Liquidit\xe4t Anteile","max":"MAX","add-all":"ALLES HINZUF\xdcGEN","add":"HINZUF\xdcGEN","not-sufficient-funds":"kein ausreichendes Guthaben","the-input-liquidity-shall-not-be-less-than":"Die eingegebene Liquidit\xe4t darf nicht kleiner sein als","it-has-to-be-greater-than-zero":"Sie muss gr\xf6\xdfer als Null sein","failure-of-transaction":"Transaktionsfehler","shares-available":"Verf\xfcgbare Anteile","liquidity-shares":"LIQUIDIT\xc4TSANTEILE","shares":"Anteile","max-removeable":"MAX ENTFERNBAR","remove-all":"ALLES ENTFERNEN","remove":"ENTFERNEN","pending":"AUSSTEHEND","your-current-max-removable-shares-are":"Ihre aktuellen max entfernbaren Anteile sind","staking-max-limit-tip":"Es ist nicht erlaubt, einen Stakingsaldo von weniger als 1 zu hinterlegen. Bitte klicken Sie auf \\"MAX\\" um alles zu entfernen, wenn Sie Ihre gesamte Liquidit\xe4t abheben m\xf6chten.","invalid-liquidity":"Ung\xfcltige Liquidit\xe4t!","multiplier":"Multiplikator","multiplier-tip":"Der Multiplikator ist das effektive Verh\xe4ltnis f\xfcr die im Liquidit\xe4tsmining bereitgestellte  Liquidit\xe4t.\\nZum Beispiel\uff1aBereitstellung von 1 B1-Token f\xfcr Liquidit\xe4tsmining, wenn der Multiplikator von B1 0,8 ist, dann ist der effektive Wert f\xfcr das Mining 0,8","v2_lite":"Inno","v2":"Main"}')},570:function(e){e.exports=JSON.parse('{"balance-in-contract":"Saldo im Kontrakt","dynamic-balance":"Dyn Sal","available-balance":"Verf\xfcg. Guth.","dynamic-effective-balance":"Dyn.Eff.Sal","transaction-fee":"Geb\xfchr","my-position":"POSITION","base-token":"B Token","wallet-balance":"Wal. Guth","index":"Index","funding":"Funding"}')},571:function(e){e.exports=JSON.parse('{"total-net-position":"Net Position gesamt","min":"Min","hour":"Std.","day":"Tag","week":"Woche","current-position":"AKTUELLE POSITION","trade-history":"TRADING-HISTORIE","pool-total-liquidity":"Pool Gesamtliquidit\xe4t","position-info":"POSITION INFO"}')},572:function(e){e.exports=JSON.parse('{"team":"TEAM","deri-protocol":"DERI Protocol","team-describe":"Deri Protocol wird von Defi Factory entwickelt, einem Team von Experten aus den Bereichen Finanzwesen, Mathematik und Informatik. Die Kernmitglieder sind promovierte Wissenschaftler und kommen aus dem Derivatebereich der Wall Street. Das Team verf\xfcgt \xfcber tiefgreifende Erfahrungen im Bereich Preisbildung/Handel/Strukturierung von Derivaten. Die Teammitglieder sind seit mehreren Jahren im Kryptohandel und in der Solidity-Programmierung aktiv.","ceo":"0xAlpha","co-founder-and-ceo":"Mitgr\xfcnder und CEO","ceo-school":"Physik B. Sc. von der Peking Universit\xe4t, Physik PhD von der Rice Universit\xe4t","ceo-worked":"Berufserfahrung an der Wall Street im Bereich Preisgestaltung/Handel/Strukturierung/Risikomanagement von Derivaten bei der Deutschen Bank, HBK Hedgefonds und Goldman Sachs","ceo-worked-one":"Berufserfahrung an der Wall Street im Bereich","ceo-worked-two":"Preisgestaltung/Handel/Strukturierung","ceo-worked-three":"/Risikomanagement von Derivaten bei der Deutschen Bank, HBK Hedgefonds und Goldman Sachs","c-f-a-qu-he-fund-fo-on-tr-and-cr-de":"Mitbegr\xfcnder eines quantitativen Hedgefonds mit Schwerpunkt auf tranditionellen und Krypto-Derivaten","ceo-twitter":"Twitter","cto":"Richard","co-founder-and-cto":"Mitgr\xfcnder und CTO","cto-school":"Physik B. Sc. von der Peking Universit\xe4t, Physik PhD von der CUNY","cto-worked":"Ehemaliger Leiter der Strategieabteilung des quantitativen Handels, verantwortlich f\xfcr die Strategieentwicklung des Hochfrequenzhandels, Momentum-Trading & statistische Arbitrage","cto-good-at-language":"Experte f\xfcr die Entwicklung von Finanzsystemen in C++/Python","cto-ex-of-so-vy-pr-and-sm-con-dev":"Experte f\xfcr Solidity/Vyper-Programmierung und Smart-Contract-Entwicklung","jason":"Jason","jason-school":"Informatik B. Sc. von der Universit\xe4t von Washington","jason-worked":"Ehemaliger Software-Ingenieur bei Amazon, AMD","jason-er-inv":"Fr\xfcher Krypto-Anleger","jason-co-fo-of-a-cr-ma-se-ag":"Mitbegr\xfcnder einer Krypto-Marketing-Service-Agentur","janice":"Janice","janice-school":"Bachelor of Management von der Shanghai Universit\xe4t f\xfcr Finanzen und Wirtschaft","janice-degree":"Master of Management von der Shanghai Universit\xe4t f\xfcr Finanzen und Wirtschaft","janice-worked":"Arbeitete 11 Jahre lang f\xfcr PwC China als Senior Managerin im Bereich Risikomanagement","janice-t-and-ha-ye-ex-at-ve-op":"Zweieinhalb Jahre Berufserfahrung bei VeChain Operation"}')},573:function(e){e.exports=JSON.parse('{"title-one":"Reward Pool:\xa0","title-num":" $100,000","title-two":" in DERI ","title-three":"Stamp & Win  ","title-five":"In celebration of adding WBNB and CAKE as Deri\'s base tokens on Binance Smart Chain (BSC), Deri Protocol rolls out this promotional event with rewards worth $100,000 in DERI ","title-frou":"Time: From July 14th, 10:00 AM to July 31st, 10:00 AM UTC","header":"STEPS","sign-in":"STAMP","trade":"TRADE","claim-ptoken":"Claim Ptoken","go-trade":"Go Trade","approve":"APPROVE","less-bnb":"Less BNB than the minimum requirement","use-a-new-address":"Use a new address to participate, thanks!","already-stamped-today":"Already stamped today","claim":"CLAIM","pending":"PENDING...","activity-ends":"ACTIVITY ENDS","exceed-participants":"More than 5000 addresses completed all three \'STAMP\'","approve-failed":"Approve failed","claim-failed":"Claim failed","claim-success":"You have successfully claimed your Ptoken!","sign-in-failed":"Stamp failed","connect-wallet":"CONNECT WALLET","who-are-eligibles":"Detailed Rules","please-switch-to-bsc":"Please switch to BSC","rules-two":"- Minimum BNB balance requirement: more than 0.2 BNB","rules-one":"- This promotion does not apply to any addresses interacted with Deri Protocol before July 14th, 10:00 AM, 2021","rules-three":"- Users who complete all the tasks will be eligible to win a share of the $100,000 prize pool","how-to-participate":"How to Participate","step-one":"Step 1: Click the \'STAMP\' button three times. Notably, the \'STAMP\' button can only be clicked once a day","step-two":"Step 2: Approve your wallet on Deri Protocol when you have completed all three \'STAMP\'","step-three":"Step 3:Click the \'CLAIM\' button to get Deri Position token. Only the first 5,000 new addresses can claim the Ptoken.","step-four":"Step 4: Complete at least three trades on Deri Protocol","description":"All users who complete the stamp will be eligible to win a share of the 100,000 USDT prize pool, while only the first 5,000 participants can claim Deri Ptoken"}')},574:function(e){e.exports=JSON.parse('{"bridge":"BRIDGE","asset":"Asset","deri":"DERI","from":"From","to":"To","bsc":"BSC","bsc-testnet":"BSC-Testnet","heco":"HECO","heco-testnet":"HECO-Testnet","ethereum":"Ethereum","ropsten":"Ropsten","amount":"Amount","send":"SEND","claim":"CLAIM","connect-wallet":"Connect Wallet","approve":"APPROVE","connected":"Connected","unconnected":"Unconnected","sending-deri-to-wormhole":"Sending DERI to wormhole ...","processing":"processing...","finished":"finished","this-step-do-not-close":"This step takes several or over 10 minutes. Do not close this page...","waiting-for-bridge-to-sign":"Waiting for bridge to sign ...","bridge-signed":"Bridge signed.","send-finished-one":"Please switch your wallet network to","send-finished-two":"to claim your DERI.","claim-deri-ing":"Claiming DERI ...","waiting-for-bridge-to-sync":"Waiting for Bridge to sync ..","done":"Done!","back":"BACK","pending":"PENDING","approve-faild":"Approve faild","claim-faild":"Claim faild","bridge-to-polygon":"Bridge to Polygon","amount-must-be-greater-than-zero":"Amount must be greater than zero","there-is-not-enough-amount":"There is not enough Amount"}')},575:function(e){e.exports=JSON.parse('{"title-one":"Brokerage Mining","title-two":"Invite Friends, Earn DERI","rewards":"REWARDS","your-rewards":"YOUR RANKING","invute-friends":"Invite Friends","bind-address":"Bind Address","earn-deri":"Earn DERI","become-broker":"Become Broker","detailed-rules":"Detailed Rules","my-harvest":"MY HARVEST","claimed-deri":"Claimed DERI ","unclaimed-deri":"Unclaimed DERI","my-trading-volume-in-current-hour":"My Brokerage Harvest in Current Epoch (Est)","time-invited":"Invitation Time","friends-add":"Friend\u2019s Addr","contract-vol":"Trading Vol","deri-minted":"Reward","page":"Page","your-deri-is-on":"Your DERI is on ","connect-to":". Connect to","to-claim":"to claim .","no-deri-to-claim":"No DERI to claim","claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch":"Claiming DERI is disabled during first 30 minutes of each epoch","claim-failed":"Claim failed","of":"of","bind":"BIND","claim":"CLAIM","pending":"PENDING","address":"Address","bind-faild":"Bind faild","h":"h","m":"m","s":"s","current-epoch-remaining-time":"Current Epoch Remaining Time","please-enter-a-correct-address":"Please enter a correct address","brokder-addr-cannot-be-the-same-as-trader":"Brokder address cannot be the same as trader\'s","please-enter-address":"Please enter address","cannot-bind-twice":"Cannot bind twice","your-total-claimed-deri-title":"Your total claimed DERI = brokerage mining + liquidity mining, if any","your-total-unclaimed-deri-title":"Your total unclaimed DERI = brokerage mining + liquidity mining, if any","brokers-address":"BROKER\u2019S ADDRESS "}')},576:function(e){e.exports=JSON.parse('{"governance-title":"DIP1: Please vote for one of the following options:","governance-options-one":"Share transaction fee with the DERI holders:","governance-options-one-describe":"20% of the transaction fee will be put into a pool, in which one can stake DERI to get xDERI. xDERI holders will share the transaction fee income of the pool.","governance-options-two":"Buy back DERI with transaction fee income:","governance-options-two-describe":"20% of the transaction fee will be put into a DAO fund, which is to regularly buy back DERI from secondary market and burned (i.e. recycled to be mined again).","governance-options-three":"Keep the status quo","vote":"VOTE","voting-ended":"Voting ended","your-vote":"Your vote","your-voting-power":"Your voting power","voting-rules":"Voting rules","vote-rules-one":"Your voting power is your DERI balance + the corresponding DERI amount of your DERI-USDT SLP balance on Sushiswap as of the deadline. The precise formula is","vote-rules-one-describe":"Voting Power = balanceOf(DERI) + balanceOf(DERI-USDT SLP) * totalDERIonSushi / totalSupply(DERI-USDT SLP)","vote-rules-two":"You can choose any of the 3 chains (ETH/BSC/HECO) to sign your vote by the deadline","vote-rules-three":" Voting Deadline = 2021 March 19th 4:00:00AM UTC","vote-rules-four":"A snapshot will be taken at the block at deadline and used to calculate the result. That is, if you vote before the deadline but have transferred your DERI or SLP before deadline, it is the balance at the deadline that counts."}')},577:function(e){e.exports=JSON.parse('{"app":"App","docs":"Docs","team":"Team","faq":"FAQ","visit-us-on":"Visit us on","deri-protocol":"Deri Protocol","unsupported-chain-id":"Unsupported Chain ID","connect-wallet":"Connect Wallet"}')},578:function(e){e.exports=JSON.parse('{"governance-title":"Meme Coin Index Inclusion Voting","governance-describe":"As the DERI PROTOCOL Meme Coin Index (iMEME) is now live, Meme coin index inclusion voting which allows DERI holders to vote on new additions of the iMEME has kicked off based on feedback from the whole community.","opction-title":"For this kick off round, Please vote for one for the following Meme coins:","wallet-balance":"Wallet Balance","amount":"Amount","approve":"APPROVE","vote":"VOTE","vote-rules":"Voting rules","vote-rules-one":"One DERI one vote, you can input the vote number as you want.","vote-rules-two":"The most popular meme coin will be added to the Meme Coin Index.","vote-rules-three":"You can choose any of the 3 chains (ETH/BSC/HECO) to sign your vote by the deadline","vote-rules-four":"Voting Period from 10:00 May 22, 2021 to 10:00:00 May 27, 2021 (UTC)","all-the-deri-co-wi-be-re-to-be-min-again":"All the DERI collected will be recycled to be mined again.","dip-list":"DIP List","dip-list-title":"DIP stands for Deri Protocol Improvement Proposal.","dip-list-dip1":"DIP1","dip":"DIP","detail":"Detail"}')},579:function(e){e.exports=JSON.parse('{"mining":"Mining","trade":"Trade","governance":"Governance","bridge":"Bridge","docs":"Docs","more":"More","broker":" Brokerage Mining","broker-bind":"Bind Broker","signin":"Promotional Events","retired-pools":"Retired Pools","deri-token":"Deri Token","team":"Team","faq":"FAQ","code-audit":"Code Audit","github":"Github","guide":"Guide","whitepaper":"Whitepaper","use-deri":"USE DERI","unsupported-chain-id":"Unsupported Chain ID","connect-wallet":"Connect Wallet","select-network":"Select Network"}')},580:function(e){e.exports=JSON.parse('{"the":"THE","defi-way":"DEFI WAY","the-deri-token":"THE DERI TOKEN","add-deri-to-matemask":"Add DERI To Metamask","buy-deri":"BUY DERI","price":"PRICE","market-cap":"MARKET CAP (CIRCULATING)","circulating-supply":"CIRCULATING SUPPLY","total-supply":"TOTAL SUPPLY","to-trade-derivatives":"TO TRADE DERIVATIVES","deri-protocol":"DERI Protocol","logo-download":"LOGO Download","deri-describe":"is a decentralized protocol to exchange risk exposures precisely and capital-efficiently.","we-are-on":"We are on","sushi":"SUSHI","and":"and","pancake":"PANCAKE","read-our":"Read our","whitepaper":"Whitepaper","and-peckshield":"and ","audit-report":"Audit Reports","defining-features":"DEFINING FEATURES","completely-on-chain":"Completely On-Chain","ex-me-fu-im-wi-eth-sm-con":"Exchanging mechanism fully implemented within Ethereum smart contracts","real-derivatives":"Real Derivatives","get-ri-ex-pr-and-cap-eff":"Get risk exposures precisely and capital-efficiently","composability":"Composability","ri-ex-to-as-nft-to-be-ut-as-le-bl":"Risk exposures tokenized as NFTs to be utilized as lego blocks","eth-bsc-heco":"ETH + BSC + HECO","three-chains-one-ecosystem":"Three chains, one ecosystem","roles-in-deri":"ROLES IN DERI","liquidity-providers":"Liquidity Providers","liquidity-providers-roles":"Liquidity providers provide liquidity to the pools to gain transaction fee, funding fee and DERI award etc.","traders":"Traders","traders-roles":"With Deri Protocol, traders are able to acquire the targeted risk exposures precisely and capital-efficiently.","arbitragers":"Arbitragers","arbitragers-roles":"Arbitragers are a special type of traders induced by funding fee arbitrage to balance the two sides of long and short positions.","position-liquidators":"Position Liquidators","position-liquidators-roles":"Positions touching their liquidation lines are liquidated by Position Liquidators, who share the positions\' remaining margin as reward.","investors":"INVESTORS","partners":"PARTNERS"}')},581:function(e){e.exports=JSON.parse('{"lite":"LITE","pro":"PRO","trade":"TRADE","options":"OPTIONS","long-buy":"LONG / BUY","long":"LONG","short-sell":"SHORT / SELL","short":"SHORT","no-data":"No Data","current-position":"Current Position","contract-volume":"Contract Volume","index-price":"Index Price","funding-rate-annual":"Funding Rate Daily","balance-in-contract":"Balance in Contract","dynamic-balance":"Dynamic Balance","margin":"Margin","available-balance":"Available Balance","available-balance-title":"Dynamic Effective Bal - Margin Total Held","dynamic-effective-balance":"Dynamic Effective Bal","dynamic-effective-balance-title":"Total Discounted Margin + Unrealized PnL","total-held":"total held","total-held-title":"Margin held by all positions","for-this-pos":"for this pos","for-this-pos-title":"Margin held by this position","contract-info":"CONTRACT INFO","base-token":"Base Token","symbol":"Symbol","multiplier":"Multiplier","funding-rate-coefficient":"Funding Rate Coefficient","min-initial-margin-ratio":"Min Initial Margin Ratio","min-maintenance-margin-ratio":"Min Maintenance Margin Ratio","transaction-fee":"Transaction Fee","enter-volume":"ENTER VOLUME","approve":"APPROVE","approve-failed":"Approve failed","connect-wallet":"CONNECT WALLET","pool-liquidity":"Pool Liquidity","liquidity-used":"Liquidity Used","funding-rate-impact":"Funding Rate Impact","no-margin-tip":"You\xa0have\xa0no\xa0fund\xa0in\xa0contract.\xa0Please\xa0deposit\xa0first.","not-enough-margin-tip":"Trading volume exceeds leverage limit. Please deposit more fund.","confirm":"CONFIRM","of-contracts":"of Contracts","position-after-execution":"Position after execution","trade-price-estimated":"Trade Price (estimated)","leverage-after-execution":"Leverage after execution","cancel":"CANCEL","ok":"OK","deposit":"DEPOSIT","balance-in-contract-uppercase":"BALANCE IN CONTRACT","wallet-balance":"Wallet Balance","add":"Add","remove":"Remove","deposit-margin":"DEPOSIT MARGIN","max":"MAX","max-add":"MAX","add-all":"ADD ALL","amount":"Amount","add-margin":"add margin","remove-margin":"remove margin","insufficient-balance-in-wallet":"Insufficient balance in wallet","deposit-failed":"Deposit failed","withdraw-margin":"WITHDRAW MARGIN","withdraw":"WITHDRAW","remove-all":"REMOVE ALL","under-margin":"under margin","it-has-to-be-greater-than-zero-tip":"It has to be greater than zero","my-position":"MY POSITION","position":"Position","close":"close","average-entry-price":"Average Entry Price","detail":"Detail","direction":"Direction","unrealized-pnl":"Unrealized Pnl","liquidation-price":"Liquidation Price","liquidation-failed":"Liquidation failed","close-position-failed":"Close position failed","history":"HISTORY","volume-price":"Volume @ Price","notional":"Notional","liquidation":"LIQUIDATION","time":"Time","price":"Price","volume":"Volume","pending":"PENDING","funding-rate-per-block":"Funding Rate (per block)","1-long-contract-pays-1-short-contract":"1 long contract pays 1 short contract","index-price-camelize":"IndexPrice","per-block":"per block","funding-fee":"Acc\'d Funding","funding-fee-tip":"+: the pool owes you\\n-: you owe the pool","multiplier-tip":"The multiplier is the effective ratio of the margin token used as collateral (converted into effective balance).\\nFor example: posting 1 B1 token as margin, if the multiplier is 0.8, then the effective margin is 0.8","main-zone":"Main","innovation-zone":"Inno"}')},582:function(e){e.exports=JSON.parse('{"pool-liq":"Pool Liq","total":"total","symbol":"Symbol","retired-text":"There is no longer mining harvest from these pools. Please unstake your liquidity and stake into ","new-pools":" new pools.","retired-pools":"Retired Pools","premining-pools":"Premining Pools","apy":"APY","deri-apy":"DERI-APY","sushi-apy":"SUSHI-APY","cake-apy":"CAKE-APY","address":"Address","staking":"STAKING","premining-finished":"Premining is finished. Please unstake from premining pools.","my-liquidity-providing-harvest-in-current-epoch":"My Liquidity-Providing Harvest in Current Epoch","my-trading-harvest-in-current-epoch":"My Trading Harvest in Current Epoch","current-epoch-remaining-time":"Current Epoch Remaining Time","my-harvest-in-current-epoch-estimated":"My Harvest in Current Epoch (estimated)","my-trading-harvest-in-current-epoch-Est":" My Trading Harvest in Current Epoch (Est)","deri":"DERI","h":"h","m":"m","s":"s","claimed-deri":"Claimed DERI","unclaimed-deri":"Unclaimed DERI","your-deri-is-on":"Your DERI is on ","connect-to":". Connect to","to-claim":"to claim .","claim":"CLAIM","no-deri-to-claim":"No DERI to claim","no-deri-to-claim-yet":"Sorry,no DERI to claim yet","please-switch-to-BSC-to-claim-deri":"Please switch to BSC to claim DERI","claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch":"Claiming DERI is disabled during first 30 minutes of each epoch","claim-failed":"Claim failed","liquidity-mining":"LIQUIDITY MINING","provide":"Provide","earn-deri":"Earn DERI","pool-total-liquidity":"Pool Total Liquidity","my-liquidity-pencentage":"My Liquidity Pencentage","my-liquidity":"My Liquidity","mining-pnl":"Mining Pnl","add-liquidity":"ADD LIQUIDITY","remove-liquidity":"REMOVE LIQUIDITY","staked-balance":"Staked Balance","liquidity-share-value":"Liquidity Share Value","connect-wallet":"Connect Wallet","wrong-network":"Wrong Network","approve":"APPROVE","approve-failed":"Approve Failed","trading-mining":"TRADING MINING","trade-to-earn-deri":"Trade to Earn DERI","total-trading-volume-in-current-hour":"Total Trading Volume in Current Hour","my-trading-volume-in-current-hour":"My Trading Volume in Current Hour","trade":"TRADE","wallet-balance":"Wallet Balance","liquidity":"LIQUIDITY","liquidity-available":"Liquidity Available","max":"MAX","add-all":"ADD ALL","add":"ADD","not-sufficient-funds":"not sufficient funds","the-input-liquidity-shall-not-be-less-than":"The input liquidity shall not be less than","it-has-to-be-greater-than-zero":"It has to be greater than zero","failure-of-transaction":"failure of transaction","shares-available":"Shares Available","liquidity-shares":"LIQUIDITY SHARES","shares":"shares","max-removeable":"MAX REMOVEABLE","remove-all":"REMOVE ALL","remove":"REMOVE","pending":"PENDING","your-current-max-removable-shares-are":"Your current max removable shares are","staking-max-limit-tip":"Leaving staking balance of smaller than 1 is not allowed. Please click \\"MAX\\" to remove all if you are to withdraw all of your liquidity.","invalid-liquidity":"Invalid Liquidity!","multiplier":"Multiplier","multiplier-tip":"The multiplier is the effective ratio of the liquidity provided for mining.\\nFor example\uff1aproviding 1 B1 token for liquidity mining, if the multiplier of B1 is 0.8, then the effective value for mining is 0.8","v2_lite":"Inno","v2":"Main"}')},583:function(e){e.exports=JSON.parse('{"balance-in-contract":"Balance in Contract","dynamic-balance":"Dyn. Bal","available-balance":"Avail. Bal","dynamic-effective-balance":"Dyn. Eff. Bal","transaction-fee":"Fee","my-position":"POSITION","index":"Index","funding":"Funding(D)","base-token":"B Token","wallet-balance":"Wal. Bal"}')},584:function(e){e.exports=JSON.parse('{"total-net-position":"Total Net Position","min":"min","hour":"hour","day":"day","week":"week","current-position":"CURRENT POSITION","trade-history":"TRADE HISTORY","pool-total-liquidity":"Pool Total liquidity","position-info":"POSITION INFO"}')},585:function(e){e.exports=JSON.parse('{"team":"TEAM","deri-protocol":"DERI Protocol","team-describe":"Deri Protocol is designed and developed by Defi Factory, a team of experts of lfinance, math and computer science. The core members have PhD degrees in science and come from the derivative business of Wall Street. The team has in-depth experiences of derivative pricing/trading/structuring. The team members have been in the crypto trading and solidity programming for several years.","ceo":"0xAlpha","co-founder-and-ceo":"Co-founder and CEO","ceo-school":"Physics BS from Peking University, Physics PhD from Rice University","ceo-worked":"Worked in Wall Street on derivative pricing/trading/structuring/risk management in Deutsche Bank, HBK hedge fund , Goldman Sachs","ceo-worked-one":"Worked in Wall Street on derivative","ceo-worked-two":"pricing/trading/structuring/risk","ceo-worked-three":"management in Deutsche Bank, HBK hedge fund , Goldman Sachs","c-f-a-qu-he-fund-fo-on-tr-and-cr-de":"Co-founded a quantitative hedge fund focused on tranditional and crypto derivatives","ceo-twitter":"Twitter","cto":"Richard","co-founder-and-cto":"Co-founder and CTO","cto-school":"Physics BS from Peking University, Physics PhD from CUNY","cto-worked":"Former Director of Strategy of quantitative trading, in charge of strategy development of high-frequency trading, momentum trading, statistical arbitrage","cto-good-at-language":"Expert of financial system development in C++/Python","cto-ex-of-so-vy-pr-and-sm-con-dev":"Expert of solidity/vyper programming and smart contract development","jason":"Jason","jason-school":"Computer Science BS from University of Washington","jason-worked":"Former Software Engineer at Amazon, AMD","jason-er-inv":"Early crypto investor","jason-co-fo-of-a-cr-ma-se-ag":"Co-founder of a crypto marketing service agency","janice":"Janice","janice-school":"Bachelor of Management from Shanghai University of Finance and Economics","janice-degree":"Master of Management from Shanghai University of Finance and Economics","janice-worked":"Worked for PwC China as a senior manager in risk management for 11 years","janice-t-and-ha-ye-ex-at-ve-op":"Two and half year experiences at VeChain Operation"}')},586:function(e){e.exports=JSON.parse('{"title-one":"\u603b\u5956\u6c60\uff1a\u4ef7\u503c","title-num":" $100,000","title-two":" \u7684 DERI  ","title-three":"\u7b7e\u5230\u74dc\u5206\u5927\u5956\uff01","title-five":"\u4e3a\u5e86\u795d\u5728\u5e01\u5b89\u667a\u80fd\u94fe\uff08BSC\uff09\u4e0a\u6dfb\u52a0 WBNB \u548c CAKE \u4f5c\u4e3a Deri \u7684\u57fa\u7840\u4ee3\u5e01\uff0cDeri Protocol \u63a8\u51fa\u4e86\u6b64\u4fc3\u9500\u6d3b\u52a8\uff0c\u5e76\u63d0\u4f9b\u4ef7\u503c 100,000 \u7f8e\u5143\u7684 DERI","title-frou":"\u65f6\u95f4\uff1a\u5317\u4eac\u65f6\u95f42021\u5e747\u670814\u65e5\u4e0b\u53486\u70b9\u81f37\u670831\u65e5\u4e0b\u53486\u70b9","header":"\u53c2\u4e0e\u6b65\u9aa4","sign-in":"\u7b7e\u5230","trade":"\u4ea4\u6613","claim-ptoken":"\u9886\u53d6 Ptoken","approve":"\u6388\u6743","less-bnb":"BNB \u4f4e\u4e8e\u6700\u4f4e\u8981\u6c42","use-a-new-address":"\u4f7f\u7528\u65b0\u5730\u5740\u53c2\u4e0e\uff0c\u8c22\u8c22\uff01","already-stamped-today":"\u4eca\u65e5\u5df2\u7b7e\u5230","claim":"\u9886\u53d6","pending":"\u8fdb\u884c\u4e2d...","activity-ends":"\u6d3b\u52a8\u7ed3\u675f","approve-failed":"\u6388\u6743\u5931\u8d25","claim-failed":"\u9886\u53d6\u5931\u8d25","sign-in-failed":"\u7b7e\u5230\u5931\u8d25","claim-success":"\u9886\u53d6\u6210\u529f!","connect-wallet":"\u8fde\u63a5\u94b1\u5305","who-are-eligibles":"\u8be6\u7ec6\u89c4\u5219","exceed-participants":"\u5df2\u8d85\u8fc75000\u4e2a\u5730\u5740\u5b8c\u6210\u7b7e\u5230","please-switch-to-bsc":"\u8bf7\u5207\u6362\u5230BSC","rules-two":"- \u6700\u4f4e\u94b1\u5305\u4f59\u989d\u8981\u6c42\uff1a\u94b1\u5305\u5185\u6709\u8d85\u8fc70.2\u4e2aBNB","rules-one":"- \u6b64\u6d3b\u52a8\u4e0d\u9002\u7528\u4e8e\u5317\u4eac\u65f6\u95f4 2021 \u5e74 7 \u6708 14 \u65e5 \u4e0b\u53486\u70b9\u4e4b\u524d\u4e0e Deri Protocol\u53d1\u751f\u4ea4\u4e92\u7684\u4efb\u4f55\u5730\u5740","rules-three":"- \u5b8c\u6210\u6240\u6709\u4efb\u52a1\u7684\u7528\u6237\u5c06\u6709\u8d44\u683c\u5206\u4eab$100,000\u5956\u6c60 ","how-to-participate":"\u5982\u4f55\u53c2\u4e0e","step-one":"\u6b65\u9aa4 1\uff1a\u5355\u51fb\u201c\u7b7e\u5230\u201d\u6309\u94ae\u4e09\u6b21\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7b7e\u5230\u6309\u94ae\u6bcf\u5929\u53ea\u80fd\u70b9\u51fb\u4e00\u6b21\u3002","step-two":"\u6b65\u9aa4 2\uff1a\u5b8c\u6210\u4e09\u6b21\u201c\u7b7e\u5230\u201d\u540e\uff0c\u5728 Deri Protocol \u4e0a\u6388\u6743\u60a8\u7684\u94b1\u5305","step-three":"\u6b65\u9aa4 3\uff1a\u70b9\u51fb\u201c\u9886\u53d6\u201d\u6309\u94ae\u83b7\u53d6 Deri Ptoken\u3002\u53ea\u6709\u524d 5,000 \u4e2a\u65b0\u5730\u5740\u53ef\u4ee5\u9886\u53d6 Ptoken","step-four":"\u6b65\u9aa4 4\uff1a\u5728 Deri \u534f\u8bae\u4e0a\u5b8c\u6210\u81f3\u5c11\u4e09\u7b14\u4ea4\u6613","description":"\u6240\u6709\u53c2\u4e0e\u5e76\u5b8c\u6210\u4e09\u6b21\u7b7e\u5230\u7684\u65b0\u7528\u6237\u90fd\u80fd\u53c2\u4e0e\u74dc\u520610\u4e07USD\u5956\u6c60\uff0c\u4f46\u53ea\u6709\u524d5000\u540d\u53c2\u4e0e\u8005\u53ef\u4ee5\u9886\u53d6Deri Ptoken"}')},587:function(e){e.exports=JSON.parse('{"bridge":"\u8de8\u94fe","asset":"\u8d44\u4ea7","deri":"DERI","from":"\u4ece","to":"\u5230","bsc":"BSC","bsc-testnet":"BSC-Testnet","heco":"HECO","heco-testnet":"HECO-Testnet","ethereum":"Ethereum","ropsten":"Ropsten","amount":"\u6570\u91cf","send":"\u53d1\u9001","claim":"\u9886\u53d6","connect-wallet":"\u8fde\u63a5\u94b1\u5305","approve":"\u6388\u6743","connected":"\u5df2\u8fde\u63a5","unconnected":"\u672a\u8fde\u63a5","sending-deri-to-wormhole":"\u5411\u866b\u6d1e\u53d1\u9001DERI ...","processing":"\u52a0\u8f7d\u4e2d...","finished":"\u5b8c\u6210","this-step-do-not-close":"\u6b64\u8fc7\u7a0b\u9700\u8981\u51e0\u5206\u949f\u6216\u8d85\u8fc710\u5206\u949f\uff0c\u8bf7\u4e0d\u8981\u5173\u95ed\u7f51\u9875...","waiting-for-bridge-to-sign":"\u7b49\u5f85\u7b7e\u540d ...","bridge-signed":"\u5df2\u7b7e\u540d.","send-finished-one":"\u8bf7\u5c06\u94b1\u5305\u7f51\u7edc\u5207\u6362\u5230","send-finished-two":"\u9886\u53d6deri.","claim-deri-ing":"\u6b63\u5728\u9886\u53d6deri...","waiting-for-bridge-to-sync":"\u7b49\u5f85\u540c\u6b65 ..","done":"\u5b8c\u6210!","back":"\u8fd4\u56de","pending":"\u8fdb\u884c\u4e2d","approve-faild":"\u6388\u6743\u5931\u8d25","claim-faild":"\u9886\u53d6\u5931\u8d25","bridge-to-polygon":"\u6865\u63a5\u5230Polygon","amount-must-be-greater-than-zero":"\u6570\u91cf\u5fc5\u987b\u5927\u4e8e0","there-is-not-enough-amount":"\u6570\u91cf\u4e0d\u8db3"}')},588:function(e){e.exports=JSON.parse('{"title-one":"\u7ecf\u7eaa\u4eba\u6316\u77ff","title-two":"\u9080\u8bf7\u4ea4\u6613 \u8d5a\u53d6DERI","rewards":"\u5956\u52b1","your-rewards":"\u4f60\u7684\u6392\u540d","invute-friends":"\u9080\u8bf7\u670b\u53cb","bind-address":"\u7ed1\u5b9a\u5730\u5740","earn-deri":"\u8d5a\u53d6DERI","become-broker":"\u6210\u4e3a\u7ecf\u7eaa\u4eba","detailed-rules":"\u5177\u4f53\u89c4\u5219","my-harvest":"\u6211\u7684\u6536\u76ca","claimed-deri":"\u5df2\u9886\u53d6 DERI","unclaimed-deri":"\u5f85\u9886\u53d6 DERI","my-trading-volume-in-current-hour":"\u7ecf\u7eaa\u4eba\u6316\u77ff\u5f53\u524d\u5468\u671f\u6536\u76ca (\u4f30\u7b97)","time-invited":"\u9080\u8bf7\u65f6\u95f4","friends-add":"\u4ea4\u6613\u5730\u5740","contract-vol":"\u5408\u7ea6\u4ea4\u6613\u91cf","deri-minted":"DERI\u5956\u52b1","page":"Page","your-deri-is-on":"\u4f60\u7684DERI\u5728 ","connect-to":"\u3002 \u8fde\u63a5\u94b1\u5305\u5230","to-claim":"\u9886\u53d6 \u3002","no-deri-to-claim":"\u6ca1\u6709\u53ef\u9886\u53d6\u7684DERI","claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch":"\u6bcf\u671f\u5f00\u59cb\u524d30\u5206\u949f\u65e0\u6cd5\u9886\u53d6DERI","claim-failed":"\u9886\u53d6\u5931\u8d25","of":"of","bind":"\u7ed1\u5b9a","claim":"\u9886\u53d6","pending":"\u8fdb\u884c\u4e2d","address":"\u5730\u5740","bind-faild":"\u7ed1\u5b9a\u5931\u8d25","h":"h","m":"m","s":"s","current-epoch-remaining-time":"\u5f53\u524d\u6316\u77ff\u5468\u671f\u5269\u4f59\u65f6\u95f4","please-enter-a-correct-address":"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u5730\u5740","brokder-addr-cannot-be-the-same-as-trader":"\u4e0d\u80fd\u4e0e\u4ea4\u6613\u5730\u5740\u4e3a\u540c\u4e00\u5730\u5740","cannot-bind-twice":"\u4e0d\u80fd\u91cd\u590d\u7ed1\u5b9a","please-enter-address":"\u8bf7\u8f93\u5165\u5730\u5740","your-total-claimed-deri-title":"\u5df2\u9886\u53d6DERI\u603b\u91cf(\u5305\u542b\u7ecf\u7eaa\u4eba\u6316\u77ff+\u6d41\u52a8\u6027\u6316\u77ff)","your-total-unclaimed-deri-title":"\u672a\u9886\u53d6DERI\u603b\u91cf(\u5305\u542b\u7ecf\u7eaa\u4eba\u6316\u77ff+\u6d41\u52a8\u6027\u6316\u77ff)","brokers-address":"\u7ecf\u7eaa\u4eba\u5730\u5740"}')},589:function(e){e.exports=JSON.parse('{"governance-title":"DIP1\uff1a\u8bf7\u5bf9\u4ee5\u4e0b\u9009\u9879\u8fdb\u884c\u6295\u7968\uff1a","governance-options-one":"\u4e0eDERI\u6301\u6709\u8005\u5171\u4eab\u4ea4\u6613\u8d39","governance-options-one-describe":"20%\u7684\u4ea4\u6613\u8d39\u7528\u5c06\u88ab\u653e\u5165\u4e00\u4e2a\u6c60\u4e2d\uff0c\u5728\u6b64\u6c60\u4e2d\u7528\u6237\u53ef\u4ee5\u8d28\u62bcDERI\u83b7\u5f97xDERI\u3002xDERI\u6301\u6709\u8005\u5c06\u5206\u4eab\u6c60\u7684\u4ea4\u6613\u8d39\u7528\u6536\u5165\u3002","governance-options-two":"\u4ee5\u4ea4\u6613\u8d39\u6536\u5165\u56de\u8d2dDERI","governance-options-two-describe":"20%\u7684\u4ea4\u6613\u8d39\u7528\u5c06\u6295\u5165\u5230DAO\u57fa\u91d1\u4e2d\uff0c\u7528\u4e8e\u5b9a\u671f\u4ece\u4e8c\u7ea7\u5e02\u573a\u56de\u8d2d\u5e76\u9500\u6bc1DERI\uff08\u5373\u56de\u6536\u518d\u5f00\u91c7\uff09\u3002","governance-options-three":"\u6295\u7968\u60c5\u51b5","vote":"\u6295\u7968","voting-ended":"\u6295\u7968\u7ed3\u675f","your-vote":"\u4f60\u7684\u6295\u7968","your-voting-power":"\u4f60\u7684\u6295\u7968\u529b","voting-rules":"\u6295\u7968\u89c4\u5219","vote-rules-one":"\u6295\u7968\u529b\u662fDERI\u4f59\u989d+\u622a\u6b62\u65e5\u671fSushiswap\u4e0aDERI-USDT SLP\u4f59\u989d\u7684\u76f8\u5e94DERI\u91d1\u989d\u3002\u7cbe\u786e\u516c\u5f0f\u4e3a\uff1a","vote-rules-one-describe":"\u6295\u7968\u529b=\u4f59\u989d\uff08DERI\uff09+\u4f59\u989d\uff08DERI-USDT SLP\uff09*Sushi\u603bDERI/\u603b\u4f9b\u5e94\uff08DERI-USDT SLP\uff09","vote-rules-two":"\u5728\u622a\u6b62\u65e5\u671f\u524d\uff0c\u53ef\u4efb\u9009\u4e09\u4e2a\u94fe\uff08ETH/BSC/HECO\uff09\u4e2d\u7684\u4e00\u4e2a\u6765\u7b7e\u7f72\u6295\u7968\u3002","vote-rules-three":" \u6295\u7968\u622a\u6b62\u65f6\u95f4\uff1a\u5317\u4eac\u65f6\u95f42021\u5e743\u670819\u65e512:00:00","vote-rules-four":"\u5c4a\u65f6\u5c06\u5728\u5757\u4e0a\u53d6\u7167\u5e76\u7528\u4e8e\u8ba1\u7b97\u7ed3\u679c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u622a\u6b62\u65e5\u671f\u4e4b\u524d\u6295\u7968\uff0c\u4f46\u662f\u5728\u622a\u6b62\u65e5\u671f\u4e4b\u524d\u8f6c\u79fb\u4e86\u4f60\u7684DERI\u6216SLP\uff0c\u90a3\u4e48\u622a\u6b62\u65e5\u671f\u7684\u4f59\u989d\u624d\u7b97\u7ed3\u679c\u3002"}')},590:function(e){e.exports=JSON.parse('{"app":"\u5e94\u7528","docs":"\u6587\u6863","team":"\u56e2\u961f","faq":"FAQ","visit-us-on":"\u8054\u7cfb\u6211\u4eec","deri-protocol":"Deri Protocol","unsupported-chain-id":"\u4e0d\u652f\u6301\u7f51\u7edcID"}')},591:function(e){e.exports=JSON.parse('{"governance-title":"MemeCoin\u6307\u6570\u521b\u5efa\u5e01\u79cd\u6536\u5f55\u6295\u7968","governance-describe":"\u968f\u7740DERI\u534f\u8baeMemeCoin\u6307\u6570 (iMEME)\u7684\u4e0a\u7ebf, \u6839\u636e\u6574\u4e2a\u793e\u533a\u7684\u53cd\u9988,MemeCoin\u6307\u6570\u521b\u5efa\u5e01\u79cd\u6536\u5f55\u6295\u7968\u5df2\u542f\u52a8.DERI\u6301\u6709\u8005\u53ef\u5bf9iMEME\u65b0\u6dfb\u52a0\u7684\u5e01\u79cd\u8fdb\u884c\u6295\u7968.","opction-title":"\u8bf7\u4e3a\u4ee5\u4e0bMeme\u5e01\u6295\u4e00\u7968:","wallet-balance":"\u94b1\u5305\u4f59\u989d","amount":"\u6570\u91cf","approve":"\u6388\u6743","vote":"\u6295\u7968","vote-rules":"\u6295\u7968\u89c4\u5219","vote-rules-one":"\u4e00\u4e2aDERI\u4e00\u7968\uff0c\u8f93\u5165\u60f3\u6295\u7968\u7684\u53f7\u7801\u3002","vote-rules-two":"\u6295\u7968\u6700\u591a\u7684meme\u5e01\u5c06\u7eb3\u5165Meme\u8d27\u5e01\u6307\u6570\u3002","vote-rules-three":"\u5728\u622a\u6b62\u65e5\u671f\u524d\uff0c\u53ef\u4efb\u9009\u4e09\u4e2a\u94fe\uff08ETH/BSC/HECO\uff09\u4e2d\u7684\u4e00\u4e2a\u6765\u7b7e\u7f72\u6295\u7968\u3002","vote-rules-four":"\u6295\u7968\u65f6\u95f4\uff1a2021\u5e745\u670822\u65e518:00\u81f32021\u5e745\u670827\u65e518:00:00\uff08\u5317\u4eac\u65f6\u95f4\uff09","all-the-deri-co-wi-be-re-to-be-min-again":"\u6240\u6709\u6295\u7968\u6240\u7528DERI\u5c06\u88ab\u56de\u6536\u518d\u5f00\u91c7\u3002","dip-list":"DIP\u5217\u8868","dip-list-title":"DIP\u8868\u793aDeri\u534f\u8bae\u6539\u8fdb\u63d0\u6848","dip-list-dip1":"DIP1","dip":"DIP","detail":"\u8be6\u60c5"}')},592:function(e){e.exports=JSON.parse('{"mining":"\u6316\u77ff","trade":"\u4ea4\u6613","governance":"\u6cbb\u7406","bridge":"\u8de8\u94fe","docs":"\u6587\u6863","more":"\u66f4\u591a","broker":"\u7ecf\u7eaa\u4eba\u6316\u77ff","broker-bind":"\u7ed1\u5b9a\u7ecf\u7eaa\u4eba","signin":"\u6d3b\u52a8\u4e2d\u5fc3","retired-pools":"\u9000\u5f79\u77ff\u6c60","deri-token":"Deri \u901a\u8bc1","team":"\u56e2\u961f","faq":"FAQ","code-audit":"\u5ba1\u8ba1\u62a5\u544a","github":"Github","guide":"\u6307\u5357","whitepaper":"\u767d\u76ae\u4e66","use-deri":"\u4f7f\u7528 DERI","unsupported-chain-id":"\u4e0d\u652f\u6301\u7f51\u7edcID","connect-wallet":"\u8fde\u63a5\u94b1\u5305","select-network":"\u9009\u62e9\u7f51\u7edc"}')},593:function(e){e.exports=JSON.parse('{"the":"","defi-way":"\u7528DEFI\u7684\u65b9\u5f0f","the-deri-token":"THE DERI TOKEN","add-deri-to-matemask":"\u6dfb\u52a0 DERI \u5230 Metamask","buy-deri":"\u8d2d\u4e70 DERI","price":"\u4ef7\u683c","market-cap":"\u6d41\u901a\u5e02\u503c","circulating-supply":"\u6d41\u901a\u4f9b\u5e94\u91cf","total-supply":"\u603b\u4f9b\u5e94\u91cf","to-trade-derivatives":"\u4ea4\u6613\u884d\u751f\u54c1","deri-protocol":"DERI \u534f\u8bae","deri-describe":"\u662f\u4e00\u4e2a\u7cbe\u786e\u9ad8\u6548\u4ea4\u6613\u98ce\u9669\u66b4\u9732\u7684\u53bb\u4e2d\u5fc3\u5316\u534f\u8bae","logo-download":"\u4e0b\u8f7dLOGO","we-are-on":"Deri\u4ea4\u6613","sushi":"SUSHI","and":"\u4e0e","pancake":"PANCAKE","read-our":"\u70b9\u6b64\u9605\u8bfb","whitepaper":"\u767d\u76ae\u4e66","and-peckshield":"\u4e0e ","audit-report":"\u5ba1\u8ba1\u62a5\u544a","defining-features":"\u6838\u5fc3\u7279\u5f81","completely-on-chain":"\u771f\u6b63\u7684DEFI","ex-me-fu-im-wi-eth-sm-con":"\u6240\u6709\u64cd\u4f5c\u7531\u533a\u5757\u94fe\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u5b8c\u6210","real-derivatives":"\u771f\u6b63\u7684\u884d\u751f\u54c1","get-ri-ex-pr-and-cap-eff":"\u7cbe\u786e\u9ad8\u6548\u5730\u83b7\u53d6\u98ce\u9669\u66b4\u9732","composability":"\u53ef\u7ec4\u5408\u6027","ri-ex-to-as-nft-to-be-ut-as-le-bl":"\u98ce\u9669\u66b4\u9732\u4ee3\u5e01\u5316\u4e3aNFTs\uff0c\u5b9e\u73b0DEFI\u4e50\u9ad8\u79ef\u6728","eth-bsc-heco":"ETH + BSC + HECO","three-chains-one-ecosystem":"\u4e09\u94fe\u4e00\u4f53","roles-in-deri":"DERI\u7684\u53c2\u4e0e\u8005","liquidity-providers":"\u6d41\u52a8\u6027\u63d0\u4f9b\u8005","liquidity-providers-roles":"\u6d41\u52a8\u6027\u63d0\u4f9b\u8005\u5411\u6d41\u52a8\u6027\u6c60\u63d0\u4f9b\u6d41\u52a8\u6027\uff0c\u53ef\u83b7\u5f97\u4ea4\u6613\u8d39\uff0c\u8d44\u91d1\u8d39\u548cDERI\u5956\u52b1\u7b49","traders":"\u4ea4\u6613\u8005","traders-roles":"\u5728Deri \u534f\u8bae, \u4ea4\u6613\u8005\u80fd\u591f\u7cbe\u786e\u9ad8\u6548\u5730\u83b7\u53d6\u76ee\u6807\u98ce\u9669\u66b4\u9732","arbitragers":"\u5957\u5229\u8005","arbitragers-roles":"\u5957\u5229\u8005\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u4ea4\u6613\u8005\uff0c\u88ab\u8d44\u91d1\u8d39\u7387\u5438\u5f15\u8fdb\u884c\u5957\u5229,\u8fdb\u800c\u5e73\u8861\u591a\u7a7a\u53cc\u65b9\u7684\u5934\u5bf8\u3002","position-liquidators":"\u4ed3\u4f4d\u6e05\u7b97\u4eba","position-liquidators-roles":"\u4ed3\u4f4d\u6e05\u7b97\u4eba\u5bf9\u5230\u8fbe\u6e05\u7b97\u7ebf\u7684\u4ed3\u4f4d\u8fdb\u884c\u6e05\u7b97\uff0c\u4ed3\u4f4d\u5269\u4f59\u7684\u4fdd\u8bc1\u91d1\u4f5c\u4e3a\u5956\u52b1\u5206\u914d\u7ed9\u6e05\u7b97\u4eba\u3002","investors":"\u6295\u8d44\u4eba","partners":"\u5408\u4f5c\u4f19\u4f34"}')},594:function(e){e.exports=JSON.parse('{"lite":"\u7b80\u6613\u7248","pro":"\u4e13\u4e1a\u7248","trade":"\u4ea4\u6613","long-buy":"\u505a\u591a / \u4e70\u5165","long":"\u505a\u591a","short-sell":"\u505a\u7a7a / \u5356\u51fa","short":"\u505a\u7a7a","no-data":"\u65e0\u6570\u636e","current-position":"\u5f53\u524d\u4ed3\u4f4d","contract-volume":"\u5408\u7ea6\u91cf","index-price":"\u6307\u6570\u4ef7\u683c","funding-rate-annual":"\u65e5\u8d44\u91d1\u8d39\u7387","balance-in-contract":"\u5408\u7ea6\u4f59\u989d","dynamic-balance":"\u52a8\u6001\u4f59\u989d","margin":"\u4fdd\u8bc1\u91d1","available-balance":"\u53ef\u7528\u4f59\u989d","available-balance-title":"\u52a8\u6001\u6709\u6548\u4f59\u989d-\u6301\u6709\u7684\u603b\u4fdd\u8bc1\u91d1","dynamic-effective-balance":"\u52a8\u6001\u6709\u6548\u4f59\u989d","dynamic-effective-balance-title":"\u603b\u6298\u7b97\u4fdd\u8bc1\u91d1+\u672a\u5151\u73b0\u76c8\u4e8f","total-held":"\u603b\u6301\u4ed3","total-held-title":"\u5168\u90e8\u6301\u4ed3\u51bb\u7ed3\u7684\u4fdd\u8bc1\u91d1","for-this-pos":"\u672c\u4ed3\u4f4d","for-this-pos-title":"\u6301\u6709\u672c\u4ed3\u4f4d\u51bb\u7ed3\u7684\u4fdd\u8bc1\u91d1","contract-info":"\u5408\u7ea6\u4fe1\u606f","base-token":"\u672c\u4f4d\u5e01","symbol":"\u6807\u7684","multiplier":"\u5408\u7ea6\u4e58\u6570","funding-rate-coefficient":"\u8d44\u91d1\u8d39\u7387\u7cfb\u6570","min-initial-margin-ratio":"\u6700\u5c0f\u521d\u59cb\u4fdd\u8bc1\u91d1\u7387","min-maintenance-margin-ratio":"\u6700\u5c0f\u7ef4\u6301\u4fdd\u8bc1\u91d1\u7387","transaction-fee":"\u4ea4\u6613\u624b\u7eed\u8d39","enter-volume":"\u8f93\u5165\u5f00\u4ed3\u6570\u91cf","approve":"\u6388\u6743","approve-failed":"\u6388\u6743\u5931\u8d25","connect-wallet":"\u8fde\u63a5\u94b1\u5305","pool-liquidity":"\u6d41\u52a8\u6027\u6c60","liquidity-used":"\u6d41\u52a8\u6027\u4f7f\u7528\u7387","funding-rate-impact":"\u8d44\u91d1\u8d39\u7387\u7684\u5f71\u54cd","no-margin-tip":"\u8d26\u6237\u91cc\u8fd8\u6ca1\u6709\u8d44\u91d1\uff0c\u8bf7\u5148\u5b58\u5165\u3002","not-enough-margin-tip":"\u8d26\u6237\u8d44\u91d1\u4e0d\u8db3\uff0c\u8bf7\u5b58\u5165\u66f4\u591a\u7684\u8d44\u91d1","confirm":"\u786e\u8ba4","of-contracts":"\u5408\u7ea6\u6570\u91cf","position-after-execution":"\u4ea4\u6613\u540e\u4ed3\u4f4d","trade-price-estimated":"\u4ea4\u6613\u4ef7\u683c (\u4f30\u7b97)","leverage-after-execution":"\u4ea4\u6613\u540e\u6301\u4ed3\u6760\u6746","cancel":"\u53d6\u6d88","ok":"\u786e\u8ba4","deposit":"\u5b58\u6b3e","balance-in-contract-uppercase":"\u8d26\u6237\u4fdd\u8bc1\u91d1","wallet-balance":"\u94b1\u5305\u4f59\u989d","add":"\u6dfb\u52a0","remove":"\u79fb\u9664","deposit-margin":"\u5b58\u5165\u4fdd\u8bc1\u91d1","max":"\u6700\u5927\u53ef\u79fb\u9664","max-add":"\u6700\u5927\u53ef\u5b58\u5165","add-all":"\u6dfb\u52a0\u6240\u6709","amount":"\u6570\u91cf","add-margin":"\u6dfb\u52a0\u4fdd\u8bc1\u91d1","remove-margin":"\u79fb\u9664\u4fdd\u8bc1\u91d1","insufficient-balance-in-wallet":"\u94b1\u5305\u4f59\u989d\u4e0d\u8db3","deposit-failed":"\u5b58\u5165\u5931\u8d25","withdraw-margin":"\u63d0\u53d6\u4fdd\u8bc1\u91d1","withdraw":"\u63d0\u53d6","remove-all":"\u79fb\u9664\u6240\u6709","under-margin":"\u4fdd\u8bc1\u91d1\u4e0d\u8db3","it-has-to-be-greater-than-zero-tip":"\u5fc5\u987b\u5927\u4e8e0","my-position":"\u6211\u7684\u4ed3\u4f4d","position":"\u4ed3\u4f4d","close":"\u5e73\u4ed3","average-entry-price":"\u5f00\u4ed3\u5747\u4ef7","detail":"\u66f4\u591a","direction":"\u65b9\u5411","unrealized-pnl":"\u672a\u5151\u73b0\u76c8\u4e8f","liquidation-price":"\u6e05\u7b97\u4ef7\u683c","liquidation-failed":"\u6e05\u7b97\u5931\u8d25","close-position-failed":"\u5e73\u4ed3\u5931\u8d25","history":"\u5386\u53f2\u8bb0\u5f55","volume-price":"\u4ea4\u6613\u91cf@\u4ef7\u683c","notional":"\u5408\u7ea6\u4ef7\u503c","liquidation":"\u6e05\u7b97","time":"\u65e5\u671f","price":"\u4ef7\u683c","volume":"\u4ea4\u6613\u91cf","pending":"\u8fdb\u884c\u4e2d","funding-rate-per-block":"\u8d44\u91d1\u8d39\u7387 (\u6bcf\u4e00\u4e2a\u533a\u5757)","1-long-contract-pays-1-short-contract":"\u4e00\u624b\u505a\u591a\u7684\u5408\u7ea6\u4ed8\u7ed9\u4e00\u624b\u505a\u7a7a\u7684\u5408\u7ea6","index-price-camelize":"\u6307\u6570\u4ef7\u683c","per-block":"\u6bcf\u4e00\u4e2a\u533a\u5757","funding-fee":"\u5e94\u6536\u8d44\u91d1\u8d39","funding-fee-tip":"+: \u6d41\u52a8\u6027\u6c60\u9700\u8981\u652f\u4ed8\u7ed9\u4f60\\n-: \u4f60\u9700\u8981\u652f\u4ed8\u7ed9\u6d41\u52a8\u6027\u6c60","multiplier-tip":"\u4e58\u6570\u4ee3\u8868\u6bcf\u4e2atoken\u7528\u4f5c\u4fdd\u8bc1\u91d1\u65f6\u7684\u6298\u7b97\u6bd4\u4f8b\uff08\u7528\u4e8e\u8ba1\u7b97\u6709\u6548\u4fdd\u8bc1\u91d1\uff09\\n\u5982\uff1a\u6dfb\u52a01\u4e2aB1 toekn\u4f5c\u4e3a\u4fdd\u8bc1\u91d1\uff0c\u4e58\u6570\u4e3a0.8\uff0c\u6709\u6548\u4fdd\u8bc1\u91d1\u4e3a0.8","main-zone":"\u4e3b\u533a","innovation-zone":"\u521b\u65b0\u533a"}')},595:function(e){e.exports=JSON.parse('{"pool-liq":"\u6d41\u52a8\u6027","total":"\u603b\u91cf","symbol":"\u6807\u7684","retired-text":"\u4ee5\u4e0b\u77ff\u6c60\u5df2\u9000\u5f79\uff0c\u4e0d\u518d\u4ea7\u751f\u6316\u77ff\u6536\u76ca\u3002\u8bf7\u79fb\u9664\u60a8\u7684\u6d41\u52a8\u6027\u5e76\u5c06\u5176\u6dfb\u52a0\u81f3","new-pools":"\u65b0\u6d41\u52a8\u6027\u6c60","premining-pools":"\u9884\u6316\u77ff","retired-pools":"\u9000\u5f79\u77ff\u6c60","apy":"\u5e74\u5316\u6536\u76ca\u7387","deri-apy":"DERI-\u5e74\u5316\u6536\u76ca\u7387","sushi-apy":"SUSHI-\u5e74\u5316\u6536\u76ca\u7387","cake-apy":"CAKE-\u5e74\u5316\u6536\u76ca\u7387","address":"\u5730\u5740","staking":"\u8d28\u62bc","premining-finished":"\u9884\u6316\u77ff\u9636\u6bb5\u5df2\u7ed3\u675f\u3002\u8bf7\u53ca\u65f6\u79fb\u9664\u60a8\u7684\u6d41\u52a8\u6027","my-liquidity-providing-harvest-in-current-epoch":"\u5f53\u524d\u6d41\u52a8\u6027\u6536\u76ca","my-trading-harvest-in-current-epoch":"\u5f53\u524d\u4ea4\u6613\u6316\u77ff\u6536\u76ca","current-epoch-remaining-time":"\u5f53\u524d\u6316\u77ff\u5468\u671f\u5269\u4f59\u65f6\u95f4","my-harvest-in-current-epoch-estimated":"\u5f53\u524d\u6316\u77ff\u5468\u671f\u6536\u76ca (\u4f30\u7b97)","my-trading-harvest-in-current-epoch-Est":" \u5f53\u524d\u4ea4\u6613\u6316\u77ff\u5468\u671f\u6536\u76ca (\u4f30\u7b97)","deri":"DERI","h":"h","m":"m","s":"s","claimed-deri":"\u5df2\u9886\u53d6DERI","unclaimed-deri":"\u5f85\u9886\u53d6DERI","your-deri-is-on":"\u4f60\u7684DERI\u5728","connect-to":"\u3002 \u8fde\u63a5\u94b1\u5305\u5230","to-claim":"\u9886\u53d6 \u3002","claim":"\u9886\u53d6","no-deri-to-claim":"\u6ca1\u6709\u53ef\u9886\u53d6\u7684DERI","no-deri-to-claim-yet":"\u62b1\u6b49\uff0c\u5c1a\u65e0\u53ef\u9886\u53d6\u7684DERI","please-switch-to-BSC-to-claim-deri":"\u8bf7\u5207\u6362\u5230BSC\u9886\u53d6DERI","claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch":"\u6bcf\u671f\u5f00\u59cb\u524d30\u5206\u949f\u65e0\u6cd5\u9886\u53d6DERI","claim-failed":"\u9886\u53d6\u5931\u8d25","liquidity-mining":"\u6d41\u52a8\u6027\u6316\u77ff","provide":"\u63d0\u4f9b","earn-deri":"\u8d5a\u53d6 DERI","pool-total-liquidity":"\u6d41\u52a8\u6027\u6c60\u603b\u91cf","my-liquidity-pencentage":"\u6d41\u52a8\u6027\u5360\u6bd4","my-liquidity":"\u6211\u7684\u6d41\u52a8\u6027","mining-pnl":"\u6316\u77ff\u76c8\u4e8f","add-liquidity":"\u6dfb\u52a0\u6d41\u52a8\u6027","remove-liquidity":"\u79fb\u9664\u6d41\u52a8\u6027","staked-balance":"\u5df2\u8d28\u62bc\u4f59\u989d","liquidity-share-value":"\u6d41\u52a8\u6027\u4efd\u989d\u4ef7\u503c","connect-wallet":"\u8fde\u63a5\u94b1\u5305","wrong-network":"\u7f51\u7edc\u9519\u8bef","approve":"\u6388\u6743","approve-failed":"\u6388\u6743\u5931\u8d25","trading-mining":"\u4ea4\u6613\u6316\u77ff","trade-to-earn-deri":"\u4ea4\u6613\u8d5a\u53d6 DERI","total-trading-volume-in-current-hour":"\u5f53\u524d\u4ea4\u6613\u6316\u77ff\u5468\u671f\u7684\u603b\u4ea4\u6613\u91cf","my-trading-volume-in-current-hour":"\u5f53\u524d\u6316\u77ff\u5468\u671f\u5185\u6211\u7684\u4ea4\u6613\u91cf","trade":"\u4ea4\u6613","wallet-balance":"\u94b1\u5305\u4f59\u989d","liquidity":"\u6d41\u52a8\u6027","max":"\u6700\u5927\u503c","add-all":"\u6dfb\u52a0\u5168\u90e8","add":"\u6dfb\u52a0","not-sufficient-funds":"\u8d44\u91d1\u4e0d\u8db3","the-input-liquidity-shall-not-be-less-than":"\u6295\u5165\u6d41\u52a8\u6027\u4e0d\u5f97\u4f4e\u4e8e","it-has-to-be-greater-than-zero":"\u5fc5\u987b\u5927\u4e8e0","failure-of-transaction":"\u4ea4\u6613\u5931\u8d25","shares-available":"\u53ef\u7528\u4efd\u989d","liquidity-shares":"\u6d41\u52a8\u6027\u4efd\u989d","shares":"\u4efd\u989d","max-removeable":"\u6700\u5927\u53ef\u79fb\u9664","remove-all":"\u79fb\u9664\u5168\u90e8","remove":"\u79fb\u9664","pending":"\u8fdb\u884c\u4e2d","your-current-max-removable-shares-are":"\u4f60\u76ee\u524d\u6700\u5927\u53ef\u79fb\u9664\u4efd\u989d\u4e3a","staking-max-limit-tip":"\u8d28\u62bc\u4f59\u989d\u4e0d\u80fd\u5c0f\u4e8e1\u3002\u5982\u679c\u60a8\u8981\u63d0\u53d6\u6240\u6709\u6d41\u52a8\u8d44\u91d1\uff0c\u8bf7\u5355\u51fb \\"MAX\\"\u79fb\u9664\u6240\u6709\u3002","invalid-liquidity":"\u65e0\u6548\u6d41\u52a8\u6027!","multiplier":"\u4e58\u6570","multiplier-tip":"\u4e58\u6570\u4ee3\u8868\u6bcf\u4e2atoken\u7528\u4f5c\u4fdd\u8bc1\u91d1\u65f6\u7684\u6298\u7b97\u6bd4\u4f8b\uff08\u7528\u4e8e\u8ba1\u7b97\u6709\u6548\u4fdd\u8bc1\u91d1\uff09\\n\u5982\uff1a\u6dfb\u52a01\u4e2aB1 toekn\u4f5c\u4e3a\u4fdd\u8bc1\u91d1\uff0c\u4e58\u6570\u4e3a0.8\uff0c\u6709\u6548\u4fdd\u8bc1\u91d1\u4e3a0.8","v2_lite":"\u521b\u65b0\u533a","v2":"\u4e3b\u533a"}')},596:function(e){e.exports=JSON.parse('{"balance-in-contract":"\u5408\u7ea6\u4f59\u989d","dynamic-balance":"\u52a8\u6001\u4f59\u989d","available-balance":"\u53ef\u7528\u4f59\u989d","dynamic-effective-balance":"\u52a8\u6001\u6709\u6548\u4f59\u989d","transaction-fee":"\u4ea4\u6613\u8d39","my-position":"\u4ed3\u4f4d","index":"\u6307\u6570\u4ef7\u683c","funding":"\u65e5\u8d44\u91d1\u8d39\u7387"}')},597:function(e){e.exports=JSON.parse('{"total-net-position":"\u603b\u51c0\u4ed3\u4f4d","min":"\u5206\u949f","hour":"\u5c0f\u65f6","day":"\u5929","week":"\u5468","current-position":"\u5f53\u524d\u4ed3\u4f4d","trade-history":"\u4ea4\u6613\u8bb0\u5f55","pool-total-liquidity":"\u6c60\u603b\u6d41\u52a8\u6027","position-info":"\u4ed3\u4f4d\u4fe1\u606f"}')},598:function(e){e.exports=JSON.parse('{"team":"\u56e2\u961f","deri-protocol":"DERI \u534f\u8bae","team-describe":"Deri\u534f\u8bae\u7531Defi Factory\u8bbe\u8ba1\u5f00\u53d1\uff0cDefi Factory\u56e2\u961f\u7531\u91d1\u878d\u3001\u6570\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u5bb6\u7ec4\u6210\u3002\u6838\u5fc3\u6210\u5458\u62e5\u6709\u79d1\u5b66\u535a\u58eb\u5b66\u4f4d\uff0c\u5e76\u4e14\u4ece\u4e8b\u534e\u5c14\u8857\u7684\u884d\u751f\u54c1\u4e1a\u52a1\u3002\u56e2\u961f\u5728\u884d\u751f\u54c1\u5b9a\u4ef7/\u4ea4\u6613/\u6784\u5efa\u65b9\u9762\u6709\u7740\u8d44\u6df1\u7684\u7ecf\u9a8c\u3002\u56e2\u961f\u6210\u5458\u4ece\u4e8b\u52a0\u5bc6\u4ea4\u6613\u548csolidity\u7f16\u7a0b\u5df2\u6709\u6570\u5e74\u3002","ceo":"0xAlpha","co-founder-and-ceo":"\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98","ceo-school":"\u5317\u4eac\u5927\u5b66\u7269\u7406\u5b66\u58eb\uff0c\u83b1\u65af\u5927\u5b66\u7269\u7406\u535a\u58eb","ceo-worked":"\u66fe\u5728\u534e\u5c14\u8857\u5fb7\u610f\u5fd7\u94f6\u884c\u3001HBK\u5bf9\u51b2\u57fa\u91d1\u3001\u9ad8\u76db\u4ece\u4e8b\u884d\u751f\u54c1\u5b9a\u4ef7/\u4ea4\u6613/\u7ed3\u6784/\u98ce\u9669\u7ba1\u7406\u5de5\u4f5c","ceo-worked-one":"\u66fe\u5728\u534e\u5c14\u8857\u5fb7\u610f\u5fd7\u94f6\u884c\u3001HBK\u5bf9\u51b2\u57fa","ceo-worked-two":"\u91d1\u3001\u9ad8\u76db\u4ece\u4e8b\u884d\u751f\u54c1\u5b9a\u4ef7/\u4ea4\u6613/\u7ed3\u6784/","ceo-worked-three":"\u98ce\u9669\u7ba1\u7406\u5de5\u4f5c","c-f-a-qu-he-fund-fo-on-tr-and-cr-de":"\u8054\u5408\u521b\u7acb\u4e86\u4e13\u6ce8\u4e8e\u4f20\u7edf\u548c\u52a0\u5bc6\u884d\u751f\u54c1\u7684\u91cf\u5316\u5bf9\u51b2\u57fa\u91d1","ceo-twitter":"\u63a8\u7279","cto":"Richard","co-founder-and-cto":"\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6280\u672f\u5b98","cto-school":"\u5317\u4eac\u5927\u5b66\u7269\u7406\u5b66\u58eb\uff0c\u7ebd\u7ea6\u5e02\u7acb\u5927\u5b66\u7269\u7406\u535a\u58eb","cto-worked":"\u66fe\u4efb\u91cf\u5316\u4ea4\u6613\u7b56\u7565\u603b\u76d1\uff0c\u8d1f\u8d23\u9ad8\u9891\u4ea4\u6613\u3001\u52a8\u91cf\u4ea4\u6613\u3001\u7edf\u8ba1\u5957\u5229\u7684\u7b56\u7565\u5236\u5b9a","cto-good-at-language":"C++ /Python\u91d1\u878d\u7cfb\u7edf\u5f00\u53d1\u4e13\u5bb6","cto-ex-of-so-vy-pr-and-sm-con-dev":"solidity/vyper\u7f16\u7a0b\u548c\u667a\u80fd\u5408\u7ea6\u5f00\u53d1\u4e13\u5bb6","jason":"Jason","jason-school":"\u534e\u76db\u987f\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u58eb","jason-worked":"AMD\u4e9a\u9a6c\u900a\u524d\u8f6f\u4ef6\u5de5\u7a0b\u5e08","jason-er-inv":"\u65e9\u671f\u52a0\u5bc6\u6295\u8d44\u8005","jason-co-fo-of-a-cr-ma-se-ag":"\u52a0\u5bc6\u5e02\u573a\u670d\u52a1\u673a\u6784\u8054\u5408\u521b\u59cb\u4eba","janice":"Janice","janice-school":"\u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u7ba1\u7406\u5b66\u5b66\u58eb","janice-degree":"\u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u7ba1\u7406\u5b66\u7855\u58eb","janice-worked":"\u5728\u666e\u534e\u6c38\u9053\u4e2d\u56fd\u62c5\u4efb\u98ce\u9669\u7ba1\u7406\u9ad8\u7ea7\u7ecf\u740611\u5e74","janice-t-and-ha-ye-ex-at-ve-op":"\u4e24\u5e74\u534a\u7684\u552f\u94fe\u8fd0\u8425\u7ecf\u9a8c"}')},601:function(e,t,n){"use strict";n.r(t);var i=n(1),a=n.n(i),r=n(73),s=n.n(r),o=n(147),u=n(50),l=n(105),p=n(106),c=n(44),d=n(151),y=n(16),m=Object(p.a)((function(){return Promise.all([n.e(3),n.e(12)]).then(n.bind(null,748))})),b=Object(p.a)((function(){return Promise.all([n.e(3),n.e(13)]).then(n.bind(null,747))}));function f(e){var t=e.loading,n=Object(i.useState)(!1),a=Object(u.a)(n,2),r=a[0],s=a[1];return Object(i.useEffect)((function(){return s(t.isShowMask),function(){}}),[t.isShowMask]),Object(y.jsx)(d.a,{modalIsOpen:r,overlay:{background:"none"}})}var g=Object(c.b)("loading")(Object(c.c)(f));var h=Object(c.b)("intl","loading")(Object(c.c)((function(e){var t=e.intl,n=e.loading;return l.isBrowser?Object(y.jsxs)(y.Fragment,{children:[Object(y.jsx)(g,{}),Object(y.jsx)(m,{locale:t.locale})]}):l.isMobile?Object(y.jsxs)(y.Fragment,{children:[Object(y.jsx)(g,{}),Object(y.jsx)(b,{locale:t.locale,children:Object(y.jsx)(f,{loading:n})})]}):void 0}))),T=(n(284),n(51)),v=n(3),w=n.n(v),k=n(9),I=n(4),A=n(5),S=n(15),E=n(103),M=n(33),x=n(2),O=function(){function e(){var t=this;Object(I.a)(this,e),this.detail={},this.supportWeb3=function(){return!!window.ethereum},this.isConnected=function(){return!!t.detail.account},this.approve=function(){var e=Object(k.a)(w.a.mark((function e(n,i){var a;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.detail.chainId){e.next=5;break}return e.next=3,Object(S.W)(t.detail.chainId,n,t.detail.account,i);case 3:return a=e.sent,e.abrupt("return",a);case 5:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),this.connect=Object(k.a)(w.a.mark((function e(){var n;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(S.g)();case 2:return n=e.sent,e.abrupt("return",new Promise(function(){var e=Object(k.a)(w.a.mark((function e(i,a){var r,s,o;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n.success){e.next=8;break}return r=n.chainId,s=n.account,e.next=4,t.loadWalletBalance(r,s);case 4:o=e.sent,i(o),e.next=9;break;case 8:a(null);case 9:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()));case 4:case"end":return e.stop()}}),e)}))),this.switchNetwork=function(){var e=Object(k.a)(w.a.mark((function e(n){var i,a;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.isConnected()||t.connect(),i=E[S.a.get()].chainInfo,a="0x".concat(parseInt(n.id).toString(16)),n=i[parseInt(n.id)],e.prev=4,e.next=7,window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:a}]});case 7:e.next=20;break;case 9:if(e.prev=9,e.t0=e.catch(4),4902!==e.t0.code){e.next=20;break}return e.prev=12,e.next=15,window.ethereum.request({method:"wallet_addEthereumChain",params:[Object(T.a)({chainId:a},n.metamask)]});case 15:e.next=20;break;case 17:e.prev=17,e.t1=e.catch(12),console.error("err",e.t1);case 20:case"end":return e.stop()}}),e,null,[[4,9],[12,17]])})));return function(t){return e.apply(this,arguments)}}(),this.loadWalletBalance=function(){var e=Object(k.a)(w.a.mark((function e(n,i){var a,r,s,o;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(S.H)(n,i).catch((function(e){return console.log("wallet account is not exist")}));case 2:return a=e.sent,r={chainId:n,account:i,balance:a,formatBalance:Object(M.e)(a)},s=S.a.get(),(o=E[s].chainInfo)[n]&&(Object.assign(r,Object(T.a)(Object(T.a)({},o[n]),{},{supported:!0})),Object(M.n)(o[n])),t.setDetail(r),e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),this.get=function(){return t.detail},Object(x.n)(this,{detail:x.p,setDetail:x.f,supportV2:x.g,supportV1:x.g,supportAllVersion:x.g,supportChain:x.g,supportInnocation:x.g})}return Object(A.a)(e,[{key:"isApproved",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n){var i;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.detail.chainId||!this.supportChain){e.next=7;break}return e.next=3,Object(S.M)(this.detail.chainId,t,this.detail.account,n).catch((function(e){return console.error("load approve error")}));case 3:return i=e.sent,this.detail.isApproved=i,this.setDetail(this.detail),e.abrupt("return",i);case 7:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"setDetail",value:function(e){this.detail=e}},{key:"refresh",value:function(){this.loadWalletBalance(this.detail.chainId,this.detail.account)}},{key:"supportV2",get:function(){return this.detail.supportV2}},{key:"supportV1",get:function(){return this.detail.supportV1}},{key:"supportAllVersion",get:function(){return this.detail.supportV1&&this.detail.supportV2}},{key:"supportChain",get:function(){return this.detail.supported}},{key:"supportInnovation",get:function(){return this.detail.supportInnovation}}]),e}(),D=n(101),C=n.n(D),P=function(){function e(){Object(I.a)(this,e),this.symbol="BTCUSD",this.timeType="min",this.index=0,this.kData=[],this.ws=null,this.paused=!1,this.listeners={},this.already=!1,Object(x.n)(this,{index:x.p,kData:x.p,setIndex:x.f})}return Object(A.a)(e,[{key:"initWebSocket",value:function(){var e=this;null===this.ws&&(this.ws=new C.a("wss://oracle4.deri.finance",{transports:["websocket"],withCredentials:!0}),this.ws.on("connect",(function(){e.already&&(e.ws.emit("get_kline_update",{symbol:e.symbol,time_type:e.timeType}),console.log("ws is reconnected already")),console.log("ws is already connected")})))}},{key:"load",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"min";this.initWebSocket(),this.ws.on("kline_update",(function(e){var n={},i=e.time;if(e.symbol.toUpperCase()===t.symbol.toUpperCase()&&(n.time=i,n.low=Number(e.low),n.high=Number(e.high),n.open=Number(e.open),n.close=Number(e.close),n.volume=Number(e.volume),n.time_type=e.time_type,n.symbol=e.symbol,!t.paused)){t.setIndex(n.close);for(var a=0,r=Object.keys(t.listeners);a<r.length;a++){var s=r[a];"function"===typeof t.listeners[s]&&t.listeners[s](n)}}})),e!==this.symbol&&this.unsubscribeBars(this.symbol),this.setSymbol(e),this.setTimeType(n),this.ws.emit("get_kline_update",{symbol:this.symbol,time_type:this.timeType}),this.already=!0}},{key:"addListener",value:function(e,t){this.listeners[e]||(this.listeners[e]=t)}},{key:"unsubscribeBars",value:function(e){this.ws&&this.ws.emit("un_get_kline_update",{symbol:e,time_type:"min"})}},{key:"loadHistory",value:function(e,t,n){this.ws.on("kline_history",(function(e){var t=e.map((function(e){return{time:e.time,low:Number(e.low),high:Number(e.high),open:Number(e.open),close:Number(e.close),volume:Number(e.volume)}}));n&&(console.log("history ->",t[t.length-1].time),n(t))})),this.ws.emit("get_kline",{symbol:e,time_type:t,bars:1e3})}},{key:"resume",value:function(){this.setPause(!1)}},{key:"pause",value:function(){this.setPause(!0)}},{key:"setIndex",value:function(e){this.paused||(this.index=e)}},{key:"setSymbol",value:function(e){this.symbol=e}},{key:"setTimeType",value:function(e){this.timeType=e}},{key:"setPause",value:function(e){this.paused=e}}]),e}(),R=function(){function e(){Object(I.a)(this,e),this.callback=function(){},this.wallet=null,this.spec=null,this.mockPositionInfo={averageEntryPrice:"",liquidationPrice:"",margin:"20000",marginHeld:"10068.26538",marginHeldBySymbol:"293.16152",unrealizedPnl:"3.1311",volume:"800"}}return Object(A.a)(e,[{key:"load",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n,i){var a;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t&&t.isConnected()&&t.supportChain&&n&&n.pool)){e.next=7;break}return e.next=3,Object(S.A)(t.detail.chainId,n.pool,t.detail.account,n.symbolId);case 3:return(a=e.sent)&&i&&i(a),this.start(t,n,i),e.abrupt("return",a);case 7:case"end":return e.stop()}}),e,this)})));return function(t,n,i){return e.apply(this,arguments)}}()},{key:"start",value:function(e,t,n){var i=this;null!==this.interval&&clearInterval(this.interval),this.interval=window.setInterval((function(){return i.load(e,t,n)}),3e3),e&&(this.wallet=e),t&&(this.spec=t),n&&(this.callback=n)}},{key:"pause",value:function(){clearInterval(this.interval),this.interval=null}},{key:"resume",value:function(e,t,n){this.start(e,t,n||this.callback)}}]),e}(),B=n(21),j=n(32);class F{constructor(){this.info={bTokenSymbol:"BUSD",symbol:"BTCUSD",multiplier:"0.0001",fundingRateCoefficient:"0.0000025",minInitialMarginRatio:.1,minMaintenanceMarginRatio:.05,feeRatio:5e-4,bTokenSymbolDisplay:["BUSD"]}}async load(e,t){if(e&&e.supportChain&&t&&t.pool!==this.info.pool){const n=await Object(S.C)(e.detail.chainId,t.pool,t.symbolId);n.bTokenSymbolDisplay=this.bTokenSymbolDisplay(n),this.setInfo(n)}return this.info}setInfo(e){this.info=e}bTokenSymbolDisplay(e){if(j.a.isV1||j.a.isV2Lite)return[e.bTokenSymbol];const{bTokenSymbol:t=[],bTokenMultiplier:n=[]}=e;return t instanceof Array&&t.map(((e,t)=>`<span class='btoken-symbol'>${e}(<span class='multiplier' title='${B.a.get("lite","multiplier-tip")}'>${n[t]}x</span>)</span>`))}}var N=function(){function e(){Object(I.a)(this,e)}return Object(A.a)(e,[{key:"load",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n){var i;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t&&t.supportChain&&t.detail.chainId&&n&&n.pool)){e.next=7;break}return e.next=3,Object(S.D)(t.detail.chainId,n.pool,t.detail.account,n.symbolId);case 3:return i=e.sent,e.abrupt("return",i);case 7:return e.abrupt("return",[]);case 8:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()}]),e}(),q=n(257),L=function(){function e(){Object(I.a)(this,e),this.version=null,this.wallet=null,this.configs=[],this.config=null,this.index="",this.volume="",this.paused=!1,this.slideIncrementMargin=0,this.position={},this.contract={},this.fundingRate={},this.history=[],this.userSelectedDirection="long",this.supportChain=!0,Object(x.o)(this,{index:x.p,volume:x.p,slideIncrementMargin:x.p,fundingRate:x.p,position:x.p,history:x.p,contract:x.p,userSelectedDirection:x.p,supportChain:x.p,setWallet:x.f,setConfigs:x.f,setConfig:x.f,setIndex:x.f,setContract:x.f,setPosition:x.f,setVolume:x.f,setUserSelectedDirection:x.f,setFundingRate:x.f,setHistory:x.f,setSlideMargin:x.f,amount:x.g,fundingRateTip:x.g,direction:x.g,volumeDisplay:x.g,isNegative:x.g,isPositive:x.g}),this.configInfo=new q.a,this.oracle=new P,this.positionInfo=new R,this.contractInfo=new F,this.historyInfo=new N}return Object(A.a)(e,[{key:"init",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n,i){var a,r,s,o;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.configInfo.load(n);case 2:if(a=e.sent,!t.isConnected()){e.next=11;break}this.setWallet(t),this.setConfigs(a.filter((function(e){return Object(M.c)(t.detail.chainId,e.chainId)}))),(r=this.getDefaultConfig(this.configs,t))||(r=a.length>0?a[0]:{}),this.setConfig(r),e.next=18;break;case 11:if(t.isConnected()&&t.supportWeb3()){e.next=18;break}return n.setCurrent("v2"),e.next=15,this.configInfo.load(n);case 15:s=e.sent,o=s.find((function(e){return"BTCUSD"===e.symbol})),this.setConfig(o);case 18:this.loadByConfig(this.wallet,this.config,!0,i),this.setVolume("");case 20:case"end":return e.stop()}}),e,this)})));return function(t,n,i){return e.apply(this,arguments)}}()},{key:"onSymbolChange",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n){var i,a;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=this.configs.find((function(e){return e.pool===t.pool&&e.symbolId===t.symbolId})),a=j.a.isV1?t.pool!==this.config.pool:t.symbolId!==this.config.symbolId,this.onChange(i,a,n);case 3:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"onChange",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n,i){return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t&&(this.pause(),this.setConfig(t),this.loadByConfig(this.wallet,t,n,i),n&&this.store(t),this.resume(),this.setVolume(""));case 1:case"end":return e.stop()}}),e,this)})));return function(t,n,i){return e.apply(this,arguments)}}()},{key:"loadByConfig",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n,i,a){var r,s=this;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i&&n&&(r=Object(M.g)(n.symbol),this.oracle.unsubscribeBars(r),this.oracle.addListener("trading",(function(e){s.setIndex(e.close)})),this.oracle.load(r)),t&&t.isConnected&&n?Promise.all([this.positionInfo.load(t,n,(function(e){return s.setPosition(e)})),this.contractInfo.load(t,n),this.loadFundingRate(t,n),this.historyInfo.load(t,n)]).then((function(e){4===e.length&&(e[0]&&s.setIndex(e[0].price)&&s.setPosition(e[0]),e[1]&&s.setContract(e[1]),e[2]&&s.setFundingRate(e[2]),e[3]&&s.setHistory(e[3]))})).finally((function(e){a&&a()})):a&&a();case 2:case"end":return e.stop()}}),e,this)})));return function(t,n,i,a){return e.apply(this,arguments)}}()},{key:"getDefaultConfig",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,n=null;if(e.length>0){var i=this.getFromStore();if(i&&Object(M.c)(t.detail.chainId,i.chainId)&&(n=i),n){var a=e.findIndex((function(e){return e.pool===n.pool}));-1===a&&(n=e[0])}else n=e[0]}return n}},{key:"store",value:function(e){Object(M.o)(j.a.current,e)}},{key:"getFromStore",value:function(){return Object(M.f)(j.a.current)}},{key:"syncFundingRate",value:function(){var e=Object(k.a)(w.a.mark((function e(){var t;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.loadFundingRate(this.wallet,this.config);case 2:(t=e.sent)&&this.setFundingRate(t);case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"refresh",value:function(){var e=Object(k.a)(w.a.mark((function e(){var t,n,i=this;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.pause(),e.next=3,this.positionInfo.load(this.wallet,this.config,function(){var e=Object(k.a)(w.a.mark((function e(t){return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i.setPosition(t),i.syncFundingRate();case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}());case 3:return(t=e.sent)&&this.setPosition(t),this.syncFundingRate(),this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account),e.next=9,this.historyInfo.load(this.wallet,this.config);case 9:(n=e.sent)&&this.setHistory(n),this.setVolume(""),this.resume();case 13:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"pause",value:function(){this.setPaused(!0),this.oracle.pause(),this.positionInfo.pause()}},{key:"resume",value:function(){this.setPaused(!1),this.oracle.resume(),this.positionInfo.resume(this.wallet,this.config)}},{key:"setWallet",value:function(e){this.wallet=e}},{key:"setConfigs",value:function(e){this.configs=e}},{key:"setConfig",value:function(e){this.config=e}},{key:"setIndex",value:function(e){this.index=e}},{key:"setPosition",value:function(e){e&&(this.position=e)}},{key:"setContract",value:function(e){this.contract=e}},{key:"setHistory",value:function(e){this.history=e}},{key:"setFundingRate",value:function(e){this.fundingRate=e}},{key:"setVolume",value:function(e){this.volume=e}},{key:"setPaused",value:function(e){this.paused=e}},{key:"setUserSelectedDirection",value:function(e){this.userSelectedDirection=e}},{key:"setSlideMargin",value:function(e){if(""!==e){this.slideIncrementMargin=e;var t=this.position,n=t.price||this.index,i=(e-t.marginHeld)/(n*this.contract.multiplier*this.contract.minInitialMarginRatio);this.setVolume(i.toFixed(0))}}},{key:"volumeDisplay",get:function(){return 0===Math.abs(this.volume)||""===this.volume||"-"===this.volume||"e"===this.volume||isNaN(this.volume)?"":Math.abs(this.volume)}},{key:"amount",get:function(){var e=this.position,t=this.contract,n=""===this.volume||isNaN(this.volume)?0:Math.abs(this.volume),i=e.margin,a=e.marginHeldBySymbol,r=e.marginHeld,s=e.unrealizedPnl,o=e.price||this.index,u=Object(S.e)(r).minus(a);u=u.isNaN()?Object(S.e)(0):u;var l=n*o*t.multiplier*t.minInitialMarginRatio,p=Object(S.e)(r);this.isPositive&&"short"===this.userSelectedDirection||this.isNegative&&"long"===this.userSelectedDirection?((p=p.minus(l)).lt(u)&&(p=u.plus(u.minus(p).abs())),a=Object(S.e)(a).minus(l).abs().toFixed(2)):(p=Object(S.e)(r).plus(l),a&&(a=Object(S.e)(a).plus(l).toFixed(2)));var c=i&&Object(S.e)(i).plus(s).toFixed(2);p=p.gt(c)?c:p.toFixed(2),a&&(a=+a>+c?c:(+a).toFixed(2));var d=Object(S.e)(c).minus(p).toFixed(2),y=Object(S.e)(n).multipliedBy(t.multiplier).toFixed(4),m=("short"===this.userSelectedDirection?-this.volumeDisplay+ +e.volume:+this.volumeDisplay+ +e.volume)*o*t.multiplier,b=Math.abs(m/+c).toFixed(1);return d=+d<0?0:d,{volume:this.volume,dynBalance:c,margin:p,available:d,exchanged:y,currentSymbolMarginHeld:a,leverage:b}}},{key:"direction",get:function(){if(""!==this.margin){if(+this.position.volume>0)return Math.abs(this.volume)>Math.abs(this.position.volume)?"long":"short";if(+this.position.volume<0)return+this.volume>Math.abs(+this.position.volume)?"short":"long"}return 0}},{key:"isPositive",get:function(){return Object(S.e)(this.position.volume).gt(0)}},{key:"isNegative",get:function(){return Object(S.e)(this.position.volume).isNegative()}},{key:"loadFundingRate",value:function(){var e=Object(k.a)(w.a.mark((function e(t,n){var i,a;return w.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n){e.next=7;break}if(i=t&&t.isConnected()&&t.supportChain?t.detail.chainId:n.chainId,!n){e.next=7;break}return e.next=5,Object(S.q)(i,n.pool,n.symbolId).catch((function(e){return console.error("getFundingRate was error,maybe network is wrong")}));case 5:return a=e.sent,e.abrupt("return",a);case 7:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"fundingRateTip",get:function(){if(j.a&&j.a.isV2){if(this.fundingRate&&this.fundingRate.fundingRatePerBlock&&this.config)return"zh"===B.a.locale?"".concat(B.a.get("lite","funding-rate-per-block")," = ").concat(this.fundingRate.fundingRatePerBlock)+"\n ".concat(B.a.get("lite","per-block")," ").concat(B.a.get("lite","1-long-contract-pays-1-short-contract")," (").concat(this.fundingRate.fundingRatePerBlock," * ").concat(B.a.get("lite","index-price-camelize")," * ").concat(this.contract.multiplier," ) ").concat(this.config.bTokenSymbol):"".concat(B.a.get("lite","funding-rate-per-block")," = ").concat(this.fundingRate.fundingRatePerBlock)+"\n".concat(B.a.get("lite","1-long-contract-pays-1-short-contract")," (").concat(this.fundingRate.fundingRatePerBlock," * ").concat(B.a.get("lite","index-price-camelize")," * ").concat(this.contract.multiplier," ) ").concat(this.config.bTokenSymbol," ").concat(B.a.get("lite","per-block"))}else if(this.fundingRate&&this.fundingRate.fundingRatePerBlock&&this.config)return"zh"===B.a.locale?"".concat(B.a.get("lite","funding-rate-per-block")," = ").concat(this.fundingRate.fundingRatePerBlock)+"\n".concat(B.a.get("lite","per-block")," ").concat(B.a.get("lite","1-long-contract-pays-1-short-contract")," ").concat(this.fundingRate.fundingRatePerBlock," ").concat(this.config.bTokenSymbol," "):"".concat(B.a.get("lite","funding-rate-per-block")," = ").concat(this.fundingRate.fundingRatePerBlock)+"\n".concat(B.a.get("lite","1-long-contract-pays-1-short-contract")," ").concat(this.fundingRate.fundingRatePerBlock," ").concat(this.config.bTokenSymbol," ").concat(B.a.get("lite","per-block"),")");return""}}]),e}(),_=new(function(){function e(){Object(I.a)(this,e),this.isLoading=!1,Object(x.o)(this,{isLoading:x.p,setIsLoading:x.f,loading:x.f,isShowMask:x.g})}return Object(A.a)(e,[{key:"setIsLoading",value:function(e){this.isLoading=e}},{key:"loading",value:function(){this.setIsLoading(!0)}},{key:"loaded",value:function(){this.setIsLoading(!1)}},{key:"isShowMask",get:function(){return!0===this.isLoading}}]),e}()),U=new O,V=new L;S.a.set("prod"),S.a.set("prod"),s.a.render(Object(y.jsx)(a.a.StrictMode,{children:Object(y.jsx)(o.a,{children:Object(y.jsx)(c.a,{wallet:U,trading:V,version:j.a,intl:B.a,loading:_,children:Object(y.jsx)(h,{})})})}),document.getElementById("root"))},88:function(e){e.exports=JSON.parse('{"en":"English","zh":"\u4e2d\u6587(\u7b80\u4f53)","de":"Deutsch"}')}},[[601,10,11]]]);
//# sourceMappingURL=main.30738aa5.chunk.js.map