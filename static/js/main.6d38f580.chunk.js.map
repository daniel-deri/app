{"version":3,"sources":["lib/web3js/v2/utils/api.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/v2/contract/v2_lite/p_token.js","lib/web3js/v2/contract/v2_lite/perpetual_pool.js","lib/web3js/v2/contract/v2_lite/l_token.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/factory/v2/index.js","lib/web3js/v2/factory/v2_lite/index.js","lib/web3js/v2/api/v2/mining_query_api.js","lib/web3js/v2/api/v2/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/v2/trade_query_api.js","lib/web3js/v2/api/v2/trade_transaction_api.js","lib/web3js/v2/api/v2_lite/mining_query_api.js","lib/web3js/v2/api/v2_lite/mining_transaction_api.js","lib/web3js/v2/api/v2_lite/trade_query_api.js","lib/web3js/v2/api/v2_lite/trade_transaction_api.js","lib/web3js/v2/api/v2/trade_history_api.js","lib/web3js/v2/api/v2_lite/trade_history_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/v2/api/activity_api.js","lib/web3js/factory/web3.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/contract/perpetual_pool_lite_viewer.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","lib/web3js/config/rest_server.js","lib/web3js/indexV2.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/utils.js","lib/web3js/v2/factory/shared.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","model/Intl.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/config/oracle.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","model/Version.js","utils/utils.js","lib/web3js/api/contractQueryApi.js","../lang).)*/.json$","lib/web3js/v2/config/pool.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js","lib/web3js/v2/config/chain.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/config/config.js","lib/web3js/config/env.js","lib/web3js/v2/config/broker.js","lib/web3js/v2/factory/web3.js","lib/web3js/v2/contract/oracle/woo_oracle.js","lib/web3js/v2/contract/oracle/chainlink_oracle.js","lib/web3js/v2/contract/oracle/wrapped_oracle.js","lib/web3js/v2/contract/oracle/offchain_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/ptoken_airdrop.js","lib/web3js/v2/contract/b_token.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/contract/v2/perpetual_pool.js","lib/web3js/v2/contract/v2/perpetual_pool_router.js","lib/web3js/v2/contract/v2/l_token.js","lib/web3js/v2/contract/v2/p_token.js"],"names":["catchApiError","func","args","methodName","defaultValue","a","res","console","log","catchTxApiError","result","success","transaction","error","MAX_GAS_AMOUNT","Contract","chainId","contractAddress","contractAbi","isProvider","this","web3","web3Factory","metaMaskWeb3","contract","eth","accountAddress","poolAddress","method","retry","_init","methods","call","toString","includes","Error","gas","i","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","to","Web3","utils","numberToHex","value","data","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","POOL_ABI","PerpetualPool","_call","bg","cumuFundingRate","deriToNatural","cumuFundingRateBlock","liquidity","tradersNetVolume","tradersNetCost","multiplier","feeRatio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","getOracleInfo","oracle","signed","timestamp","price","v","r","s","getBTCUSDPrice","getStateValues","getParameters","args1","hasInvalidArgsValue","fundingRate","fundingRatePerBlock","calculateFundingRate","processFundingRate","args2","liquidityUsed","calculateLiquidityUsed","poolMarginRatio","amount","_transactPool","blockNumber","getBlock","eventName","filter","fromBlock","events","getPastEvents","toBlock","es","e","push","volume","abs","times","CONTRACT_ABI","BTokenContract","allowance","gt","_transact","MAX_VALUE","address","all","_balance","decimals","PTokenContract","cost","lastCumuFundingRate","margin","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","providers","HttpProvider","providerUrl","getLatestRPCServer","getDBProviderUrlsConfig","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","MiningVaultRouter","SlpPool","naturalToDeri","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","getDeriContractAddress","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddressConfig","DeriEnv","get","key","Object","keys","database","databaseWormholeFactory","getDBWormholeAddressConfig","databaseAirdropFactory","getDBAirdropAddressConfig","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","bTokenFactory","bTokenInstanceMap","bToken","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","miningVaultPoolFactory","mVaultInstanceMap","mVault","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","processPosition","lastCumulativeFundingRate","PTokenLite","pTokenLiteAbi","tokenId","symbolId","Array","isArray","owner","operator","ContractBase","PerpetualPoolLite","perpetualPoolLiteAbi","config","getPoolConfig","undefined","offchainSymbolIds","offchainSymbols","bTokenAddress","lTokenAddress","pouterAddress","liquidatorQualifierAddress","protocolFeeCollector","getAddresses","pTokenAddress","viewerAddress","getPoolViewerConfig","getActiveSymbolIds","PerpetualPoolLiteViewer","getOffChainOracleSymbols","activeSymbolIds","activeSymbols","reduce","acc","index","concat","protocolFeeCollectRatio","symbol","oracleAddress","cumulativeFundingRate","_updateOffchainSymbols","prices","length","getPriceInfos","priceInfos","values","p","indexOf","_getSymbolPrices","newVolume","LTokenLite","constructor","super","lTokenLiteAbi","calculateEntryPrice","eq","div","calculateLiquidationPrice","dynamicCost","tmp","minus","plus","max","isOrderValid","marginHeld","minMargin","gte","calculateTxFee","validateArgs","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","bTokens","accum","b","discount","pnl","isBToken0RatioValid","bTokenId","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","totalCost","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","min","factory","klass","instances","perpetualPoolRouterFactory","PerpetualPoolRouter","LToken","PToken","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","getLiquidityInfo","async","getPoolConfig2","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","promises","getSymbol","totalPnl","restLiquidity","poolLiquidity","lastCumulativePnl","maxRemovableShares","calculateMaxRemovableLiquidity","approximatePnl","cumulativePnl","shares","err","getPoolLiquidity","db","getValues","catch","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","addLiquidity","router","routerAddress","perpetualPoolRouter","minBToken0Ratio","validation","removeLiquidity","isMaximum","priceCache","_prices","split","set","val","isNaN","parseFloat","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getPoolBTokenList","symbolInfo","bTokenDiscounts","map","bTokenSymbol","bTokenMultiplier","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","getOraclePrice","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","bTokenInfoList","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","orderValidation","trade","closePosition","negated","_getLiquidityInfo","symbolIds","getLiquidity","totalSupply","poolDynamicEquity","getMargin","priceIndex","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","returnValues","item","unshift","getTradeHistory","tradeFromBlock","tradeHistory","resp","fetch","url","json","fetchJson","getRestServerConfig","tradeHistoryBlock","trim","tradeHistoryOnline","sort","initialBlock","getBlockInfo","baseToken","account","setBroker","brokerAddress","normalizeChainId","normalizeAddress","getBrokerConfig","brokerManagerAddress","brokerManager","brokerManagerFactory","getAirdropPTokenAddress","airdropPToken","pTokenAirdropFactory","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","web3Instance","web3InstanceMap","getChainProviderUrl","env","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","duration","Number","MAX_SAFE_INTEGER","startTime","urls","blockNumbers","findIndex","startsWith","getChainProviderUrls","getDailyBlockNumberConfig","position","getStorageAt","hexToNumber","getOracleUrl","addSymbolParam","toLowerCase","getPriceInfo","mapToSymbolInternal","mode","ok","priceInfo","JSON","stringify","headers","Accept","body","RestOracle","getPrice","version","getOracleConfig","oracleFactory","decimal","perpetualPoolLiteViewerAbi","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getChainIds","getChainProviderUrlsConfig","provider_urls","getContractAddressConfig","pool","dToken","MiningVault","unit","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","state","modalIsOpen","className","overlayMerged","assign","mergedStyle","isOpen","style","portalClassName","intl","locale","onClose","inject","observer","data-title","process","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","offchainOracleAbi","brokerManagerAbi","bTokenLiteAbi","pTokenAirdropAbi","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getLpContractAddress","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","c","isV2","total","cur","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","lte","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","toFixed","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","some","getPoolContractAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","deriAddress","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","getOracleUrl2","getOracleInfo2","getBTCUSDPrice2","instanceMap","isUsedRestOracle","WrappedOracle","WooOracle","BToken","BrokerManager","PTokenAirdrop","getPoolConfigListV2","getContractAddressConfig2","getPoolVersion","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistory2","getTradeHistoryV2","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","require","forEach","path","lang","page","test","pageName","Intl","setLocale","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","isBrowser","isJsDom","userAgent","getOracleConfigList","getConfig","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","mapToSymbol","mapToBToken","oracles","filteredByChainId","pPool","maxWithdrawMargin","mintDToken","getUserInfoAll","userInfo","deadline","nonce","valid","miningVaultAddress","miningVault","freeze","mintDeri","databaseWormhole","signature","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","getLpPoolInfoApy","apy2","getUserInfoInPool","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","wsOnPromise","ws","event","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","getOrSet","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","makeAutoObservable","setCurrent","isV1","isV2Lite","switch","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","parameters","getUserWormholeSignature","getDeriBalance","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","expendPoolConfigV2","flat","expendPoolConfigV2Lite","getPoolConfigList","getFilteredPoolConfigList","poolConfigList","check","_getPoolConfig","find","bTokenCount","symbolCount","viewers","poolViewer","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","MaskWrapper","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode","MAX_UINT256","MAX_INT256","every","validateObjectKeyExist","keyList","valName","prop","validateIsArray","validateConfigV2","validateConfigV2Lite","processConfigV2Lite","getJsonConfig","jsonConfig","_deriEnv","getBrokerConfigList","_balanceOf","bTokenBalance","protocolFeeAccrued","getLengths","decimals0","swapperAddress","processAsset"],"mappings":"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","file":"static/js/main.6d38f580.chunk.js","sourcesContent":["export const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    //console.log('args', args, methodName, defaultValue)\n    // console.log(await func(...args))\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}:`, err)\n    //console.log(`${methodName}: ${err}`)\n  }\n  return defaultValue\n}\n\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n    this.isProvider = isProvider;\n  }\n  async _init() {\n    if (!this.web3) {\n      if (this.isProvider) {\n        this.web3 = await web3Factory(this.chainId);\n      } else {\n        this.web3 = metaMaskWeb3();\n      }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while(retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n      //this.web3.eth.getGasPrice(),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    await this._init()\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    // const [gas, gasPrice] = await Promise.all([\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\n    //   this.web3.eth.getGasPrice(),\n    // ]);\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    //console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getLatestRPCServer } from '../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"0x608060405234801561001057600080fd5b506040516112c63803806112c683398101604081905261002f91610066565b60008054336001600160a01b031991821617909155600380549091166001600160a01b039290921691909117905546600455610094565b600060208284031215610077578081fd5b81516001600160a01b038116811461008d578182fd5b9392505050565b611223806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b0509b1116100975780639a8a0592116100665780639a8a0592146101c85780639d76ea58146101d0578063b06faf62146101d8578063f77c4791146101e0576100f5565b80636b0509b114610185578063701422691461018d57806379a87b19146101a057806392eefe9b146101b5576100f5565b806351dfdb48116100d357806351dfdb4814610137578063560ebbd11461014a57806358c700a31461016a578063677528cb14610172576100f5565b806306fdde03146100fa57806320606b7014610118578063325564ec1461012d575b600080fd5b6101026101e8565b60405161010f9190610dbf565b60405180910390f35b610120610209565b60405161010f9190610d48565b61013561022d565b005b610135610145366004610bab565b6103a1565b61015d610158366004610ca1565b61066f565b60405161010f9190610d3d565b610120610684565b610135610180366004610bea565b61068a565b6101206107b1565b61013561019b366004610c15565b6107d5565b6101a8610acc565b60405161010f9190610cec565b6101356101c3366004610bab565b610adb565b610120610b77565b6101a8610b7d565b61015d610b8c565b6101a8610b9c565b6040518060400160405280600581526020016415985d5b1d60da1b81525081565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000546001600160a01b031633146102605760405162461bcd60e51b815260040161025790610f7f565b60405180910390fd5b600254600160a01b900460ff161561028a5760405162461bcd60e51b81526004016102579061106a565b6001541580159061029d57506001544210155b6102b95760405162461bcd60e51b815260040161025790610e12565b60035460025460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102f19291169060001990600401610d24565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610c81565b506002805460ff60a01b1916600160a01b17908190556001546040517fce3275b30d22151f82ee29ce7ea685563b66ff98e56afc576a94d8a88c676ec092610397929130916001600160a01b031690611153565b60405180910390a1565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156103f55760405162461bcd60e51b81526004016102579061106a565b6000816001600160a01b03166358c700a36040518163ffffffff1660e01b815260040160206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190610cb9565b90506000826001600160a01b03166379a87b196040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610bce565b905081158015906104ee5750814210155b61050a5760405162461bcd60e51b815260040161025790610ec5565b6001600160a01b03811630146105325760405162461bcd60e51b815260040161025790610fd5565b6003546040516370a0823160e01b81526001600160a01b03909116906323b872dd908590309084906370a082319061056e908590600401610cec565b60206040518083038186803b15801561058657600080fd5b505afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610cb9565b6040518463ffffffff1660e01b81526004016105dc93929190610d00565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610c81565b507f18ce2512842fddee8c808fb717780a66007d1da9a942dd32625813c82d53c34282843060405161066293929190611153565b60405180910390a1505050565b60056020526000908152604090205460ff1681565b60015481565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156106de5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b0382166107045760405162461bcd60e51b8152600401610257906110d3565b60038110158015610717575061016d8111155b6107335760405162461bcd60e51b815260040161025790610e68565b61074081620151806111a0565b61074a9042611188565b6001819055600280546001600160a01b0319166001600160a01b0385811691909117918290556040517fe2a3b7ba8269be3ca7ba4627f844bb9abd978e9b05d290dc89d4b107f9e3dda7936107a59390923092911690611153565b60405180910390a15050565b7f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb1281565b600254600160a01b900460ff16156107ff5760405162461bcd60e51b81526004016102579061106a565b8442111561081f5760405162461bcd60e51b815260040161025790610f1b565b604080518082018252600581526415985d5b1d60da1b6020918201526004549151600092610894927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866927f8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c79291309101610d7d565b60405160208183030381529060405280519060200120905060007f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb12898989896040516020016108e7959493929190610d51565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561092f5760405162461bcd60e51b815260040161025790610f52565b6000818152600560209081526040808320805460ff191660011790555161095a918591859101610cd1565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516109979493929190610da1565b6020604051602081039080840390855afa1580156109b9573d6000803e3d6000fd5b5050604051601f1901516000549092506001600160a01b0380841691161490506109f55760405162461bcd60e51b81526004016102579061111c565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610a27908e908e90600401610d24565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610c81565b508a6001600160a01b03167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef18b8b8b604051610ab793929190611172565b60405180910390a25050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b03163314610b055760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff1615610b2f5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b038116610b555760405162461bcd60e51b815260040161025790611024565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6003546001600160a01b031681565b600254600160a01b900460ff1681565b6000546001600160a01b031681565b600060208284031215610bbc578081fd5b8135610bc7816111d5565b9392505050565b600060208284031215610bdf578081fd5b8151610bc7816111d5565b60008060408385031215610bfc578081fd5b8235610c07816111d5565b946020939093013593505050565b600080600080600080600060e0888a031215610c2f578283fd5b8735610c3a816111d5565b9650602088013595506040880135945060608801359350608088013560ff81168114610c64578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215610c92578081fd5b81518015158114610bc7578182fd5b600060208284031215610cb2578081fd5b5035919050565b600060208284031215610cca578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610deb57858101830151858201604001528201610dcf565b81811115610dfc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526036908201527f5661756c742e617070726f76654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b60208082526039908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a2067726160408201527f636544617973206d75737420626520332d333635206461797300000000000000606082015260800190565b60208082526036908201527f5661756c742e657865637574654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b6020808252601e908201527f5661756c742e636c61696d3a207369676e617475726520657870697265640000604082015260600190565b6020808252601390820152725661756c742e636c61696d3a207265706c617960681b604082015260600190565b60208082526036908201527f4d696772617461626c652e5f636f6e74726f6c6c65725f3a2063616e206f6e6c6040820152753c9031b0b63632b210313c9031b7b73a3937b63632b960511b606082015260800190565b6020808252602f908201527f5661756c742e657865637574654d6967726174696f6e3a206e6f74206465737460408201526e696e6174696f6e206164647265737360881b606082015260800190565b60208082526026908201527f4d696772617461626c652e736574436f6e74726f6c6c65723a20746f2030206160408201526564647265737360d01b606082015260800190565b60208082526043908201527f4d696772617461626c652e5f76616c69645f3a2063616e6e6f742070726f636560408201527f65642c207468697320636f6e747261637420686173206265656e206d696772616060820152621d195960ea1b608082015260a00190565b60208082526029908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a20746f2060408201526830206164647265737360b81b606082015260800190565b60208082526019908201527f5661756c742e636c61696d3a20756e617574686f72697a656400000000000000604082015260600190565b9283526001600160a01b03918216602084015216604082015260600190565b9283526020830191909152604082015260600190565b6000821982111561119b5761119b6111bf565b500190565b60008160001904831182151516156111ba576111ba6111bf565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ea57600080fd5b5056fea2646970667358221220309376e66ca21a54581da8ded1f86303ca0c78bd47254d1bdb5fb101169baa2364736f6c63430008010033\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI['abi'],\n    //   this.contractAddress\n    // );\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\n//import { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","import { ContractBase } from '../contract_base'\nimport { pTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils/convert'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../contract_base'\nimport { perpetualPoolLiteAbi } from '../abis';\nimport { deriToNatural, naturalToDeri, getPriceInfo, getPriceInfos } from '../../utils'\n//import { MAX_INT256} from '../../config'\nimport { getPoolConfig } from '../../config';\nimport { PTokenLite } from './p_token';\nimport { PerpetualPoolLiteViewer } from '../perpetual_pool_lite_viewer';\nimport { getPoolViewerConfig } from '../../config/pool';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.offchainSymbols = this.config.offchainSymbols;\n    this.bTokenAddress = '';\n    this.lTokenAddress = '';\n    this.pouterAddress = '';\n    this.liquidatorQualifierAddress = '';\n    this.protocolFeeCollector = '';\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses()]);\n  }\n\n  async _updateOffchainSymbols() {\n    if (!this.pTokenAddress) {\n      await this.getAddresses()\n      const pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n      const viewerAddress = getPoolViewerConfig(this.chainId)\n      const [activeSymbolIds, activeSymbols] = await Promise.all([\n        pToken.getActiveSymbolIds(),\n        new PerpetualPoolLiteViewer(\n          this.chainId,\n          viewerAddress\n        ).getOffChainOracleSymbols(this.contractAddress),\n      ]);\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\n        return activeSymbols[index] == '' ? acc :  acc.concat([i])\n      }, [])\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\n      // console.log(\n      //   'offchainSymbolIds',\n      //   this.offchainSymbolIds,\n      //   this.offchainSymbols\n      // );\n    }\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\n    this.protocolFeeCollector = res.protocolFeeCollector;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n  async _getSymbolPrices() {\n    await this._updateOffchainSymbols()\n    let prices = []\n    if (this.offchainSymbolIds.length > 0) {\n      // const symbolNames = (\n      //   await Promise.all(\n      //     this.offchainSymbolIds.reduce(\n      //       (acc, i) => acc.concat([this.getSymbol(i)]),\n      //       []\n      //     )\n      //   )\n      // ).map((s) => s.symbol);\n      // const priceInfos = await Promise.all(\n      //   symbolNames.reduce((acc, s) => acc.concat([getPriceInfo(s)]), [])\n      // );\n      const priceInfos = await getPriceInfos(this.offchainSymbols)\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { lTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { bg, max } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from '../../contract/v2';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n} from '../../contract/v2_lite';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)","import { databaseFactory } from '../../../factory/contracts';\nimport { lTokenFactory, perpetualPoolFactory } from '../../factory'\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../../config'\nimport { bg, deriToNatural, getNetworkName } from '../../utils'\nimport { calculateMaxRemovableLiquidity } from '../../calculation'\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ])\n    const { minPoolMarginRatio } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    const cost = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n    }, bg(0))\n    const totalPnl = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n    }, bg(0))\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl)\n      } else {\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n      }\n    }, bg(0))\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\n    //console.log(\"approximatePnl\", approximatePnl.toString())\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString()\n    };\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList } from '../../config'\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../../factory'\nimport { RestOracle } from '../../utils'\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../../calculation'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n      res = { success: false, error: validation.error};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum=false,\n) => {\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n     poolAddress,\n   );\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const promises = symbolList.map(async(s) => {\n        return await RestOracle(s).getPrice()\n      })\n      const prices = await Promise.all(promises)\n      const priceInfos = prices.map((p, index) => {\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n      })\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       promises = symbolList.map(async(s) => {\n         return await RestOracle(s).getPrice()\n       })\n       const prices = await Promise.all(promises)\n       const priceInfos = prices.map((p, index) => {\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n       })\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { bTokenFactory } from '../../factory/shared';\nimport { perpetualPoolFactory, pTokenFactory } from '../../factory/v2';\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../../config'\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../../calculation';\nimport { getOraclePrice, bg, min, max } from '../../utils'\nimport { fundingRateCache, priceCache } from '../api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList, getPoolBTokenIdList } from '../../config'\nimport {\n  bTokenFactory,\n} from '../../factory/shared';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../../factory/v2';\nimport { RestOracle, bg } from '../../utils';\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume).plus(newVolume).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n    // console.log('pnl', pnl.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n     promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n","import { databaseFactory } from '../../../factory/contracts';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../utils';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError } from '../../utils';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { calculateEntryPrice } from \"../../../calculation\"\nimport { calculateFundingRate, calculateLiquidationPrice, processFundingRate, calculateFundingFee } from \"../../calculation\"\nimport { getPoolConfig } from \"../../config\"\nimport { bTokenFactory } from \"../../factory/shared\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../../factory/v2_lite\"\nimport { bg, catchApiError, getLastUpdatedBlockNumber, getLatestBlockNumber, getOraclePrice } from \"../../utils\"\nimport { fundingRateCache, priceCache } from \"../api_globals\"\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    //console.log(latestBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePrice(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { bTokenFactory } from '../../factory/shared';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError, bg } from '../../utils';\n\nexport const unlock = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.unlock(accountAddress, poolAddress)\n  }, args)\n}\n\nexport const depositMargin = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addMargin(accountAddress, amount)\n  }, args)\n}\n\nexport const withdrawMargin = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeMargin(accountAddress, amount, isMaximum)\n  }, args)\n}\n\nexport const tradeWithMargin = async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId]\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n    const { pToken:pTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [parameterInfo, liquidity, margin, symbolIds ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getLiquidity(),\n      pToken.getMargin(accountAddress),\n      pToken.getActiveSymbolIds(),\n    ])\n    const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n    let promises = []\n\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    let marginHeld = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    let liquidityUsed = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.tradersNetVolume).plus(newVolume).times(s.price).times(s.multiplier).abs())\n      } else {\n        return acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n\n    const orderValidation = isOrderValid(\n      margin,\n      marginHeld,\n      liquidity,\n      liquidityUsed,\n    )\n    if (orderValidation.success) {\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error(orderValidation.error)\n    }\n  }, args)\n}\n\nexport const closePosition = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const { volume } = await pToken.getPosition(accountAddress, symbolId);\n    if (!volume.eq(0)) {\n      const newVolume = volume.negated()\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error('no position to close')\n    }\n  }, args)\n}\n","import { deriToNatural } from '../../utils';\nimport { perpetualPoolFactory } from '../../factory';\nimport { getPoolConfig2, getPoolSymbolIdList } from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { owner: accountAddress }\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../utils';\nimport { perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { getPoolConfig, getPoolConfig2, getPoolSymbolIdList} from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\nimport { calculateTxFee } from '../../calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { brokerManagerFactory } from \"../factory/shared\"\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { getBrokerConfig } from \"../config\"\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}","import { pTokenAirdropFactory, } from \"../factory/shared\"\nimport { pTokenFactory } from \"../factory/v2\"\nimport { getPoolConfig2 } from '../config'\nimport { DeriEnv } from \"../../config\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    if (['1', '3', '42'].includes(chainId)) {\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n    }\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","export const getDBProviderUrlsConfig = () => [\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    if (!err.toString().includes('FetchError')) {\n      console.log(err);\n    }\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  // console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\nimport { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    //console.log(chainId, contractAddress, position)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', res)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97','127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import { getOracleConfig, mapToSymbolInternal } from '../config/oracle';\nimport { oracleFactory } from '../factory/shared';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../../config/env';\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (symbol) => {\n  const env = DeriEnv.get();\n  //const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol.toLowerCase()}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/get_signed_price', symbol);\n    }\n    return 'https://oracle4.deri.finance/get_signed_price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/get_signed_price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/get_signed_price';\n  }\n};\n\nexport const getPriceInfo = async (symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  let url = getOracleUrl(symbol);\n  //console.log('oracle url', url);\n  let retry = 2;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200') {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(2): ${symbol} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const getPriceInfos = async (symbolList) => {\n  //symbol = mapToSymbolInternal(symbol)\n  let url = getOracleUrl();\n  //console.log('oracle url', url);\n  let retry = 2;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200') {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(2): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      const priceInfo = await getPriceInfo(symbol)\n      return deriToNatural(priceInfo.price).toString()\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(chainId, symbol, version);\n  // console.log('oracle config',config)\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n","import { ContractBase } from './contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\nexport const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","import { getChainIds } from './chain';\n\n/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        retired: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingContractConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\nexport const getDailyBlockNumberConfig = () => {\n  const chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 10,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return 'https://testnetapi.deri.finance';\n    //return 'http://localhost:8082';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n  getPreminingContractConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n  getDeriBalance,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  //getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\n//getDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\nfetchRestApi,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n  setBroker,\n  airdropPToken,\n  isUserPTokenExist,\n  getAirdropPTokenWhitelistCount,\n} from './v2';\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      // if (isBrowser() && !isJsDom()) {\n      //   this.web3 = metaMaskWeb3();\n      // } else {\n      this.web3 = await web3Factory.get(this.chainId);\n      // }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        // ignore the metamask error\n      }\n    }\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const offchainOracleAbi= [{\"inputs\": [{\"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\"}, {\"internalType\": \"address\", \"name\": \"signatory_\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"delayAllowance_\", \"type\": \"uint256\"}], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\"inputs\": [], \"name\": \"delayAllowance\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"getPrice\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"price\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"signatory\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"timestamp\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"uint256\", \"name\": \"timestamp_\", \"type\": \"uint256\"}, {\"internalType\": \"uint256\", \"name\": \"price_\", \"type\": \"uint256\"}, {\"internalType\": \"uint8\", \"name\": \"v_\", \"type\": \"uint8\"}, {\"internalType\": \"bytes32\", \"name\": \"r_\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"s_\", \"type\": \"bytes32\"}], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\n\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getDailyBlockNumberConfig,\n  getDeriContractAddressConfig,\n  getChainIds,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\n//const np = () => {}\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      //console.log(url)\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  //console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  //console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\n  }\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  // console.log(\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  // );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 2;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  const responseJson = await getOracleInfo(chainId, poolAddress);\n  let price = responseJson.price;\n  if (!price) {\n    price = '0';\n  }\n  return deriToNatural(responseJson.price).toString();\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getLatestRPCServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};\n\nexport const getOracleUrl2 = (symbol) => {\n  const env = DeriEnv.get()\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo2 = async (poolAddress, symbol) => {\n  let url = getOracleUrl2(symbol);\n  //console.log('oracle url', url);\n  let retry = 2;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice2 = async (poolAddress, symbol) => {\n  const responseJson = await getOracleInfo2(poolAddress, symbol);\n  let price = responseJson.price;\n  if (!price) {\n    price = '0';\n  }\n  return deriToNatural(responseJson.price).toString();\n};","import { isUsedRestOracle } from '../config/oracle';\nimport {\n  WooOracle,\n  WrappedOracle,\n  // OffchainOracle,\n  BrokerManager,\n  PTokenAirdrop,\n  BToken,\n} from '../contract';\nimport { PerpetualPoolLiteViewer } from '../contract/perpetual_pool_lite_viewer';\nimport { RestOracle } from '../utils/oracle'\n\nexport const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal) => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      // if (['80001'].includes(chainId)) {\n      //   instanceMap[key] = new ChainlinkOracle(\n      //     chainId,\n      //     address,\n      //     symbol,\n      //     decimal\n      //   );\n      // } else if (['137', '97'].includes(chainId)) {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97','80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\n\nexport const bTokenFactory = factory(BToken);\n\nexport const brokerManagerFactory = factory(BrokerManager);\n\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\n","import { getContractAddressConfig as getContractAddressConfig2 } from \"../config\";\nimport { getPoolConfigList as getPoolConfigListV2} from \"../v2/config\"\n//import { getPoolVersion } from '../v2';\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === 'v2' || version === 'v2_lite') {\n    return getPoolConfigListV2(version)\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n  getPoolInfoApy as getPoolInfoApyV2,\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n  getPoolVersion,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport {\n  addLiquidity as addLiquidityV2,\n  removeLiquidity as removeLiquidityV2,\n  // addLiquidityWithPrices as addLiquidityV2,\n  // removeLiquidityWithPrices as removeLiquidityV2,\n  addLiquidityV2l,\n  removeLiquidityV2l,\n  getPoolVersion,\n} from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  isDeriUnlocked,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n  getWalletBalance as getWalletBalance2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n\n  getPoolVersion,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getSpecificationV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress)\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedMarginV2l(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFundingRateV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedLiquidityUsedV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\nimport {\n  unlock as unlockV2,\n  tradeWithMargin as tradeWithMarginV2,\n  closePosition as closePositionV2,\n  depositMargin as depositMarginV2,\n  withdrawMargin as withdrawMarginV2,\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\n  // depositMarginWithPrices as depositMarginV2,\n  // withdrawMarginWithPrices as withdrawMarginV2,\n  // closePositionWithPrices as closePositionV2,\n\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n\n  getPoolVersion,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return unlockV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return withdrawMarginV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return tradeWithMarginV2l(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getPoolVersion,\n  getTradeHistoryV2,\n  getTradeHistoryV2l,\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getTradeHistoryV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getDailyBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n","import { perpetualPoolLiteViewerFactory } from '../factory/shared';\nimport { getConfig } from './config';\n\nexport const getOracleConfigList = (version) => {\n  const config = getConfig(version)\n  return config.oracle\n};\n\nconst bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n};\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index !== -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  getPoolContractAddress,\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url, opts) => {\n  const resp = await fetch(url, opts);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice2 } from '../utils';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getBTCUSDPrice2(poolAddress, symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  let price = ''\n  try {\n    price = await getBTCUSDPrice(chainId, poolAddress);\n  } catch (err) {\n    console.log(err)\n  }\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","var map = {\n\t\"./de/Signin.json\": 604,\n\t\"./de/bridge.json\": 605,\n\t\"./de/broker.json\": 606,\n\t\"./de/dip-history.json\": 607,\n\t\"./de/footer.json\": 608,\n\t\"./de/governance.json\": 609,\n\t\"./de/header.json\": 610,\n\t\"./de/home.json\": 611,\n\t\"./de/lite.json\": 612,\n\t\"./de/mining.json\": 613,\n\t\"./de/mobile-lite.json\": 614,\n\t\"./de/pro.json\": 615,\n\t\"./de/team.json\": 616,\n\t\"./en/Signin.json\": 617,\n\t\"./en/bridge.json\": 618,\n\t\"./en/broker.json\": 619,\n\t\"./en/dip-history.json\": 620,\n\t\"./en/footer.json\": 621,\n\t\"./en/governance.json\": 622,\n\t\"./en/header.json\": 623,\n\t\"./en/home.json\": 624,\n\t\"./en/lite.json\": 625,\n\t\"./en/mining.json\": 626,\n\t\"./en/mobile-lite.json\": 627,\n\t\"./en/pro.json\": 628,\n\t\"./en/team.json\": 629,\n\t\"./zh/Signin.json\": 630,\n\t\"./zh/bridge.json\": 631,\n\t\"./zh/broker.json\": 632,\n\t\"./zh/dip-history.json\": 633,\n\t\"./zh/footer.json\": 634,\n\t\"./zh/governance.json\": 635,\n\t\"./zh/header.json\": 636,\n\t\"./zh/home.json\": 637,\n\t\"./zh/lite.json\": 638,\n\t\"./zh/mining.json\": 639,\n\t\"./zh/mobile-lite.json\": 640,\n\t\"./zh/pro.json\": 641,\n\t\"./zh/team.json\": 642\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 603;","import { getConfig } from './config';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          router: pool.router,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2') => {\n  const config = getConfig(version)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version)\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\n  // check the bToken in v2_lite\n  if (version === 'v2_lite') {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\n\nexport const getPoolVersion = (poolAddress) => {\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\n    return acc.concat(getConfig(version)['pools'])\n  }, [])\n  //console.log('pools', pools)\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress)\n  const config = getConfig(version)\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool\n  }\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const config = getConfig(version)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  }\n  if(isMobile){\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline_update', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n   }\n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      // const fundingFee = await getFun\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    bTokenSymbolDisplay : ['BUSD']\n  }\n\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite){\n      return [spec.bTokenSymbol];\n    }\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,finishedCallback){    \n    const all = await this.configInfo.load(version);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback)\n  }\n\n  async onChange(config,changed,finishedCallback){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\n        this.contractInfo.load(wallet,config),\n        this.loadFundingRate(wallet,config),\n        this.historyInfo.load(wallet,config)\n      ]).then(results => {\n        if(results.length === 4){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\n      this.setVolume(volume.toFixed(0))\n    }\n  }\n\n\n  get volumeDisplay(){\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    \n    return ''\n  }\n\n\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { DeriEnv } from '../../config';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\nimport { isUsedRestOracle, mapToBToken, mapToSymbol } from './oracle';\n\nconst validateConfigV2 = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['bTokens'], 'bTokens');\n  config['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processConfigV2 = (config) => {\n  // process config\n  config['bTokenCount'] = config['bTokens'].length;\n  config['symbolCount'] = config['symbols'].length;\n  config['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validateConfigV2Lite = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2Lite = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst getJsonConfig = (version) => {\n  const env = DeriEnv.get();\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\n    configs = configs[version]\n  }\n  if (['prod', 'dev'].includes(env)){\n    //console.log(env)\n    if (configs && configs[env]) {\n      //console.log(configs[env])\n      const pools = configs[env].pools;\n      if (pools && Array.isArray(pools)) {\n        if (version === 'v2') {\n          for (let i = 0; i < pools.length; i++) {\n            processConfigV2(pools[i]);\n            validateConfigV2(pools[i]);\n          }\n        } else if (version === 'v2_lite') {\n          for (let i = 0; i < pools.length; i++) {\n            processConfigV2Lite(pools[i]);\n            validateConfigV2Lite(pools[i]);\n          }\n        }\n      }\n      //console.log(configs[env])\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n      return configs[env];\n    }\n  }\n  throw new Error(\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n  );\n};\n\nexport const getConfig = (version='v2') => {\n  return getJsonConfig(version);\n};\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(`--- web3factory init (${chainId}) ---`)\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { bg } from '../../utils';\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('_I_')\n    return bg(res, `-${this.decimal}`).toString();\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { chainlinkOracleAbi } from '../abis';\nimport { bg } from \"../../utils\";\n\nexport class ChainlinkOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, chainlinkOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('latestRoundData');\n    if (res && res.answer) {\n      return bg(res.answer, `-${this.decimal}`).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { offchainOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class OffchainOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, offchainOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"./contract_base\";\nimport { brokerManagerAbi } from './abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from './contract_base'\nimport { pTokenAirdropAbi } from './abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { ContractBase } from './contract_base'\nimport { bTokenLiteAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenLiteAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { ContractBase } from '../contract_base'\nimport { perpetualPoolAbi } from '../abis';\nimport { deriToNatural, hexToNumber, bg } from '../../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../contract_base'\nimport { perpetualPoolRouterAbi} from '../abis';\nimport { naturalToDeri } from '../../utils'\nimport { MAX_INT256 } from '../../config';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../contract_base'\nimport { lTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}"],"sourceRoot":""}