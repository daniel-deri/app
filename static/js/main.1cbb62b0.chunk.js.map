{"version":3,"sources":["lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/database_premining.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/v2/config/oracle.js","lib/web3js/v2/utils/convert.js","lib/web3js/factory/web3.js","lib/web3js/v2/config/broker.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","utils/LoadableComponent.js","lib/web3js/v2/factory.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/utils.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/indexV2.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/v2/utils/oracle.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","model/Version.js","utils/utils.js","lib/web3js/api/contractQueryApi.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/b_token.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/contract/woo_oracle.js","lib/web3js/v2/contract/chainlink_oracle.js","lib/web3js/v2/contract/wrapped_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/ptoken_airdrop.js","../lang).)*/.json$","lib/web3js/v2/config/pool.js","App.js","model/Intl.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","index.js","lib/web3js/v2/config/chain.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/config/config.js","lib/web3js/v2/utils/validate.js","lib/web3js/config/env.js"],"names":["MAX_GAS_AMOUNT","Contract","chainId","contractAddress","contractAbi","isProvider","this","a","web3","web3Factory","metaMaskWeb3","contract","eth","accountAddress","poolAddress","method","args","retry","_init","methods","call","res","toString","includes","console","log","Error","gas","i","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","to","Web3","utils","numberToHex","value","data","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","POOL_ABI","PerpetualPool","_call","defaultValue","bg","result","cumuFundingRate","deriToNatural","cumuFundingRateBlock","liquidity","tradersNetVolume","tradersNetCost","multiplier","feeRatio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","getOracleInfo","oracle","signed","timestamp","price","v","r","s","getBTCUSDPrice","getStateValues","getParameters","args1","hasInvalidArgsValue","fundingRate","fundingRatePerBlock","calculateFundingRate","processFundingRate","args2","liquidityUsed","calculateLiquidityUsed","poolMarginRatio","amount","_transactPool","success","transaction","blockNumber","getBlock","eventName","filter","fromBlock","events","getPastEvents","toBlock","es","e","push","volume","abs","times","CONTRACT_ABI","BTokenContract","allowance","gt","_transact","MAX_VALUE","address","all","_balance","decimals","PTokenContract","cost","lastCumuFundingRate","margin","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","providers","HttpProvider","providerUrl","getLatestRPCServer","getDBProviderUrlsConfig","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","DatabasePreminingContract","methodName","MiningVaultPool","MiningVaultRouter","SlpPool","naturalToDeri","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","getDeriContractAddress","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddressConfig","DeriEnv","get","key","Object","keys","database","databaseWormholeFactory","getDBWormholeAddressConfig","databaseAirdropFactory","getDBAirdropAddressConfig","databasePreminingFactory","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","bTokenFactory","bTokenInstanceMap","bToken","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","miningVaultPoolFactory","mVaultInstanceMap","mVault","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","getOracleConfigList","getConfig","getOracleConfig","symbol","filteredByChainId","c","length","BigNumber","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","div","max","value1","value2","gte","min","lte","hexToNumber","toFixed","isBrowser","document","isJsDom","navigator","userAgent","web3Instance","undefined","web3InstanceMap","getChainProviderUrl","getBrokerConfigList","brokerManager","getBrokerConfig","env","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","url","duration","Number","MAX_SAFE_INTEGER","startTime","Date","now","urls","promises","blockNumbers","sort","b","latestBlockNumber","reduce","index","findIndex","startsWith","normalizeChainId","getChainProviderUrls","getDailyBlockNumber","getDailyBlockNumberConfig","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","factory","klass","instances","perpetualPoolRouterFactory","PerpetualPoolRouter","BToken","LToken","PToken","oracleFactory","instanceMap","decimal","ChainlinkOracle","WrappedOracle","WooOracle","brokerManagerFactory","BrokerManager","pTokenAirdropFactory","PTokenAirdrop","getChainIds","ChainProviderUrls","provider_urls","getChainProviderUrlsConfig","getContractAddressConfig","pool","dToken","MiningVault","initialBlock","bTokenSymbol","unit","version","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","accum","getRestServerConfig","process","getRedisWorkerQueneConfig","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","some","isNaN","getNetworkName","poolNetwork","getPoolContractAddress","p","bTokenAddress","pTokenAddress","lTokenAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getLpContractAddress","deriAddress","getOracleUrl","addSymbolParam","fetch","mode","cache","ok","json","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","calculateEntryPrice","eq","calculateLiquidationPrice","dynamicCost","tmp","minus","plus","isOrderValid","marginHeld","minMargin","validateArgs","annualBlockCount","calculateFundingFee","dynamicEquity","cumulativeFundingRate","lastCumulativeFundingRate","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","bTokens","discount","pnl","isBToken0RatioValid","bTokenId","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","totalCost","calculateMaxRemovableLiquidity","restLiquidity","getLiquidityInfo","getPoolConfig2","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","getBToken","getAsset","parameterInfo","bTokenInfo","lTokenAsset","getSymbol","totalPnl","poolLiquidity","lastCumulativePnl","maxRemovableShares","approximatePnl","cumulativePnl","shares","getPoolLiquidity","db","getValues","catch","err","getPoolInfoApy","apy","volume1h","volume24h","addLiquidity","routerAddress","router","perpetualPoolRouter","minBToken0Ratio","validation","removeLiquidity","isMaximum","priceCache","_prices","symbolId","split","set","val","parseFloat","fundingRateCache","resourceMap","resource","getSpecification","getPoolBTokenList","symbolInfo","protocolFeeCollectRatio","bSymbol","map","join","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","getOraclePrice","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","bTokenInfoList","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","fetchJson","resp","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","returnValues","item","unshift","getTradeHistory","tradeHistory","tradeFromBlock","tradeHistoryBlock","Array","isArray","trim","tradeHistoryOnline","concat","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","newVolume","orderValidation","trade","closePosition","negated","setBroker","brokerAddress","normalizeAddress","brokerManagerAddress","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","isV2","total","cur","getContractAddressConfig2","require","getPoolConfigListV2","getPoolConfigList","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApy2","getPoolInfoApyV2","addLiquidity2","addLiquidityV2","removeLiquidity2","removeLiquidityV2","getSpecification2","getSpecificationV2","getPositionInfo2","getPositionInfoV2","getWalletBalance2","getWalletBalanceV2","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFee2","getEstimatedFeeV2","getFundingRate2","getFundingRateV2","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockDeri","unlock2","unlockV2","depositMargin2","depositMarginV2","withdrawMargin2","withdrawMarginV2","tradeWithMargin2","tradeWithMarginV2","closePosition2","closePositionV2","getTradeHistory2","getTradeHistoryV2","getPrice","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","pPool","maxWithdrawMargin","totalSupply","mintDToken","getUserInfoAll","userInfo","deadline","nonce","valid","miningVaultAddress","miningVault","freeze","mintDeri","databaseWormhole","signature","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","assign","getLpPoolInfoApy","apy2","getUserInfoInPool","baseToken","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","path","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","wsOnPromise","ws","event","JSON","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","getOrSet","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","Version","makeAutoObservable","setCurrent","isV1","computed","formatAddress","substr","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","stringify","getConfigFromStore","getItem","storeChain","chainInfo","storeLocale","locale","restoreLocale","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","toUpperCase","parameters","getUserWormholeSignature","getDeriBalance","ContractBase","perpetualPoolAbi","perpetualPoolRouterAbi","bTokenAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","bTokenCount","symbolCount","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","decimals0","swapperAddress","oracleAddress","getStorageAt","MAX_INT256","priceInfos","_balanceOf","MAX_UINT256","processAsset","processPosition","answer","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","flat","expendPoolConfig","getFilteredPoolConfigList","poolConfigList","check","getPoolConfig","_getPoolConfig","find","broker","DesktopApp","MobileApp","inject","observer","intl","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","isApproved","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","position","interval","load","setInfo","History","forEach","lang","page","toLowerCase","test","pageName","setLocale","dict","localeLabel","language","prefix","supportedCatalog","label","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setSupportChain","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","defaultConfig","getDefaultConfig","loadByConfig","changed","pause","store","resume","symbolChanged","addListener","loadFundingRate","fromStore","getFromStore","pos","syncFundingRate","setPaused","support","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","Intl","trading","ReactDOM","render","StrictMode","getElementById","getLiquidity","bTokenBalance","processConfig","jsonConfig","validateObjectKeyExist","validateIsArray","prop","getJsonConfig","every","keyList","valName","_deriEnv"],"mappings":"2uBAGMA,EAAiB,OAEVC,EAAb,WACE,WAAYC,EAASC,EAAiBC,EAAaC,GAAa,oBAC9DC,KAAKJ,QAAUA,EACfI,KAAKH,gBAAkBA,EACvBG,KAAKF,YAAcA,EACnBE,KAAKD,WAAaA,EALtB,gFAOE,sBAAAE,EAAA,yDACOD,KAAKE,KADZ,oBAEQF,KAAKD,WAFb,gCAGwBI,YAAYH,KAAKJ,SAHzC,OAGMI,KAAKE,KAHX,6BAKMF,KAAKE,KAAOE,cALlB,OAOIJ,KAAKK,SAAW,IAAIL,KAAKE,KAAKI,IAAIX,SAChCK,KAAKF,YACLE,KAAKH,iBATX,gDAPF,8EAqBE,SAAWU,GAET,OADAP,KAAKO,eAAiBA,EACfP,OAvBX,qBAyBE,SAAQQ,GAEN,OADAR,KAAKQ,YAAcA,EACZR,OA3BX,0DA6BE,WAAYS,GAAZ,iCAAAR,EAAA,sDAAoBS,EAApB,+BAA2B,GAErBC,EAAQ,EAFd,YAGQA,EAAQ,GAHhB,0CAKYX,KAAKY,QALjB,wBAMkB,EAAAZ,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMI,OANzD,cAMMC,EANN,8DASMJ,GAAS,EACTX,KAAKE,KAAO,KACR,KAAIc,WAAWC,SAAS,6BAC1BC,QAAQC,IAAR,iDAAsDnB,KAAKJ,QAA3D,MACS,KAAIoB,WAAWC,SAAS,kCACjCC,QAAQC,IAAR,mCAAwCnB,KAAKH,gBAA7C,yBAA6EG,KAAKJ,QAAlF,MAdR,kCAkBgB,IAAVe,GAAgBI,EAlBtB,uBAmBU,IAAIK,MAAJ,uBAA0BpB,KAAKH,gBAA/B,cAAoDY,EAApD,YAA8DC,EAA9D,gCAnBV,iCAqBSK,GArBT,0DA7BF,yHAqDE,WAAoBN,GAApB,mCAAAR,EAAA,sDAA4BS,EAA5B,+BAAmC,GAAIH,EAAvC,uBACMc,EAAM,EACDC,EAAI,EAFf,YAEkBA,EAAI,GAFtB,2CAIkB,EAAAtB,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMa,YAAY,CAC7DC,KAAMjB,IALd,cAIMc,EAJN,OAOMA,EAAMI,SAAe,KAANJ,GAPrB,+DAEyBC,IAFzB,8BAaa,GAAPD,IAAUA,EAAM3B,GAChB2B,EAAM3B,IAAgB2B,EAAM3B,GAdlC,kBAeS2B,GAfT,0DArDF,2FAuEE,SAAuBK,GACrB,IAAMC,EAAO3B,KACb,OAAO,SAAS4B,EAAoBC,EAASC,GAC3CH,EAAKzB,KAAKI,IAAIyB,sBAAsBL,GAAI,SAACM,EAAOC,GAC1CD,EACFF,EAAOE,GACc,OAAZC,EACTC,YAAW,kBAAMN,EAAoBC,EAASC,KAAS,MAC3B,IAAnBG,EAAQE,QACjBF,EAAQG,aAAe,qBACvBN,EAAOG,IAEPJ,EAAQI,SAnFlB,8DAwFE,WAAgBxB,EAAQC,EAAMH,GAA9B,qBAAAN,EAAA,sEACQD,KAAKY,QADb,uBAEoBZ,KAAKqC,cAAc5B,EAAQC,EAAMH,GAFrD,cAEQc,EAFR,OAIMiB,EAAQ,CACV,CACEd,KAAMjB,EACNgC,GAAIvC,KAAKH,gBACTwB,IAAKmB,IAAKC,MAAMC,YAAYrB,GAC5BsB,MAAOH,IAAKC,MAAMC,YAAY,KAC9BE,MAAM,EAAA5C,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMmC,cAVnD,SAaiBC,OAAOC,SAASC,QAAQ,CACrCvC,OAAQ,sBACRwC,OAAQX,IAfZ,cAaMZ,EAbN,iBAiBe,IAAIwB,QAAQlD,KAAKmD,uBAAuBzB,IAjBvD,0FAxFF,kE,eCWM0B,EAAS,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,gBAAgB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,SAAU,EAAM,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,YAAY,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,kBAAkB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,SAAS,KAAO,cAAc,KAAO,UAAU,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,QAAQ,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,iBAAiB,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,wBAAwB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,4BAA4B,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,kBAAkB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,yBAAyB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,sBAAsB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,sBAAsB,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,kBAAkB,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,mBAAmB,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,iBAAiB,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,UAAU,KAAO,UAAU,CAAC,aAAe,aAAa,KAAO,aAAa,KAAO,cAAc,CAAC,aAAe,cAAc,KAAO,cAAc,KAAO,gBAAgB,KAAO,aAAa,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,cAAc,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,QAAQ,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,cAAc,KAAO,WAAW,KAAO,QAAQ,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,cAAc,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,cAAc,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,iBAAiB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,iBAAiB,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAGrgUC,EAAb,kDACE,WAAYzD,EAASC,EAAiBE,GAAa,uCAC3CH,EAASC,EAAiBuD,EAAUrD,GAF9C,iFAME,sBAAAE,EAAA,sEACeD,KAAKsD,MAAM,UAD1B,wFANF,yHAUE,gCAAArD,EAAA,6DAEQsD,EAAeC,YAAG,GAF1B,kBAIsBxD,KAAKsD,MAAM,kBAJjC,OAIUvC,EAJV,OAMI0C,EAAS,CACPC,gBAAiBC,YAAc5C,EAAI2C,iBACnCE,qBAAsBJ,YAAGzC,EAAI6C,sBAC7BC,UAAWF,YAAc5C,EAAI8C,WAC7BC,iBAAkBH,YAAc5C,EAAI+C,kBACpCC,eAAgBJ,YAAc5C,EAAIgD,iBAXxC,gDAcIN,EAAS,CACPC,gBAAiBH,EACjBK,qBAAsBL,EACtBM,UAAWN,EACXQ,eAAgBR,EAChBO,iBAAkBP,GAEpBrC,QAAQC,IAAR,iCArBJ,iCAuBSsC,GAvBT,yDAVF,wHAoCE,gCAAAxD,EAAA,6DAEQsD,EAAeC,YAAG,GAF1B,kBAIsBxD,KAAKsD,MAAM,iBAJjC,OAIUvC,EAJV,OAMI0C,EAAS,CACPO,WAAYL,YAAc5C,EAAIiD,YAC9BC,SAAUN,YAAc5C,EAAIkD,UAC5BC,mBAAoBP,YAAc5C,EAAImD,oBACtCC,sBAAuBR,YAAc5C,EAAIoD,uBACzCC,0BAA2BT,YAAc5C,EAAIqD,2BAC7CC,gBAAiBV,YAAc5C,EAAIsD,iBACnCC,mBAAoBX,YAAc5C,EAAIuD,oBACtCC,uBAAwBZ,YAAc5C,EAAIwD,wBAC1CC,qBAAsBb,YAAc5C,EAAIyD,sBACxCC,qBAAsBd,YAAc5C,EAAI0D,sBACxCC,oBAAqBf,YAAc5C,EAAI2D,qBACvCC,oBAAqBnB,YAAGzC,EAAI4D,sBAlBlC,gDAqBIlB,EAAS,CACPO,WAAYT,EACZU,SAAUV,EACVW,mBAAoBX,EACpBY,sBAAuBZ,EACvBa,0BAA2Bb,EAC3Bc,gBAAiBd,EACjBe,mBAAoBf,EACpBgB,uBAAwBhB,EACxBiB,qBAAsBjB,EACtBkB,qBAAsBlB,EACtBmB,oBAAqBnB,EACrBoB,oBAAqBpB,GAEvBrC,QAAQC,IAAR,gCAnCJ,iCAqCSsC,GArCT,yDApCF,0FA4EE,SAAuB/B,GACrB,IAAMC,EAAO3B,KACb,OAAO,SAAS4B,EAAoBC,EAASC,GAC3CH,EAAKzB,KAAKI,IAAIyB,sBAAsBL,GAAI,SAACM,EAAOC,GAC1CD,EACFF,EAAOE,GACa,MAAXC,EACTC,YAAW,kBAAMN,EAAoBC,EAASC,KAAS,MAC3B,IAAnBG,EAAQE,QACjBF,EAAQG,aAAe,qBACvBN,EAAOG,IAEPJ,EAAQI,SAxFlB,kEA6FE,WAAoBxB,EAAQC,EAAMH,GAAlC,mBAAAN,EAAA,sDAGMoB,EAAM,EACDC,EAAI,EAJf,YAIkBA,EAAI,IAJtB,2CAMkB,EAAAtB,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMa,YAAY,CAC7DC,KAAMjB,IAPd,cAMMc,EANN,OASMA,EAAMI,SAAe,KAANJ,GATrB,+DAI0BC,IAJ1B,8BAea,GAAPD,IAAUA,EAAM,QAChBA,EAAM,SAAQA,EAAM,QAhB1B,kBAiBSA,GAjBT,0DA7FF,6HAiHE,WAAoBZ,GAApB,yCAAAR,EAAA,6DAA4BS,EAA5B,+BAAmC,GAAIH,EAAvC,gCACQP,KAAKY,QADb,uBAIuBgE,YAAc5E,KAAKJ,QAASI,KAAKH,iBAJxD,cAIQgF,EAJR,OAKMC,EAAS,CAACD,EAAOE,UAAWF,EAAOG,MAAOH,EAAOI,EAAGJ,EAAOK,EAAGL,EAAOM,GAL3E,UAYoBnF,KAAKqC,cAAc5B,EAAnB,sBAA+BC,GAASoE,GAASvE,GAZrE,eAYQc,EAZR,OAeMiB,EAAQ,CACV,CACEd,KAAMjB,EACNgC,GAAIvC,KAAKH,gBACTwB,IAAKmB,IAAKC,MAAMC,YAAYrB,GAC5BsB,MAAOH,IAAKC,MAAMC,YAAY,KAC9BE,MAAM,EAAA5C,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,GAAjC,OAA0CoE,IAAQjC,cArB9D,UAwBiBC,OAAOC,SAASC,QAAQ,CACrCvC,OAAQ,sBACRwC,OAAQX,IA1BZ,eAwBMZ,EAxBN,iBA4Be,IAAIwB,QAAQlD,KAAKmD,uBAAuBzB,IA5BvD,0FAjHF,0HAgJE,oDAAAzB,EAAA,sEAEgBmF,YAAepF,KAAKJ,QAASI,KAAKH,iBAFlD,cAEEmF,EAFF,yBAIkDhF,KAAKqF,iBAJvD,uBAIYvB,EAJZ,EAIYA,iBAAkBD,EAJ9B,EAI8BA,UAJ9B,UASc7D,KAAKsF,gBATnB,wBAMMtB,EANN,EAMMA,WACAO,EAPN,EAOMA,uBACAL,EARN,EAQMA,mBAGIqB,EAAQ,CACZzB,EACAkB,EACAhB,EACAH,EACAU,GAEEiB,IAAmB,WAAnB,EAAuBD,IACzBE,EAAc,IACdC,EAAsB,MAEtBA,EAAsBC,IAAoB,WAApB,EAAwBJ,GAC9CE,EAAcG,YAAmB5F,KAAKJ,QAAS8F,IAE3CG,EAAQ,CACZ/B,EACAkB,EACAhB,EACAH,EACAK,GAGA4B,EADEN,IAAmB,WAAnB,EAAuBK,GACT,IAEAE,IAAsB,WAAtB,EAA0BF,GAnChD,kBAqCW,CACLb,QACAhB,WAAYA,EAAWhD,WACvByE,YAAaA,EACbC,oBAAqBA,EACrB5B,iBAAkBA,EAAiB9C,WACnC6C,UAAWA,EAAU7C,WACrBuD,uBAAwBA,EAAuBvD,WAC/C8E,cAAeA,EACfE,gBAAiB9B,EAAmBlD,aA9C1C,wCAiDIE,QAAQC,IAAI,kCAAZ,MAjDJ,+DAhJF,wHAsME,WAAoBZ,EAAgB0F,GAApC,iBAAAhG,EAAA,+EAKmBD,KAAKkG,cAClB,+DACA,CAACD,GACD1F,GARN,OAKQmB,EALR,OAUIX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAVxC,gDAYIR,QAAQC,IAAI,QACZJ,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAbjC,iCAeSjB,GAfT,yDAtMF,2HAuNE,WAAoBsF,GAApB,SAAApG,EAAA,sEACQD,KAAKY,QADb,uBAEeZ,KAAKE,KAAKI,IAAIgG,SAASD,GAFtC,wFAvNF,0HA2NE,WAAqBE,GAArB,2CAAAtG,EAAA,6DAAgCuG,EAAhC,+BAAyC,GAAIC,EAA7C,+BAAyD,EAAGlE,EAA5D,+BAAiE,EAAjE,SACQvC,KAAKY,QADb,OAEM8F,EAAS,GAKXT,EADE,CAAC,KAAM,MAAO,KAAM,SAAShF,SAASjB,KAAKJ,SACpC,IAEA,KAEP6G,EAAYR,EAAS1D,IACvB0D,EAAS1D,EAAKkE,GAZlB,YAcSA,GAAalE,GAdtB,kCAgBmBvC,KAAKK,SAASsG,cAAcJ,EAAW,CACpDC,OAAQA,EACRC,YACAG,QAASH,EAAYR,IAnB3B,QAgBQY,EAhBR,qBAqBkBA,GArBlB,IAqBI,2BAASC,EAAS,QAChBJ,EAAOK,KAAKD,GAtBlB,+BAwBIL,GAAaR,EAAS,GACNA,EAAS1D,IACvB0D,EAAS1D,EAAKkE,GA1BpB,gDA6BSC,GA7BT,iDA3NF,yHA0PE,WAAoBL,GAApB,SAAApG,EAAA,sEACQD,KAAKY,QADb,uBAEeZ,KAAKE,KAAKI,IAAIgG,SAASD,GAFtC,wFA1PF,kFA8PE,SAAcW,EAAQhC,EAAOhB,EAAYC,GACvC,OAAOT,YAAGwD,GACPC,MACAC,MAAMlC,GACNkC,MAAMlD,GACNkD,MAAMjD,GACNjD,eApQP,GAAmCrB,G,QCf7BwH,EAAa,CAAC,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,WAAW,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,UAAU,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,qBAAqB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,QAAQ,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,iBAAiB,KAAO,WAAW,CAAC,KAAO,YAAY,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,QAAQ,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,YAAY,KAAO,SAAS,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,CAAC,KAAO,WAAW,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,gBAAgB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,WAAW,SAAU,EAAM,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,SAAS,KAAO,YAAY,KAAO,QAAQ,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,SAAS,KAAO,YAAY,KAAO,SAAS,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,aAAa,KAAO,YAAY,KAAO,YAAY,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,iBAAiB,KAAO,WAAW,CAAC,SAAU,EAAM,KAAO,SAAS,KAAO,YAAY,KAAO,SAAS,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,mBAAmB,KAAO,WAAW,CAAC,SAAU,EAAM,KAAO,WAAW,KAAO,YAAY,KAAO,sBAAsB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,QAAQ,KAAO,YAAY,KAAO,iBAAiB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,KAAO,QAAQ,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAK,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,KAAO,QAAQ,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAM,KAAO,QAAQ,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,GAAG,KAAO,QAAQ,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,GAAG,KAAO,UAAU,KAAO,UAGhhOC,EAAb,kDACE,WAAYxH,EAASC,EAAiBW,EAAaT,GAAa,IAAD,8BAC7D,cAAMH,EAASC,EAAiBsH,EAAcpH,IACzCS,YAAcA,EAF0C,EADjE,qFAUE,WAAiBD,GAAjB,eAAAN,EAAA,sEACwBD,KAAKsD,MAAM,YAAa,CAC5C/C,EACAP,KAAKQ,cAHT,cACM6G,EADN,OAKEA,EAAY1D,YAAc0D,GAL5B,kBAMSA,EAAUC,GAAG,IANtB,gDAVF,kHAmBE,WAAa/G,GAAb,SAAAN,EAAA,sEACeD,KAAKuH,UAChB,UACA,CAACvH,KAAKQ,YAAagH,KACnBjH,GAJJ,wFAnBF,kHA2BE,sBAAAN,EAAA,sEACeD,KAAKsD,MAAM,UAD1B,wFA3BF,mHA+BE,sBAAArD,EAAA,sEACeD,KAAKsD,MAAM,YAD1B,wFA/BF,mHAkCE,WAAemE,GAAf,SAAAxH,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAACmE,IADxC,wFAlCF,mHAsCE,WAAcA,GAAd,qBAAAxH,EAAA,sEACgCiD,QAAQwE,IAAI,CACxC1H,KAAK2H,SAASF,GACdzH,KAAK4H,aAHT,0CACS7G,EADT,KACc6G,EADd,uBAKSpE,YAAGzC,GAAM6G,IALlB,gDAtCF,4DAAoCjI,GCH9BwH,EAAa,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,QAAQ,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,UAAU,KAAO,WAAW,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,OAAO,KAAO,WAAW,KAAO,SAAS,KAAO,iBAAiB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,SAAU,EAAM,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,SAAU,EAAM,aAAe,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,sBAAsB,KAAO,YAAY,KAAO,SAAS,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,sBAAsB,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,sBAAsB,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,OAAO,KAAO,UAAU,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,WAAW,KAAO,SAAS,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,cAAc,KAAO,WAAW,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,sBAAsB,KAAO,YAAY,KAAO,SAAS,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAG5yNU,EAAb,kDACE,WAAYjI,EAASC,EAAiBW,EAAaT,GAAa,IAAD,8BAC7D,cAAMH,EAASC,EAAiBsH,EAAcpH,IACzCS,YAAcA,EAF0C,EADjE,0FAUE,WAAsBD,GAAtB,iBAAAN,EAAA,6DACMwD,EAAS,GADf,kBAGsBzD,KAAKsD,MAAM,uBAAwB,CAAC/C,IAH1D,OAGUQ,EAHV,OAKI0C,EAAS,CACPuD,OAAQrD,YAAc5C,EAAI,IAC1B+G,KAAMnE,YAAc5C,EAAI,IACxBgH,oBAAqBpE,YAAc5C,EAAI,IACvCiH,OAAQrE,YAAc5C,EAAI,IAC1BkH,oBAAqBzE,YAAGzC,EAAI,KAVlC,gDAaI0C,EAAS,CACPuD,OAAQxD,YAAG,GACXsE,KAAMtE,YAAG,GACTuE,oBAAqBvE,YAAG,GACxBwE,OAAQxE,YAAG,GACXyE,oBAAqBzE,YAAG,IAlB9B,iCAsBSC,GAtBT,yDAVF,kHAmCE,WAAalD,GAAb,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,SAAU,CAAC/C,IADrC,wFAnCF,4DAAoCZ,GCH9BwH,EAAa,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,QAAQ,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,UAAU,KAAO,WAAW,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,QAAQ,KAAO,GAAG,KAAO,UAAU,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,aAG9uGe,EAAb,kDACE,WAAYtI,EAASC,EAAiBW,EAAaT,GAAa,IAAD,8BAC7D,cAAMH,EAASC,EAAiBsH,EAAcpH,IACzCS,YAAcA,EAF0C,EADjE,kFAUE,WAAcD,GAAd,eAAAN,EAAA,kEACc0D,IADd,SACkC3D,KAAKsD,MAAM,YAAa,CAAC/C,IAD3D,0BACQQ,GADR,gCAGSA,GAHT,gDAVF,uHAgBE,4BAAAd,EAAA,kEACc0D,IADd,SACkC3D,KAAKsD,MAAM,eAD7C,0BACQvC,GADR,gCAGSA,GAHT,gDAhBF,2DAAoCpB,G,SCHvBwI,EAAb,WACE,WAAYtI,EAAiBC,GAAc,oBACzCE,KAAKH,gBAAkBA,EACvBG,KAAKF,YAAcA,EAHvB,yCAKE,WACEE,KAAKE,KAAO,IAAIsC,IAAK,IAAIA,IAAK4F,UAAUC,aAAarI,KAAKsI,cAC1DtI,KAAKK,SAAW,IAAIL,KAAKE,KAAKI,IAAIX,SAChCK,KAAKF,YACLE,KAAKH,mBATX,sEAaE,sBAAAI,EAAA,yDACOD,KAAKsI,YADZ,gCAE6BC,YAAmBC,eAFhD,OAEIxI,KAAKsI,YAFT,OAGItI,KAAKY,QAHT,gDAbF,gHAoBE,WAAYH,EAAQC,GAApB,mBAAAT,EAAA,sDAEMU,EAAQ,EAFd,YAGQA,EAAQ,GAHhB,0CAKYX,KAAKyI,oBALjB,wBAMkB,EAAAzI,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMI,OANzD,cAMMC,EANN,8DASMf,KAAKsI,YAAc,KACnBpH,QAAQC,IAAI,KAAIH,YAVtB,QAYIL,GAAS,EAZb,0BAcgB,IAAVA,GAAgBI,EAdtB,uBAeU,IAAIK,MAAJ,mBAAsBX,EAAtB,YAAgCC,EAAhC,2BAfV,iCAiBSK,GAjBT,0DApBF,gECDM2H,EAAkB,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,WAAW,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,YAAY,KAAO,GAAG,KAAO,cAAc,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,SAAS,KAAO,MAAM,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,aAAe,2BAA2B,KAAO,QAAQ,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAG/vCC,EAAb,kDACE,WAAY9I,GAAkB,uCACtBA,EAAiB6I,GAF3B,oFAIE,WAAgBE,GAAhB,SAAA3I,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAACsF,IADxC,wFAJF,4DAAsCT,GCHhChB,EAAe,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,aAAe,2BAA2B,KAAO,SAAS,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,QAAQ,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,iBAAiB,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAGz1E0B,EAAb,kDACE,WAAYhJ,GAAkB,uCACtBA,EAAiBsH,GAF3B,oFAKE,WAAgB5G,GAAhB,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAAC/C,IADxC,wFALF,4DAA8C4H,GCHxChB,EAAe,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,WAAW,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,YAAY,KAAO,GAAG,KAAO,cAAc,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,SAAS,KAAO,MAAM,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,aAAe,2BAA2B,KAAO,QAAQ,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAG5vC2B,EAAb,kDACE,WAAYjJ,GAAkB,uCACtBA,EAAiBsH,GAF3B,oFAIE,WAAgByB,GAAhB,SAAA3I,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAACsF,IADxC,wFAJF,4DAA6CT,GCHvChB,EAAe,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,QAAQ,KAAO,QAAQ,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,aAAe,gCAAgC,KAAO,SAAS,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,WAAW,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,iBAAiB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,WAAW,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,UAAU,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,QAAQ,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,aAAa,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,SAAS,KAAO,WAAW,KAAO,sBAAsB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,UAAU,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,QAAQ,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,qBAAqB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,UAAU,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,QAAQ,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,UAAU,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,QAAQ,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,UAAU,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,QAAQ,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,cAAc,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,WAAW,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,UAAU,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,YAAY,KAAO,aAAa,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,YAAY,KAAO,KAAK,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,KAAK,KAAO,cAAc,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,WAAW,KAAO,cAAc,KAAO,cAAc,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,WAAW,KAAO,cAAc,KAAO,iBAAiB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,gBAAkB,OAAO,KAAO,aAGh/M4B,EAAb,kDACE,WAAYlJ,GAAkB,uCACtBA,EAAiBsH,GAF3B,2FAIE,WAAuBvH,EAASY,GAAhC,eAAAP,EAAA,yDACM+I,EAAa,GACD,MAAZpJ,EACFoJ,EAAa,cACQ,OAAZpJ,EACToJ,EAAa,cACQ,QAAZpJ,IACToJ,EAAa,gBAEI,KAAfA,EATN,gCAUiBhJ,KAAKsD,MAAM0F,EAAY,CAACxI,IAVzC,wFAJF,8DAA+C2H,GCFzChB,EAA4G,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,QAAQ,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,QAAQ,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,aAGhlI8B,EAAb,kDACE,WAAYrJ,EAASC,EAAiBE,GAAa,uCAC3CH,EAASC,EAAiBsH,EAAqBpH,GAFzD,qFAQE,WAAiBQ,GAAjB,uCAAAN,EAAA,sEACQD,KAAKY,QADb,sBAAoCF,EAApC,iCAAoCA,EAApC,0BAEoBV,KAAKqC,cACrB,QADgB,CAEf9B,GAFe,OAEIG,GACpBH,GALJ,cAEQc,EAFR,OAOEH,QAAQC,IAAIE,GACRiB,EAAQ,CACV,CACEd,KAAMjB,EACNgC,GAAIvC,KAAKH,gBACTwB,IAAKmB,IAAKC,MAAMC,YAAYrB,GAC5BsB,MAAOH,IAAKC,MAAMC,YAAY,KAC9BE,MAAM,EAAA5C,KAAKK,SAASQ,SAAd,eACJN,GADI,OAEDG,IACHmC,cAjBR,UAoBiBC,OAAOC,SAASC,QAAQ,CACrCvC,OAAQ,sBACRwC,OAAQX,IAtBZ,eAoBMZ,EApBN,iBAwBe,IAAIwB,QAAQlD,KAAKmD,uBAAuBzB,IAxBvD,0FARF,4DAAqC/B,GCH/BwH,EAAa,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,QAAQ,KAAO,SAAS,CAAC,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,KAAK,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,KAAK,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,YAAY,KAAO,QAAQ,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,aAG3mF+B,EAAb,kDACE,WAAYtJ,EAASC,EAAiBE,GAAa,uCAC3CH,EAASC,EAAiBsH,EAAcpH,GAFlD,+EAQE,WAAWQ,GAAX,uCAAAN,EAAA,sEACQD,KAAKY,QADb,sBAA8BF,EAA9B,iCAA8BA,EAA9B,0BAGoBV,KAAKqC,cACrB,QADgB,CAEf9B,GAFe,OAEIG,GACpBH,GANJ,cAGQc,EAHR,OASMiB,EAAQ,CACV,CACEd,KAAMjB,EACNgC,GAAIvC,KAAKH,gBACTwB,IAAKmB,IAAKC,MAAMC,YAAYrB,GAC5BsB,MAAOH,IAAKC,MAAMC,YAAY,KAC9BE,MAAM,EAAA5C,KAAKK,SAASQ,SAAd,eACJN,GADI,OAEDG,IACHmC,cAlBR,SAsBiBC,OAAOC,SAASC,QAAQ,CACrCvC,OAAQ,sBACRwC,OAAQX,IAxBZ,cAsBMZ,EAtBN,iBA0Be,IAAIwB,QAAQlD,KAAKmD,uBAAuBzB,IA1BvD,0FARF,4DAAuC/B,G,gBCHjCwH,EAAe,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,qBAAqB,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,iBAAiB,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,UAAU,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,oBAAoB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,uBAAuB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,iBAAiB,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,cAAc,KAAO,SAAS,KAAO,MAAM,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,MAAM,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,wBAAwB,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,iBAAiB,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,kBAAkB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,mBAAmB,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,cAAc,KAAO,SAAS,KAAO,MAAM,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,wBAAwB,KAAO,YAAY,KAAO,YAAY,KAAO,cAAc,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,qBAAqB,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,YAAY,KAAO,aAAa,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,WAAW,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAG1rMgC,EAAb,kDACE,WAAYvJ,EAASC,EAAiBE,GAAa,uCAC3CH,EAASC,EAAiBsH,EAAcpH,GAFlD,uFAQE,WAAmBQ,EAAgB0F,GAAnC,eAAAhG,EAAA,6DACQS,EAAO,CAAC,IAAK0I,YAAcnD,IADnC,SAEejG,KAAKuH,UAAU,UAAW7G,EAAMH,GAF/C,wFARF,6HAYE,WAAsBA,EAAgB0F,GAAtC,eAAAhG,EAAA,6DACQS,EAAO,CAAC,IAAK0I,YAAcnD,IADnC,SAEejG,KAAKuH,UAAU,WAAY7G,EAAMH,GAFhD,wFAZF,0HAgBE,WAAmBA,GAAnB,eAAAN,EAAA,sEACoBD,KAAKsD,MAAM,WAAY,CAAC,IAAK/C,IADjD,YACQQ,EADR,UAEaA,EAAIkF,OAFjB,yCAGWtC,YAAc5C,EAAIkF,SAH7B,cAKI/E,QAAQC,IAAI,4BALhB,kBAMW,KANX,gDAhBF,4DAA6BxB,GCHvBwH,EAAe,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,eAAe,KAAO,YAAY,KAAO,kBAAkB,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,kBAAkB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,qBAAqB,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,UAAU,KAAO,UAAU,CAAC,aAAe,aAAa,KAAO,aAAa,KAAO,cAAc,CAAC,aAAe,aAAa,KAAO,cAAc,KAAO,eAAe,KAAO,aAAa,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,aAG7pHkC,EAAb,kDACE,WAAYzJ,EAASC,EAAiBE,GAAa,uCAC3CH,EAASC,EAAiBsH,EAAcpH,GAFlD,uFAQE,WAAmBQ,EAAgB0F,GAAnC,eAAAhG,EAAA,6DACQS,EAAO,CAAC0I,YAAcnD,IAD9B,SAEejG,KAAKuH,UAAU,eAAgB7G,EAAMH,GAFpD,wFARF,6HAaE,WAAsBA,EAAgB0F,GAAtC,eAAAhG,EAAA,6DACQS,EAAO,CAAC0I,YAAcnD,IAD9B,SAEejG,KAAKuH,UAAU,kBAAmB7G,EAAMH,GAFvD,wFAbF,2HAkBE,4BAAAN,EAAA,sEACoBD,KAAKsD,MAAM,iBAD/B,cACQvC,EADR,yBAES,CACLsD,gBAAiBV,YAAc5C,EAAIsD,iBACnCC,mBAAoBX,YAAc5C,EAAIuD,sBAJ1C,gDAlBF,yHA0BE,4BAAArE,EAAA,sEACoBD,KAAKsD,MAAM,kBAD/B,cACQvC,EADR,yBAES,CACL8C,UAAWF,YAAc5C,KAH7B,gDA1BF,uHAiCE,4BAAAd,EAAA,sEACoBD,KAAKsD,MAAM,kBAD/B,YACQvC,EADR,UAEaA,EAAI8C,UAFjB,yCAGWF,YAAc5C,EAAI8C,YAH7B,aAKQ,IAAIzC,MAAJ,mDACwCpB,KAAKQ,cANrD,gDAjCF,2DAA6Bb,GCHvBwH,EAAe,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,qBAAqB,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,oBAAoB,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,UAAU,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,oBAAoB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,uBAAuB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,kBAAkB,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,cAAc,KAAO,SAAS,KAAO,MAAM,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,qBAAqB,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,MAAM,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,yBAAyB,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,kBAAkB,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,kBAAkB,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,kBAAkB,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,cAAc,KAAO,SAAS,KAAO,MAAM,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,yBAAyB,KAAO,YAAY,KAAO,YAAY,KAAO,cAAc,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,oBAAoB,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,mBAAmB,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,YAAY,KAAO,aAAa,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,WAAW,QAAU,GAAG,gBAAkB,aAAa,KAAO,aAGnqNmC,EAAb,kDACE,WAAY1J,EAASC,EAAiBE,GAAa,uCAC3CH,EAASC,EAAiBsH,EAAcpH,GAFlD,uFAQE,WAAmBQ,EAAgB0F,GAAnC,eAAAhG,EAAA,6DACQS,EAAO,CAAC,IAAK0I,YAAcnD,IADnC,SAEejG,KAAKuH,UAAU,UAAW7G,EAAMH,GAF/C,wFARF,6HAYE,WAAsBA,EAAgB0F,GAAtC,eAAAhG,EAAA,6DACQS,EAAO,CAAC,IAAK0I,YAAcnD,IADnC,SAEejG,KAAKuH,UAAU,WAAY7G,EAAMH,GAFhD,wFAZF,0HAgBE,WAAmBA,GAAnB,eAAAN,EAAA,sEAEoBD,KAAKsD,MAAM,WAAY,CAAC,IAAK/C,IAFjD,YAEQQ,EAFR,UAGaA,EAAIkF,OAHjB,yCAIWtC,YAAc5C,EAAIkF,SAJ7B,cAMI/E,QAAQC,IAAI,4BANhB,kBAOW,KAPX,gDAhBF,4DAA8BxB,GCHxBwH,EAAa,CAAC,CAAC,OAAS,GAAG,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,QAAQ,KAAO,GAAG,KAAO,UAAU,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,aAG33GoC,EAAb,kDACE,WAAY3J,EAASC,EAAiBW,EAAagJ,GAAc,IAAD,8BAC9D,cAAM5J,EAASC,EAAiBsH,EAAcqC,IACzChJ,YAAcA,EAF2C,EADlE,qFAUE,WAAiBD,GAAjB,eAAAN,EAAA,sEACwBD,KAAKsD,MAAM,YAAa,CAC5C/C,EACAP,KAAKQ,cAHT,cACM6G,EADN,yBAKS1D,YAAc0D,GAAWC,GAAG,IALrC,gDAVF,kHAiBE,WAAa/G,GAAb,SAAAN,EAAA,sEAEeD,KAAKuH,UAChB,UACA,CAACvH,KAAKQ,YAAagH,KACnBjH,GALJ,wFAjBF,oHA0BE,sBAAAN,EAAA,sEACeD,KAAKsD,MAAM,YAD1B,wFA1BF,mHA8BE,WAAemE,GAAf,SAAAxH,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAACmE,IADxC,wFA9BF,mHAkCE,WAAcA,GAAd,qBAAAxH,EAAA,sEACgCiD,QAAQwE,IAAI,CACxC1H,KAAK2H,SAASF,GACdzH,KAAK4H,aAHT,0CACS7G,EADT,KACc6G,EADd,uBAKSpE,YAAGzC,GAAM6G,IALlB,gDAlCF,4DAAkCjI,GCH5BwH,EAAa,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,iBAAiB,KAAO,SAAS,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,eAAe,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,QAAQ,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,eAAe,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,SAAS,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,YAAY,KAAO,mBAAmB,KAAO,SAAS,CAAC,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,QAAQ,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,KAAO,SAAS,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,aAG5lLsC,EAAb,kDACE,WAAY7J,EAASC,EAAiB2J,GAAc,uCAC5C5J,EAASC,EAAiBsH,EAAcqC,GAFlD,iFAQE,WAAajJ,EAAgB0F,EAAQyD,GAArC,iBAAAzJ,EAAA,+DACiD0J,YAC7CD,GADuBE,EAD3B,EACUC,gBADV,kBAIS7J,KAAKuH,UACV,SACA,CAAC6B,YAAcnD,GAASyD,EAAWE,GACnCrJ,IAPJ,gDARF,wHAmBE,WACEA,EACA0F,EACA6D,EACAC,EACAC,EACA/E,EACAC,EACAC,GARF,SAAAlF,EAAA,+EAUSD,KAAKuH,UACV,QACA,CAACtB,EAAQ6D,EAAaC,EAAcC,EAAW/E,EAAGC,EAAGC,GACrD5E,IAbJ,gDAnBF,0EAAsCZ,GCczBsK,GAAmB,WAC9B,IAAMC,EAAsB,GAC5B,OAAO,WAA8B,IAA7BC,EAA4B,wDAC5B1C,EAAU2C,6BAAmBC,IAAQC,MAAOH,GAC5CI,EAAM9C,EACZ,GAAI+C,OAAOC,KAAKP,GAAqBjJ,SAASsJ,GAC5C,OAAOL,EAAoBK,GAE7B,IAAMG,EAAW,IAAI/B,EAAiBlB,GAEtC,OADAyC,EAAoBK,GAAOG,EACpBA,GAVqB,GAcnBC,GAA2B,WACtC,IAAMT,EAAsB,GAC5B,OAAO,WAA8B,IAA7BC,EAA4B,wDAC5B1C,EAAUmD,qCAA2BP,IAAQC,MAAOH,GACpDI,EAAM9C,EACZ,GAAI+C,OAAOC,KAAKP,GAAqBjJ,SAASsJ,GAC5C,OAAOL,EAAoBK,GAE7B,IAAMG,EAAW,IAAI7B,EAAyBpB,GAE9C,OADAyC,EAAoBK,GAAOG,EACpBA,GAV6B,GAc3BG,GAA0B,WACrC,IAAMX,EAAsB,GAC5B,OAAO,WAA8B,IAA7BC,EAA4B,wDAC5B1C,EAAUqD,oCAA0BT,IAAQC,MAAOH,GACnDI,EAAM9C,EAEZ,GAAI+C,OAAOC,KAAKP,GAAqBjJ,SAASsJ,GAC5C,OAAOL,EAAoBK,GAE7B,IAAMG,EAAW,IAAI5B,EAAwBrB,GAE7C,OADAyC,EAAoBK,GAAOG,EACpBA,GAX4B,GAe1BK,GAA4B,WACvC,IAAMb,EAAsB,GAC5B,OAAO,WACL,IAAMzC,EAAU,6CAChB,GAAI+C,OAAOC,KAAKP,GAAqBjJ,SAASwG,GAC5C,OAAOyC,EAAoBzC,GAE7B,IAAMiD,EAAW,IAAI3B,EAA0BtB,GAE/C,OADAyC,EAAoBzC,GAAWiD,EACxBA,GAT8B,GAa5BM,GAAwB,WACnC,IAAMC,EAA2B,GACjC,OAAO,SAACrL,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAKQ,GAA0BhK,SAASsJ,GACjD,OAAOU,EAAyBV,GAElC,IAAMW,EAAgB,IAAI7H,EACxBzD,EACAC,EACAE,GAIF,OADAkL,EAAyBV,GAAOW,EACzBA,GAnB0B,GAuBxBC,GAAiB,WAC5B,IAAMC,EAAoB,GAC1B,OAAO,SAACxL,EAASC,EAAiBW,GAAqC,IACjE+J,EADyCxK,EAAuB,wDAOpE,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,YAAoCW,EAApC,eAEA,UAAMZ,EAAN,YAAiBC,EAAjB,YAAoCW,GAErCgK,OAAOC,KAAKW,GAAmBnK,SAASsJ,GAC1C,OAAOa,EAAkBb,GAE3B,IAAMc,EAAS,IAAIjE,EACjBxH,EACAC,EACAW,EACAT,GAIF,OADAqL,EAAkBb,GAAOc,EAClBA,GApBmB,GAwBjBC,GAAiB,WAC5B,IAAMC,EAAoB,GAC1B,OAAO,SAAC3L,EAASC,EAAiBW,GAAqC,IACjE+J,EADyCxK,EAAuB,wDAOpE,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,YAAoCW,EAApC,eAEA,UAAMZ,EAAN,YAAiBC,EAAjB,YAAoCW,GAErCgK,OAAOC,KAAKc,GAAmBtK,SAASsJ,GAC1C,OAAOgB,EAAkBhB,GAE3B,IAAMiB,EAAS,IAAI3D,EACjBjI,EACAC,EACAW,EACAT,GAIF,OADAwL,EAAkBhB,GAAOiB,EAClBA,GApBmB,GAwBjBC,GAAiB,WAC5B,IAAMC,EAAoB,GAC1B,OAAO,SAAC9L,EAASC,EAAiBW,GAAqC,IACjE+J,EADyCxK,EAAuB,wDAOpE,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,YAAoCW,EAApC,eAEA,UAAMZ,EAAN,YAAiBC,EAAjB,YAAoCW,GAErCgK,OAAOC,KAAKiB,GAAmBzK,SAASsJ,GAC1C,OAAOmB,EAAkBnB,GAE3B,IAAMoB,EAAS,IAAIzD,EACjBtI,EACAC,EACAW,EACAT,GAIF,OADA2L,EAAkBnB,GAAOoB,EAClBA,GApBmB,GAwBjBC,GAA0B,WACrC,IAAMC,EAAoB,GAC1B,OAAO,SAACjM,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAKoB,GAAmB5K,SAASsJ,GAC1C,OAAOsB,EAAkBtB,GAE3B,IAAMuB,EAAS,IAAI7C,EAAgBrJ,EAASC,EAAiBE,GAG7D,OADA8L,EAAkBtB,GAAOuB,EAClBA,GAf4B,GAmB1BC,GAAkB,WAC7B,IAAMC,EAAqB,GAC3B,OAAO,SAACpM,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAKuB,GAAoB/K,SAASsJ,GAC3C,OAAOyB,EAAmBzB,GAE5B,IAAM0B,EAAU,IAAI9C,EAAQvJ,EAASC,EAAiBE,GAEtD,OADAiM,EAAmBzB,GAAO0B,EACnBA,GAdoB,GAkBlBC,GAAkB,WAC7B,IAAMC,EAAqB,GAC3B,OAAO,SAACvM,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAK0B,GAAoBlL,SAASsJ,GAC3C,OAAO4B,EAAmB5B,GAE5B,IAAM6B,EAAU,IAAI/C,EAAQzJ,EAASC,EAAiBE,GAEtD,OADAoM,EAAmB5B,GAAO6B,EACnBA,GAdoB,GAkBlBC,GAAmB,WAC9B,IAAMC,EAAsB,GAC5B,OAAO,SAAC1M,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAK6B,GAAqBrL,SAASsJ,GAC5C,OAAO+B,EAAoB/B,GAE7B,IAAMgC,EAAW,IAAIjD,EAAS1J,EAASC,EAAiBE,GAExD,OADAuM,EAAoB/B,GAAOgC,EACpBA,GAdqB,GA4CnBC,GAAe,WAC1B,IAAMC,EAAkB,GACxB,OAAO,SAAC7M,EAASC,EAAiBW,GAAqC,IACjE+J,EADyCxK,EAAuB,wDAOpE,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAKgC,GAAiBxL,SAASsJ,GACxC,OAAOkC,EAAgBlC,GAEzB,IAAMmC,EAAO,IAAInD,EACf3J,EACAC,EACAW,EACAT,GAGF,OADA0M,EAAgBlC,GAAOmC,EAChBA,GAnBiB,GAuBfC,GAAmB,WAC9B,IAAMC,EAAsB,GAC5B,OAAO,SAAChN,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAKmC,GAAqB3L,SAASsJ,GAC5C,OAAOqC,EAAoBrC,GAE7B,IAAMsC,EAAW,IAAIpD,EAAiB7J,EAASC,EAAiBE,GAEhE,OADA6M,EAAoBrC,GAAOsC,EACpBA,GAdqB,GAkBnBC,GAA4B,WACvC,IAAMjB,EAAoB,GAC1B,OAAO,SAACjM,EAASC,GAAyC,IACpD0K,EAD4BxK,EAAuB,wDAOvD,GAJEwK,EADExK,EACC,UAAMH,EAAN,YAAiBC,EAAjB,eAEA,UAAMD,EAAN,YAAiBC,GAElB2K,OAAOC,KAAKoB,GAAmB5K,SAASsJ,GAC1C,OAAOsB,EAAkBtB,GAE3B,IAAMuB,EAAS,IAAI5C,EAAkBtJ,EAASC,EAAiBE,GAE/D,OADA8L,EAAkBtB,GAAOuB,EAClBA,GAd8B,I,iCCxTzC,gFAEaiB,EAAsB,WAEjC,OADeC,cACDnI,QAGHoI,EAAkB,SAACrN,EAASsN,GACvC,IAAMC,EAAoBJ,IAAsBvG,QAAO,SAAC4G,GAAD,OACrDF,EACIE,EAAExN,UAAYA,GAAWwN,EAAEF,SAAWA,EACtCE,EAAExN,UAAYA,KAEpB,GAAIuN,EAAkBE,OAAS,EAC7B,OAAIH,EACKC,EAAkB,GAElBA,EAGX,MAAM,IAAI/L,MAAJ,6CAAgDxB,EAAhD,uBAAsEsN,EAAtE,S,kCCpBR,oWAIAI,IAAUC,OAAO,CACfC,eAAgB,GAChBC,cAAeH,IAAUI,WACzBC,eAAgB,MAGX,IAAMnK,EAAK,SAACb,GAAqB,IAAdiL,EAAa,uDAAN,EAC/B,OAAa,IAATA,EACKN,IAAU3K,GAEfiL,EAAO,EACFN,IAAU3K,GAAOuE,MAAMoG,IAAU,IAAD,OAAK,IAAIO,OAAOD,MAElDN,IAAU3K,GAAOmL,IAAIR,IAAU,IAAD,OAAK,IAAIO,QAAQD,OAG3CG,EAAM,SAACC,EAAQC,GAC1B,OAAID,EAAOE,IAAID,GACND,EAEFC,GAGIE,EAAM,SAACH,EAAQC,GAC1B,OAAID,EAAOI,IAAIH,GACND,EAEFC,GAeII,EAAc,SAAC1L,GAAD,OAAWH,IAAKC,MAAM4L,YAAY1L,IAQhDgB,EAAgB,SAAChB,GAAD,OAAWa,EAAGb,GAAQ,KAEtCyG,EAAgB,SAACzG,GAAD,OAAWa,EAAGb,EAAO,IAAI2L,QAAQ,IAGjD5L,EAAc,SAACC,GAAD,OAAWH,IAAKC,MAAMC,YAAYC,IAIhD4L,EAAY,iBAAwB,qBAAXzL,QAAqD,qBAApBA,OAAO0L,UAEjEC,EAAU,iBAAwB,qBAAX3L,QAA0B4L,UAAUC,UAAU1N,SAAS,Y,kLC9D9Eb,EAAgB,WAC3B,IAAIwO,EAAe,KACnB,OAAO,WACL,GAAqB,OAAjBA,EACF,OAAOA,EAET,IAAI1O,EACJ,QAA+B2O,IAA3B,YAAO/L,OAAOC,UAIhB,MAAM,IAAI3B,MAAM,iCAGlB,OANElB,EAAO,IAAIsC,IAAKM,OAAOC,UAKzB6L,EAAe1O,EACRA,GAdkB,GAkBhBC,EAAe,WAC1B,IAAM2O,EAAkB,GACxB,8CAAO,WAAMlP,GAAN,iBAAAK,EAAA,0DACDuK,OAAOC,KAAKqE,GAAiB7N,SAASrB,GADrC,yCAEIkP,EAAgBlP,IAFpB,aAID,CAAC,IAAK,IAAK,MAAMqB,SAASrB,IAC5BsB,QAAQC,IAAR,2BACsBvB,EADtB,4CALG,SASqBmP,YAAoBnP,GATzC,cASC0I,EATD,OAUCpI,EAAO,IAAIsC,IAAK,IAAIA,IAAK4F,UAAUC,aAAaC,IACtDwG,EAAgBlP,GAAWM,EAXtB,kBAYEA,GAZF,2CAAP,sDAF0B,I,y7BCnBf8O,EAAsB,WAEjC,OADehC,cACDiC,eAGHC,EAAkB,SAACtP,GAC9B,IAAMuN,EAAoB6B,IAAsBxI,QAAO,SAAC4G,GAAD,OAAMA,EAAExN,UAAYA,KAC3E,GAAIuN,EAAkBE,OAAS,EAC7B,OAAOF,EAAkB,GAE3B,MAAM,IAAI/L,MAAJ,6CAAgDxB,EAAhD,S,iCCZR,wIAAO,IAAM4I,EAA0B,iBAAM,CAE3C,kDACA,kDACA,kDACA,kDACA,oDAGW4B,EAAqB,WAAmC,IAAlC+E,EAAiC,uDAA3B,MAAOhF,EAAoB,uCAClE,MAAa,SAARgF,GAA0B,eAARA,IAAyBhF,EAKzC,6CAHE,8CAMES,EAA6B,WAAmC,IAAlCuE,EAAiC,uDAA3B,MAAOhF,EAAoB,uCAC1E,MAAa,SAARgF,GAA0B,eAARA,IAAyBhF,EAKzC,6CAHE,8CAMEW,EAA4B,WAAmC,IAAlCqE,EAAiC,uDAA3B,MAAOhF,EAAoB,uCACzE,MAAa,SAARgF,GAA0B,eAARA,IAAyBhF,EAKzC,6CAHE,+C,wHCOLiF,EAAe,SAACC,GACpB,IAAK,IAAI/N,EAAI+N,EAAMhC,OAAS,EAAG/L,EAAI,EAAGA,IAAK,CACzC,IAAMgO,EAAIC,KAAKC,MAAMD,KAAKE,UAAYnO,EAAI,IACpCoO,EAAOL,EAAM/N,GACnB+N,EAAM/N,GAAK+N,EAAMC,GACjBD,EAAMC,GAAKI,EAEb,OAAOL,GAeHM,EAAc,uCAAG,WAAOC,GAAP,mBAAA3P,EAAA,6DACjBc,EAAM,CAAE6O,IAAKA,EAAKvJ,aAAc,EAAGwJ,SAAUC,OAAOC,kBADnC,SAGb7P,EAAO,IAAIsC,IAAK,IAAIA,IAAK4F,UAAUC,aAAauH,IAChDI,EAAYC,KAAKC,MAJJ,SAKKhQ,EAAKI,IAAIqP,iBALd,OAKnB5O,EAAIsF,YALe,OAMnBtF,EAAI8O,SAAWI,KAAKC,MAAQF,EANT,kDAQnB9O,QAAQC,IAAR,yBAA8ByO,EAA9B,2BARmB,iCAUd7O,GAVc,0DAAH,sDAaPwH,EAAkB,uCAAG,oDAAAtI,EAAA,sDAGhC,IAHuCkQ,EAAP,+BAAc,GAC9CA,EAAOf,EAAae,GAChBC,EAAW,GACN9O,EAAI,EAAGA,EAAI6O,EAAK9C,OAAQ/L,IAC/B8O,EAASrJ,KAAK4I,EAAeQ,EAAK7O,KAJJ,gBAMP4B,QAAQwE,IAAI0I,GANL,UAOhCC,GADIA,EAN4B,QAOJC,MAAK,SAACrQ,EAAGsQ,GAAJ,OAAUtQ,EAAE4P,SAAWU,EAAEV,YAEpDW,EAAoBH,EAAaI,QAAO,SAACxQ,EAAGsQ,GAAJ,OAA6B,IAAnBA,EAAElK,YAAqBpG,EAAIsQ,EAAElK,YAAcpG,EAAIsQ,EAAElK,YAAcpG,IAAG,GACpHyQ,EAAQL,EAAaM,WAAU,SAACJ,GAAD,OAAOA,EAAElK,cAAgBmK,OACxDzP,EAAMsP,EAAaK,GAAOd,KAExBgB,WAAW,QAba,0CAcvB7P,GAduB,cAgBxB,IAAIK,MAAJ,uDAA0D+O,IAhBlC,4CAAH,sD,yJCjElBpB,EAAmB,uCAAG,WAAOnP,GAAP,iBAAAK,EAAA,yDACjCL,EAAUiR,YAAiBjR,MACrBuQ,EAAOW,YAAqBlR,IACzByN,OAAS,GAHe,gCAIb9E,YAAmB4H,GAJN,cAI1BP,EAJ0B,yBAMzBA,GANyB,aAQzB,IAAIxO,MAAJ,2DACgDxB,IATvB,4CAAH,sDAanBmR,EAAsB,SAACnR,GAClC,IAAMyQ,EAAeW,cACrB,GAAIX,EAAazQ,GACf,OAAO6B,SAAS4O,EAAazQ,IAE7B,MAAM,IAAIwB,MAAJ,oDAAuDxB,M,qrHCpB3DqR,E,wKAEJ,WACEC,IAAUC,U,kCAEZ,WACED,IAAUE,S,oBAEZ,WACE,OACE,4B,GAVoBC,IAAMC,WAsBjBC,IAPW,SAACC,GACzB,OAAOC,IAAS,CACdC,OAAQF,EACRG,QAAS,kBAAI,cAACV,EAAD,S,ybCRXW,EAAU,SAACC,GACf,IAAIC,EAAY,GAChB,OAAO,SAAClS,EAAS6H,GACf,IAAM8C,EAAM9C,EACZ,OAAI+C,OAAOC,KAAKqH,GAAW7Q,SAASsJ,KAGlCuH,EAAUvH,GAAO,IAAIsH,EAAMjS,EAAS6H,IAF7BqK,EAAUvH,KAQVnK,EAAgB,WAC3B,IAAIwO,EAAe,KACnB,OAAO,WACL,GAAqB,OAAjBA,EACF,OAAOA,EAET,QAA+BC,IAA3B,YAAO/L,OAAOC,UAEhB,OADA6L,EAAe,IAAIpM,IAAKM,OAAOC,UAI/B,MAAM,IAAI3B,MAAM,kCAXO,GAgBhBjB,EAAe,WAC1B,IAAM2O,EAAkB,GACxB,MAAO,CACCxE,IADD,SACK1K,GAAU,OAAD,8GACb4K,OAAOC,KAAKqE,GAAiB7N,SAASrB,GADzB,yCAERkP,EAAgBlP,IAFR,aAIb,CAAC,IAAK,IAAK,MAAMqB,SAASrB,IAC5BsB,QAAQC,IAAR,2BACsBvB,EADtB,4CALe,SASSmP,YAAoBnP,GAT7B,cASX0I,EATW,OAUjBwG,EAAgBlP,GAAW,IAAI4C,IAC7B,IAAIA,IAAK4F,UAAUC,aAAaC,IAXjB,kBAaVwG,EAAgBlP,IAbN,+CAHK,GAqBfoL,EAAuB4G,EAAQvO,KAE/B0O,EAA6BH,EAAQI,KAErC7G,EAAgByG,EAAQK,KAExBxG,EAAgBmG,EAAQM,KAExB5G,EAAgBsG,EAAQO,KAExBC,EAAiB,WAC5B,IAAMC,EAAc,GACpB,OAAO,SAACzS,EAAS6H,EAASyF,EAAQoF,GAChC,IAAM/H,EAAM9C,EACZ,OAAI+C,OAAOC,KAAK4H,GAAapR,SAASsJ,KAGhC,CAAC,SAAStJ,SAASrB,GACrByS,EAAY9H,GAAO,IAAIgI,IACrB3S,EACA6H,EACAyF,EACAoF,GAEO,CAAC,OAAOrR,SAASrB,GAC1ByS,EAAY9H,GAAO,IAAIiI,IAAc5S,EAAS6H,EAASyF,EAAQoF,GAE/DD,EAAY9H,GAAO,IAAIkI,IAAU7S,EAAS6H,EAASyF,EAAQoF,IAZtDD,EAAY9H,IALK,GAwBjBmI,EAAuBd,EAAQe,KAC/BC,EAAuBhB,EAAQiB,M,uxECpG/BC,EAAc,WACzB,MAAO,CAAC,IAAK,IAAK,KAAM,KAAM,MAAO,MAAO,MAAO,UAExCC,EAAoB,CAC/B,CACEC,cAAe,CACb,iEAEFpT,QAAS,KAEX,CACEoT,cAAe,CACb,mCACA,oCACA,sCAEFpT,QAAS,MAEX,CACEoT,cAAe,CAAC,sCAChBpT,QAAS,OAEX,CACEoT,cAAe,CACb,iEAEFpT,QAAS,KAEX,CACEoT,cAAe,CACb,+DAEFpT,QAAS,MAEX,CACEoT,cAAe,CAEb,kDACA,kDACA,kDACA,kDACA,mDAEFpT,QAAS,MAEX,CACEoT,cAAe,CAAC,sCAChBpT,QAAS,QAIAqT,EAA6B,SAACrT,GACzC,IAgDMmB,EAhDoB,CACxB,CACEiS,cAAe,CACb,iEAEFpT,QAAS,KAEX,CACEoT,cAAe,CACb,mCACA,oCACA,sCAEFpT,QAAS,MAEX,CACEoT,cAAe,CAAC,sCAChBpT,QAAS,OAEX,CACEoT,cAAe,CACb,iEAEFpT,QAAS,KAEX,CACEoT,cAAe,CACb,+DAEFpT,QAAS,MAEX,CACEoT,cAAe,CACb,kDACA,kDACA,kDACA,kDACA,kDACA,mDAEFpT,QAAS,MAEX,CACEoT,cAAe,CAAC,sCAChBpT,QAAS,QAIiB4G,QAAO,SAAClF,GAAD,OAAOA,EAAE1B,UAAaA,KAE3D,GAAImB,EAAIsM,OAAS,EACf,OAAOtM,EAAI,GAAGiS,cAEd,MAAM,IAAI5R,MAAJ,0DAA6DxB,KCvF1DsT,EAA2B,WAAkB,IAAjB/D,EAAgB,uDAAV,MAE7C,MAAY,SAARA,EAEK,CACL,CACEgE,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,UACdC,aAAc,OACdrG,OAAQ,SACRsG,KAAM,MACN5T,QAAS,KACT6T,QAAS,KACTC,SAAS,GAEX,CACEP,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,UACdC,aAAc,OACdrG,OAAQ,OACRsG,KAAM,OACN5T,QAAS,KACT6T,QAAS,KACTC,SAAS,GAEX,CACEP,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,UACdC,aAAc,OACdrG,OAAQ,QACRsG,KAAM,QACN5T,QAAS,KACT6T,QAAS,MAEX,CACEN,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,WACdC,aAAc,OACdrG,OAAQ,SACRsG,KAAM,MACN5T,QAAS,IACT6T,QAAS,KACTC,SAAS,GAEX,CACEP,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,WACdC,aAAc,MACdrG,OAAQ,SACRsG,KAAM,MACN5T,QAAS,IACT6T,QAAS,KACTC,SAAS,GAEX,CACEP,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,UACdC,aAAc,OACdrG,OAAQ,SACRsG,KAAM,MACN5T,QAAS,MACT6T,QAAS,KACTC,SAAS,IAKR,CACL,CACEP,KAAM,6CACN9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACR2H,aAAc,UACdC,aAAc,OACdrG,OAAQ,SACRsG,KAAM,MACN5T,QAAS,KACT6T,QAAS,QAmBFE,EAA8B,WAAkB,IAAjBxE,EAAgB,uDAAV,MAChD,MAAY,SAARA,EACK,CACL,CACEgE,KAAM,6CACN9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,IACT2T,aAAc,gBACdrG,OAAQ,QAIdhM,QAAQC,IAAI,gEACL,KAeIyS,EAA8B,WAAkB,IAAjBzE,EAAgB,uDAAV,MAChD,MAAY,SAARA,EACK,CACL,CACEgE,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,UACd1T,QAAS,KACT2T,aAAc,UACdrG,OAAQ,KACRwG,SAAS,IAIN,IAGEG,EAA+B,WAAkB,IAAjB1E,EAAgB,uDAAV,MACjD,MAAY,SAARA,EACK,CACL,CACEgE,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,SACd1T,QAAS,KACT2T,aAAc,gBACdrG,OAAQ,OAIL,IAIE4G,EAA6B,WAAkB,IAAjB3E,EAAgB,uDAAV,MAC/C,MAAY,SAARA,EACK,CACL,CACEgE,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,IACT2T,aAAc,gBACdrG,OAAQ,KACR6G,KAAM,OAER,CACEZ,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,UACd1T,QAAS,KACT2T,aAAc,UACdrG,OAAQ,KACR6G,KAAM,MACNL,SAAS,GAEX,CACEP,KAAQ,6CACR9H,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRyH,OAAQ,6CACRC,YAAa,6CACbC,aAAc,SACd1T,QAAS,KACT2T,aAAc,gBACdrG,OAAQ,KACR6G,KAAM,SAIH,IAIEC,EAAsC,SAACpU,GAClD,IAMMqU,EANU,CACd,CACE/K,kBAAmB,6CACnBtJ,QAAS,OAGkB4G,QAAO,SAAClF,GAAD,OAAOA,EAAE1B,UAAYA,KAC3D,GAAIqU,EAAe5G,OAAS,EAC1B,OAAO4G,EAAe,GAAG/K,kBAEzB,MAAM,IAAI9H,MAAJ,oEACyDxB,KAetDsU,EAA+B,WAAkB,IAAjB/E,EAAgB,uDAAV,MACjD,MAAY,SAARA,EACK,CACL,CACEgF,KAAM,6CACNC,SAAU,6CACVb,aAAc,OACd3T,QAAS,KAEX,CACEuU,KAAM,6CACNC,SAAU,6CACVb,aAAc,OACd3T,QAAS,MAEX,CACEuU,KAAM,6CACNC,SAAU,6CACVb,aAAc,OACd3T,QAAS,QAIR,CACL,CACEuU,KAAM,6CACNC,SAAU,6CACVb,aAAc,OACd3T,QAAS,KAEX,CACEuU,KAAM,6CACNC,SAAU,6CACVb,aAAc,OACd3T,QAAS,MAEX,CACEuU,KAAM,6CACNC,SAAU,6CACVb,aAAc,OACd3T,QAAS,SAKFyU,EAA6B,WAAkB,IAAjBlF,EAAgB,uDAAV,MAC/C,MAAY,SAARA,EACK,CACL,CACE9D,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,KACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,OACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,KACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,OACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,KACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,OACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,MACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,MACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,MACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,MACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,IACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,QACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,IACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,OACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,GAEb,CACEnJ,OAAQ,6CACRG,OAAQ,6CACRG,OAAQ,6CACRwH,KAAM,6CACNC,OAAQ,6CACRC,YAAa,6CACbzT,QAAS,IACT0U,SAAS,EACT1E,IACE,4FACF2D,aAAc,gBACdgB,aAAa,EACbb,SAAS,EACTc,WAAW,IAIR,IAIExD,EAA4B,WACvC,IAAMyD,EAAuB,CAC3B,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SAEF,OAAO3B,IAAcrC,QAAO,SAACiE,EAAOpT,EAAGoP,GAErC,OADAgE,EAAMpT,GAAKmT,EAAqB/D,GACzBgE,IACN,K,qDC1eL,gFAKO,IAAMC,EAAsB,WAAkB,IAAjBxF,EAAgB,uDAAV,MACxC,MAAY,SAARA,GAA0B,eAARA,GAEZyF,GAAWA,uOAAeA,4BAI3B,mCAKEC,EAA4B,WAAkB,IAAjB1F,EAAgB,uDAAV,MAC9C,MAAY,SAARA,EACK,CAAC,iBAAkB,sBAEnB,CAAC,qBAAsB,6B,8lCCJlC7B,IAAUC,OAAO,CACfC,eAAgB,GAChBC,cAAeH,IAAUI,WACzBC,eAAgB,MAYX,IAAMnK,EAAK,SAACb,GAAqB,IAAdiL,EAAa,uDAAN,EAC/B,OAAa,IAATA,EACKN,IAAU3K,GAEfiL,EAAO,EACFN,IAAU3K,GAAOuE,MAAMoG,IAAU,IAAD,OAAK,IAAIO,OAAOD,MAElDN,IAAU3K,GAAOmL,IAAIR,IAAU,IAAD,OAAK,IAAIO,QAAQD,OAU3CG,EAAM,SAACC,EAAQC,GAC1B,OAAID,EAAOE,IAAID,GACND,EAEFC,GAUIE,EAAM,SAACH,EAAQC,GAC1B,OAAID,EAAOI,IAAIH,GACND,EAEFC,GAeI6G,EAAoB,SAACnS,GAAD,OAAWH,IAAKC,MAAMqS,kBAAkBnS,IAE5DoS,EAAc,SAACpS,GAAD,OAAWH,IAAKC,MAAMuS,UAAUrS,IAE9C0L,EAAc,SAAC1L,GAAD,OAAWH,IAAKC,MAAM4L,YAAY1L,IAEhDsS,EAAoB,SAACtS,GAAD,OAAWH,IAAKC,MAAMwS,kBAAkBtS,IAa5DyG,EAAgB,SAACzG,GAAD,OAAWa,EAAGb,EAAO,IAAI2L,QAAQ,IAEjD4G,EAAwB,SAACvS,GAAD,gBAChCa,EAAGb,GAAOwS,GAAG,GAAGjO,MAAM,KAAKoH,QAAQ,GAAGtN,WADN,MAGxB2C,EAAgB,SAAChB,GAAD,OAAWa,EAAGb,GAAQ,KAKtCyS,EAAe,SAACzS,GAAD,OAAWa,EAAGb,GAAO3B,YAEpCqU,EAAa,SAAC1S,GACzB,OAA6B,IAAzBa,EAAGb,GAAO2S,YAMH9P,EAAsB,sCAAI9E,EAAJ,yBAAIA,EAAJ,uBACjCA,EAAK6U,MACH,SAACjU,GAAD,OAEEkU,MAAMlU,EAAEN,aAAgC,MAAjBM,EAAEN,eAuBzBoO,EAAe,SAACC,GACpB,IAAK,IAAI/N,EAAI+N,EAAMhC,OAAS,EAAG/L,EAAI,EAAGA,IAAK,CACzC,IAAMgO,EAAIC,KAAKC,MAAMD,KAAKE,UAAYnO,EAAI,IACpCoO,EAAOL,EAAM/N,GACnB+N,EAAM/N,GAAK+N,EAAMC,GACjBD,EAAMC,GAAKI,EAEb,OAAOL,GAeHM,EAAc,uCAAG,WAAOC,GAAP,mBAAA3P,EAAA,6DACjBc,EAAM,CAAE6O,IAAKA,EAAKvJ,aAAc,EAAGwJ,SAAUC,OAAOC,kBADnC,SAGb7P,EAAO,IAAIsC,IAAK,IAAIA,IAAK4F,UAAUC,aAAauH,IAChDI,EAAYC,KAAKC,MAJJ,SAKKhQ,EAAKI,IAAIqP,iBALd,OAKnB5O,EAAIsF,YALe,OAMnBtF,EAAI8O,SAAWI,KAAKC,MAAQF,EANT,kDAQnB9O,QAAQC,IAAR,yBAA8ByO,EAA9B,2BARmB,iCAUd7O,GAVc,0DAAH,sDAaPwH,EAAkB,uCAAG,oDAAAtI,EAAA,sDAGhC,IAHuCkQ,EAAP,+BAAc,GAC9CA,EAAOf,EAAae,GAChBC,EAAW,GACN9O,EAAI,EAAGA,EAAI6O,EAAK9C,OAAQ/L,IAC/B8O,EAASrJ,KAAK4I,EAAeQ,EAAK7O,KAJJ,gBAMP4B,QAAQwE,IAAI0I,GANL,UAOhCC,GADIA,EAN4B,QAOJC,MAAK,SAACrQ,EAAGsQ,GAAJ,OAAUtQ,EAAE4P,SAAWU,EAAEV,YAEpDW,EAAoBH,EAAaI,QAAO,SAACxQ,EAAGsQ,GAAJ,OAA6B,IAAnBA,EAAElK,YAAqBpG,EAAIsQ,EAAElK,YAAcpG,EAAIsQ,EAAElK,YAAcpG,IAAG,GACpHyQ,EAAQL,EAAaM,WAAU,SAACJ,GAAD,OAAOA,EAAElK,cAAgBmK,OACxDzP,EAAMsP,EAAaK,GAAOd,KAExBgB,WAAW,QAba,0CAcvB7P,GAduB,cAgBxB,IAAIK,MAAJ,gEAAmE+O,IAhB3C,4CAAH,qDAqBlB3I,EACX,qEACWiO,EAAiB,SAAC7V,GAE7B,IAAI8V,EACJ,OAFA9V,EAAUiR,EAAiBjR,IAGzB,IAAK,IACH8V,EAAc,WACd,MACF,IAAK,KACHA,EAAc,MACd,MACF,IAAK,MACHA,EAAc,OACd,MACF,IAAK,IACHA,EAAc,UACd,MACF,IAAK,KACHA,EAAc,QACd,MACF,IAAK,KACHA,EAAc,aACd,MACF,IAAK,MACHA,EAAc,cACd,MACF,IAAK,MACHA,EAAc,QACd,MACF,IAAK,QACHA,EAAc,SACd,MACF,QACE,MAAM,IAAItU,MAAJ,iDAAoDxB,IAE9D,OAAO8V,GAkFIC,EAAyB,SAAC/V,EAASY,GAC9CZ,EAAUiR,EAAiBjR,GAC3B,IAGMuT,EAHQD,mCAAyB7I,UAAQC,OAAO9D,QACpD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEJ4G,QAAO,SAACoP,GAAD,OAAOA,EAAEzC,OAAS3S,KAC5C,OAAI2S,EAAK9F,OAAS,EACT,CACL7M,YAAa2S,EAAK,GAAGA,KACrB0C,cAAe1C,EAAK,GAAG9H,OACvByK,cAAe3C,EAAK,GAAG3H,OACvBuK,cAAe5C,EAAK,GAAGxH,OACvBqK,aAAc7C,EAAK,GAAGC,OACtB6C,oBAAqB9C,EAAK,GAAGE,YAC7BE,aAAcJ,EAAK,GAAGI,aACtBrG,OAAQiG,EAAK,GAAGjG,OAChBsG,KAAML,EAAK,GAAGK,KACdF,aAAcH,EAAK,GAAGG,cAMnB,IAGI4C,EAAgC,SAACtW,GAC5CA,EAAUiR,EAAiBjR,GAC3B,IAAMuW,EAAQjD,mCAAyB7I,UAAQC,OAAO9D,QACpD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEvB,GAAIuW,EAAM9I,OAAS,GACb8I,EAAM,GAAG9C,YACX,OAAO8C,EAAM,GAAG9C,aAiBTtC,EAAsB,SAACnR,GAClC,IAAMyQ,EAAeW,sCACrB,GAAIX,EAAazQ,GACf,OAAO6B,SAAS4O,EAAazQ,IAE/BsB,QAAQC,IAAR,4DAAiEvB,KAGtDwW,EAAwB,SAACxW,EAASY,GAC7CZ,EAAUiR,EAAiBjR,GAC3B,IAGMuT,EAHQQ,sCAA4BtJ,UAAQC,OAAO9D,QACvD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEJ4G,QAAO,SAACoP,GAAD,OAAOA,EAAEzC,OAAS3S,KAC5C,OAAI2S,EAAK9F,OAAS,EACT,CACL7M,YAAa2S,EAAK,GAAGA,KACrB0C,cAAe1C,EAAK,GAAG9H,OACvByK,cAAe3C,EAAK,GAAG3H,OACvBuK,cAAe5C,EAAK,GAAGxH,OACvBqK,aAAc7C,EAAK,GAAGC,OACtB6C,oBAAqB9C,EAAK,GAAGE,cAGjCnS,QAAQC,IAAR,kEAC6DvB,EAD7D,YACwEY,IAEjE,KAGI6V,EAAyB,SAACzW,EAASY,GAC9CZ,EAAUiR,EAAiBjR,GAC3B,IAGMuT,EAHQU,uCAA6BxJ,UAAQC,OAAO9D,QACxD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEJ4G,QAAO,SAACoP,GAAD,OAAOA,EAAEzC,OAAS3S,KAC5C,OAAI2S,EAAK9F,OAAS,EACT,CACL7M,YAAa2S,EAAK,GAAGA,KACrB0C,cAAe1C,EAAK,GAAG9H,OACvByK,cAAe3C,EAAK,GAAG3H,OACvBuK,cAAe5C,EAAK,GAAGxH,OACvBqK,aAAc7C,EAAK,GAAGC,OACtB6C,oBAAqB9C,EAAK,GAAGE,cAGjCnS,QAAQC,IAAR,mEAC8DvB,EAD9D,YACyEY,IAElE,KAGI8V,EAAwB,SAAC1W,EAASY,GAC7CZ,EAAUiR,EAAiBjR,GAC3B,IAGMuT,EAHQS,sCAA4BvJ,UAAQC,OAAO9D,QACvD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEJ4G,QAAO,SAACoP,GAAD,OAAOA,EAAEzC,OAAS3S,KAC5C,OAAI2S,EAAK9F,OAAS,EACT,CACL7M,YAAa2S,EAAK,GAAGA,KACrB0C,cAAe1C,EAAK,GAAG9H,OACvB0K,cAAe5C,EAAK,GAAGxH,SAG3BzK,QAAQC,IAAR,kEAC6DvB,EAD7D,YACwEY,IAEjE,KAGI+V,EAAuB,SAAC3W,EAASY,GAC5CZ,EAAUiR,EAAiBjR,GAC3B,IAGMuT,EAHQW,qCAA2BzJ,UAAQC,OAAO9D,QACtD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEJ4G,QAAO,SAACoP,GAAD,OAAOA,EAAEzC,OAAS3S,KAC5C,OAAI2S,EAAK9F,OAAS,EACT,CACL7M,YAAa2S,EAAK,GAAGA,KACrB0C,cAAe1C,EAAK,GAAG9H,OACvB0K,cAAe5C,EAAK,GAAGxH,OACvBoI,KAAMZ,EAAK,GAAGY,OAGlB7S,QAAQC,IAAR,iEAC4DvB,EAD5D,YACuEY,IAEhE,KAGImJ,EAAyB,SAAC/J,GACrCA,EAAUiR,EAAiBjR,GAC3B,IAAMuT,EAAOe,uCAA6B7J,UAAQC,OAAO9D,QACvD,SAAC4G,GAAD,OAAOA,EAAExN,UAAYA,KAEvB,OAAIuT,EAAK9F,OAAS,EACT,CACLmJ,YAAarD,EAAK,GAAGgB,KACrBtK,gBAAiBsJ,EAAK,GAAGiB,SACzBb,aAAcJ,EAAK,GAAGI,eAG1BrS,QAAQC,IAAR,mEAC8DvB,IAEvD,KAGI6W,EAAe,SAAC7W,EAASY,GACpC,IAAM2O,EAAM9E,UAAQC,MACZ4C,EAAWyI,EAAuB/V,EAASY,GAA3C0M,OACFwJ,EAAiB,SAAC9G,GAAD,IAAM1C,EAAN,uDAAa,SAAb,gBAA6B0C,EAA7B,mBAA2C1C,IAClE,MAAY,SAARiC,GAA0B,eAARA,EAEhBjC,EACKwJ,EAAe,qCAAsCxJ,GAEvD,qCAEHA,EACKwJ,EAAe,qCAAsCxJ,GAGvD,sCAIEtI,EAAa,uCAAG,WAAOhF,EAASY,GAAhB,mBAAAP,EAAA,sDACvB2P,EAAM6G,EAAa7W,EAASY,GAE5BG,EAAQ,EAHe,YAMpBA,EAAQ,GANY,iCAObgW,MAAM/G,EAAK,CAAEgH,KAAM,OAAQC,MAAO,aAPrB,YAOzB9V,EAPyB,QASjB+V,GATiB,mDAazBnW,GAAS,EAbgB,0BAgBb,IAAVA,GAAgBI,EAhBO,uBAiBnB,IAAIK,MAAJ,iDAjBmB,yBAmBdL,EAAIgW,OAnBU,qFAAH,wDAsBb3R,EAAc,uCAAG,WAAOxF,EAASY,GAAhB,eAAAP,EAAA,sEACD2E,EAAchF,EAASY,GADtB,cACtBwW,EADsB,OAEhBA,EAAahS,OAEf,IAJkB,kBAMrBrB,EAAcqT,EAAahS,OAAOhE,YANb,2CAAH,wDAUd+N,EAAmB,uCAAG,WAAMnP,GAAN,eAAAK,EAAA,yDACjCL,EAAUiR,EAAiBjR,MACrBuQ,EAAO8C,qCAA2BrT,IAC/ByN,OAAS,GAHe,gCAIlB9E,EAAmB4H,GAJD,qDAMzB,IAAI/O,MAAJ,2DACgDxB,IAPvB,2CAAH,sDAYnBqX,EAAS,SAACC,GAAD,OACpBA,EAAUC,WAAWC,WAAW,IAAK,IAAIpW,YAE9B6P,EAAmB,SAACjR,GAC/B,IAAMyX,EAAWvE,wBACb/R,EAAMnB,EAAUA,EAAQoB,WAAapB,EACzC,GAAIA,GAAWyX,EAASpW,SAASF,GAC/B,OAAOA,EAEP,MAAM,IAAIK,MAAJ,2BAA8BxB,M,m2BCtiB3B0X,EAAsB,SAACtQ,EAAQc,EAAM9D,GAAf,OACjCgD,EAAOuQ,GAAG,GAAK/T,YAAG,GAAKsE,EAAKgG,IAAI9G,GAAQ8G,IAAI9J,IAqCjCwT,EAA4B,SACvCxQ,EACAgB,EACAF,EACA2P,EACAzT,EACAI,GAEA,IAAMsT,EAAM5P,EAAK6P,MAAM3P,GACnBjH,EAAMiG,EAAOM,GAAG,GAChBoQ,EAAI5J,IAAItK,YAAG,GAAGmU,MAAMvT,IAA4BuT,MAAMF,GAAa3J,IAAI9G,GAAQ8G,IAAI9J,GACnF0T,EAAI5J,IAAItK,YAAG,GAAGoU,KAAKxT,IAA4BuT,MAAMF,GAAa3J,IAAI9G,GAAQ8G,IAAI9J,GAEtF,OADAjD,EAAMgN,YAAIhN,EAAKyC,YAAG,KAIPqU,EAAe,SAE1B7P,EACA8P,EACAjU,EACAiC,GAKA,IAAMiS,EAAYD,EAKlB,OAAI9P,EAAOkG,IAAI6J,GAKTlU,EAAU8T,MAAM7R,GAAeoI,IAAI,GAC9B,CAAE/H,SAAS,GAEb,CAAEA,SAAS,EAAOnE,MAAO,mCAE3B,CAAEmE,SAAS,EAAOnE,MAAO,mCC7CrB2D,EAAuB,SAClC7B,EACAkB,EACAhB,EACAH,EACAU,GAEA,GACEyT,YACElU,EACAkB,EACAhB,EACAH,EACAU,GAGF,OAAOf,YAAGK,GAAW0T,GAAG,GAAK/T,YAAG,GAAKA,YAAGM,GACrCoD,MAAMlC,GAGNkC,MAAMlD,GACNkD,MAAM3C,GACNuJ,IAAIjK,GASP,MAAM,IAAIzC,MAAJ,8CAPO,CACX0C,EACAkB,EACAhB,EACAH,EACAU,MAMOqB,EAAqB,SAAChG,EAAS6F,GAC1C,IAAMwS,EAAmBlH,YAAoBnR,GAE7C,OAAO4D,YAAGiC,GAAayB,MAAM+Q,IAGlBC,EAAsB,SACjCpU,EACAkB,EACAhB,EACAO,EACA4T,EACAC,EACAC,EACAC,EACA9H,EACAxJ,GAEA,GAAIxD,YAAGwD,GAAQuQ,GAAG,GAChB,MAAO,IAEP,IAAM7W,EAAO,CACXoD,EACAkB,EACAhB,EACAO,EACA4T,EACAC,EACAC,EACAC,EACA9H,EACAxJ,GAEF,OACEgR,IAAY,WAAZ,EAAgBtX,GAET8C,YAAG2U,GAAeZ,GAAG,GAAK/T,YAAG,GAAKA,YAAGM,GACzCoD,MAAMlC,GACNkC,MAAMlD,GACNkD,MAAMlC,GACNkC,MAAMlD,GACNkD,MAAM3C,GACNuJ,IAAIqK,GACJjR,MAAM1D,YAAGgN,GAAmBmH,MAAMW,IAClCV,KAAKQ,GACLT,MAAMU,GACNnR,MAAMF,IAET9F,QAAQC,IAAR,6CAAkDT,IAC3C,QCtHA6X,EAAiC,SAACC,GAI7C,OAD2BA,EAAQ/H,QAAO,SAACiE,EAAOnE,GAAR,OAAcmE,EAAMkD,KAAKpU,YAAG+M,EAAE1M,WAAWqD,MAAMqJ,EAAEvL,OAAOkC,MAAMqJ,EAAEkI,UAAUb,KAAKrH,EAAEmI,QAAOlV,YAAG,KAI1HmV,EAAsB,SAACH,EAASI,EAAU3S,EAAQ4S,GAC7DL,EAAQI,GAAU/U,UAAYL,YAAGgV,EAAQI,GAAU/U,WAAW+T,KAAK3R,GACnE,IAAM6S,EAAqBP,EAA+BC,GACpDjI,EAAIiI,EAAQ,GACZL,EAAgB3U,YAAG+M,EAAE1M,WAAWqD,MAAMqJ,EAAEvL,OAAOkC,MAAMqJ,EAAEkI,UAAUb,KAAKrH,EAAEmI,KAG9E,OACGI,EAAmBvB,GAAG,IACvBY,EAAcrK,IAAIgL,GAAoB5R,MAAM,KAAK6R,GAAGF,GAE7C,CAAE1S,SAAS,EAAOnE,MAAO,mCAEzB,CAAEmE,SAAS,IAIT6S,EAAyB,SAACR,EAASI,EAAU3S,EAAQgT,EAAeC,EAASlT,GACpFxC,YAAGyC,GAAQiI,IAAI+K,GACjBT,EAAQI,GAAU/U,UAAYL,YAAGgV,EAAQI,GAAU/U,WAAW8T,MAAMsB,GAEpET,EAAQI,GAAU/U,UAAYL,YAAGgV,EAAQI,GAAU/U,WAAW8T,MAAM1R,GAItE,IAFA,IAAI6S,EAAqBP,EAA+BC,GACpDW,EAAY3V,YAAG,GACVlC,EAAE,EAAGA,EAAE4X,EAAQ7L,OAAQ/L,IAAK,CACnC,IAAM6D,EAAI+T,EAAQ5X,GAClB,IAAKkC,YAAG2B,EAAErB,kBAAkByT,GAAG,GAAI,CACjC,IAAMzP,EAAOtE,YAAG2B,EAAErB,kBAAkBoD,MAAM/B,EAAEH,OAAOkC,MAAM/B,EAAEnB,YAC3D8U,EAAqBA,EAAmBlB,KAAKzS,EAAEpB,gBAAgB4T,MAAM7P,GACrEqR,EAAYA,EAAUvB,KAAK9P,EAAKb,QAIpC,OACGkS,EAAU5B,GAAG,IACduB,EAAmBhL,IAAIqL,GAAWjS,MAAM,KAAK6R,GAAG/S,GAEzC,CAAEG,SAAS,EAAOnE,MAAO,qCAEzB,CAAEmE,SAAS,IAKTiT,EAAiC,SAC5C/N,EACA4N,EACAnR,EACA4Q,EACAW,EACAnV,GAEA,OAAIV,YAAGsE,GAAMyP,GAAG,GACP0B,EAEAlL,YACLI,YACE9C,EAAOxH,UAAU8T,MACfzT,EACGgD,MAAMY,GACN8P,KAAKc,GACLf,MAAM0B,GACNvL,IAAIzC,EAAOrG,OACX8I,IAAIzC,EAAOoN,WACdvR,MAAM,QACR+R,GAEFzV,YAAG,K,8DCtEI8V,EAAgB,uCAAG,WAC9B1Z,EACAY,EACAD,EACAqY,GAJ8B,iEAAA3Y,EAAA,wEAOGsZ,yBAAe/Y,EAAaoY,GAA7C7C,EAPc,EAOrBpK,OACDT,EAAgBF,YAAqBpL,EAASY,GAC9CmL,EAASF,YAAc7L,EAASmW,GAEhCyD,EAAeC,8BAAoBjZ,GACnCkZ,EAAeC,8BAAoBnZ,GAZb,SAc4B0C,QAAQwE,IAAI,CAClEwD,EAAc5F,gBACd4F,EAAc0O,UAAUhB,GACxBjN,EAAOkO,SAAStZ,EAAgBqY,KAjBN,OAqB5B,IArB4B,4BAcrBkB,EAdqB,KAcNC,EAdM,KAcMC,EAdN,KAmBpB9V,EAAuB4V,EAAvB5V,mBACJkM,EAAW,GACN9O,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc0O,UAAUJ,EAAalY,KAtBzB,iBAwBN4B,QAAQwE,IAAI0I,GAxBN,QA2B5B,IAHMoI,EAxBsB,OA0B5BpI,EAAW,GACF9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KA5BzB,iBA8BN4B,QAAQwE,IAAI0I,GA9BN,eA8BtB8I,EA9BsB,OAgCtBpR,EAAOoR,EAAQzI,QAAO,SAACiE,EAAOvP,GAChC,OAAOuP,EAAMkD,KAAKpU,YAAG2B,EAAErB,kBAAkBoD,MAAM/B,EAAEH,OAAOkC,MAAM/B,EAAEnB,YAAYiD,SAC7EzD,YAAG,IACA0W,EAAWhB,EAAQzI,QAAO,SAACiE,EAAOvP,GACpC,OAAOuP,EAAMkD,KAAKpU,YAAG2B,EAAErB,kBAAkBoD,MAAM/B,EAAEH,OAAOkC,MAAM/B,EAAEnB,YAAY2T,MAAMxS,EAAEpB,mBACrFP,YAAG,IACA6V,EAAgBb,EAAQ/H,QAAO,SAACiE,EAAOnE,EAAGG,GAC9C,OAAIA,IAAUjP,SAASmX,GACdlE,EAAMkD,KAAKrH,EAAEmI,KAEbhE,EAAMkD,KAAKpU,YAAG+M,EAAE1M,WAAWqD,MAAMqJ,EAAEvL,OAAOkC,MAAMqJ,EAAEkI,UAAUb,KAAKrH,EAAEmI,QAE3ElV,YAAG,IAEa2W,EAAkBJ,EAA7BlW,UACAA,EAAsCmW,EAAtCnW,UAAW6U,EAA2BsB,EAA3BtB,IAAK0B,EAAsBJ,EAAtBI,kBAClBC,EAAqBjB,EAA+BZ,EAAQI,GAAW/U,EAAWiE,EAAMoS,EAAUb,EAAenV,GACjHoW,EAAiB5B,EAAId,KAAKpU,YAAGgV,EAAQI,GAAU2B,eAAe5C,MAAMyC,GAAmBlT,MAAMrD,IAjDvE,kBAmDrB,CAELsW,cAAeA,EAAcnZ,WAI7BwZ,OAAQ3W,EAAU7C,WAClB0X,IAAK4B,EAAexM,IAAI0K,EAAQI,GAAU5T,OAAOhE,WACjDqZ,mBAAoBA,EAAmBrZ,aA3Db,kCA8D5BE,QAAQC,IAAR,iBA9D4B,iCAgEvB,CACLgZ,cAAe,GACfK,OAAQ,GACR9B,IAAK,GACL2B,mBAAoB,KApEQ,0DAAH,4DAwEhBI,EAAgB,uCAAG,WAAO7a,EAASY,EAAaoY,GAA7B,qBAAA3Y,EAAA,6DAExBya,EAAKzQ,cAFmB,kBAIVyQ,EACfC,UAAU,CAAC,GAAD,OAAI/a,EAAJ,YAAeY,EAAf,qBAAuCoY,KACjDgC,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,mBAAoB0Z,MANtB,YAItB9Z,EAJsB,6CAQNA,EARM,GAQnB8C,EARmB,uBASnB,CACLA,UAAWF,YAAcE,GAAW7C,WACpCkM,OAAO,KAXiB,yDAe5BhM,QAAQC,IAAR,iBAf4B,iCAiBvB,CACL0C,UAAW,GACXqJ,OAAO,KAnBqB,0DAAH,0DAuBhB4N,EAAc,uCAAG,WAAOlb,EAASY,EAAaoY,GAA7B,2BAAA3Y,EAAA,6DACtBya,EAAKzQ,aAAgB,GADC,SAGpByL,EAAcD,YAAe7V,GAHT,SAIR8a,EACfC,UAAU,CAAC,GAAD,OACNjF,EADM,YACSlV,EADT,eAC2BoY,GAD3B,UAENlD,EAFM,YAESlV,EAFT,wBAGNkV,EAHM,YAGSlV,EAHT,iBAKVoa,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,iBAAkB0Z,MAVtB,YAIpB9Z,EAJoB,6CAYWA,EAZX,GAYjBga,EAZiB,KAYZC,EAZY,KAYFC,EAZE,uBAajB,CACLF,IAAKpX,YAAcoX,GAAK/Z,WACxBga,SAAUrX,YAAcqX,GAAUha,WAClCia,UAAWtX,YAAcsX,GAAWja,aAhBd,yDAoB1BE,QAAQC,IAAR,iBApB0B,0DAAH,0DCjGd+Z,EAAY,uCAAG,WAC1Btb,EACAY,EACAD,EACA0F,EACA2S,GAL0B,uCAAA3Y,EAAA,sDAYzB,IAZyB,EAOMsZ,yBAAe/Y,GAAhC2a,EAPW,EAOlBC,OACDC,EAAsBtJ,YAA2BnS,EAASub,GAC1DjQ,EAAgBF,YAAqBpL,EAASY,GAC9CgZ,EAAeC,8BAAoBjZ,GACrC4P,EAAW,GACN9O,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACpC8O,EAASrJ,KAAKmE,EAAc0O,UAAUJ,EAAalY,KAb3B,gBAeH4B,QAAQwE,IAAI0I,GAfT,cAenBoI,EAfmB,iBAgBStN,EAAc5F,gBAhBvB,oBAgBjBgW,EAhBiB,EAgBjBA,kBACFC,EAAa5C,EAAoBH,EAASI,EAAU3S,EAAQqV,IAEnDnV,QAnBU,4CAqBLkV,EAAoBH,aAAa3a,EAAgBqY,EAAU3S,GArBtD,QAqBhBvE,EArBgB,OAsBtBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAtBd,mDAwBtBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAxBP,gCA2BtBjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAOuZ,EAAWvZ,OA3BpB,iCA6BlBjB,GA7BkB,2DAAH,8DAgCZya,EAAe,uCAAG,WAC7B5b,EACAY,EACAD,EACA0F,EACA2S,GAL6B,mEAAA3Y,EAAA,6DAM7Bwb,EAN6B,kCAQ6BlC,yBACvD/Y,GADc2a,EARY,EAQpBC,OAA+BrF,EARX,EAQGpK,OAGzB0P,EAAsBtJ,YAA2BnS,EAASub,GAC1DjQ,EAAgBF,YAAqBpL,EAASY,GAC9CmL,EAASF,YAAc7L,EAASmW,GAbV,SAcFpK,EAAOkO,SAAStZ,EAAgBqY,GAd9B,OAmB5B,IALMoB,EAdsB,OAeVf,EAAkBe,EAA5BnW,UACF2V,EAAeC,8BAAoBjZ,GACrCkZ,EAAeC,8BAAoBnZ,GACnC4P,EAAW,GACN9O,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACpC8O,EAASrJ,KAAKmE,EAAc0O,UAAUJ,EAAalY,KApBxB,iBAsBN4B,QAAQwE,IAAI0I,GAtBN,QAwB5B,IAFMoI,EAtBsB,OAuB5BpI,EAAW,GACF9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KAzBzB,iBA2BN4B,QAAQwE,IAAI0I,GA3BN,eA2BtB8I,EA3BsB,iBA4BShO,EAAc5F,gBA5BvB,oBA4BpBpB,EA5BoB,EA4BpBA,qBACFqX,EAAavC,EAAuBR,EAASI,EAAU3S,EAAQgT,EAAeC,EAAShV,IAE9EiC,QA/Ba,4CAiCPkV,EAAoBG,gBAAgBjb,EAAgBqY,EAAU3S,EAAQwV,GAjC/D,QAiClB/Z,EAjCkB,OAkCxBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAlCZ,mDAoCxBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IApCL,gCAuC3BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAOuZ,EAAWvZ,OAvCf,iCAyCrBjB,GAzCqB,2DAAH,8DCrCf2a,EAAc,WACzB,IAAIC,EAAU,GACd,MAAO,CACLrR,IADK,SACD9J,EAAaob,GACf,IAAMrR,EAAG,UAAM/J,EAAN,YAAqBob,GAC9B,GAAIpR,OAAOC,KAAKkR,GAAS1a,SAASsJ,GAAM,CAAC,IAAD,EACpBoR,EAAQpR,GAAKsR,MAAM,KAEnC,OAHoC,oBAMxC3a,QAAQC,IAAI,iCAKd2a,IAdK,SAcDtb,EAAaob,EAAUG,GACzB,IAAKvG,MAAMwG,WAAWD,IAAO,CAC3B,IAAMhX,EAAYkL,KAAKC,MAAMlP,WAC7B2a,EAAQ,GAAD,OAAInb,EAAJ,YAAmBob,IAA1B,UAA2CG,EAA3C,YAAkDhX,MAnB/B,GAyBdkX,EAAoB,WAC/B,IAAIC,EAAc,GAClB,MAAO,CACL5R,IADK,SACD1K,EAASC,EAAiB+b,GAC5B,IAAMrR,EAAG,UAAM3K,EAAN,YAAiBC,EAAjB,YAAoC+b,GAC7C,GAAIpR,OAAOC,KAAKyR,GAAajb,SAASsJ,GACpC,OAAO2R,EAAY3R,GAErBrJ,QAAQC,IAAR,iDAAsDoJ,KAGxDuR,IATK,SASDlc,EAASC,EAAiB+b,EAAUO,GACtC,IAAM5R,EAAG,UAAM3K,EAAN,YAAiBC,EAAjB,YAAoC+b,GAC7CM,EAAY3R,GAAO4R,IAbQ,GCbpBC,EAAgB,uCAAG,WAC9Bxc,EACAY,EACAoY,EACAgD,GAJ8B,iDAAA3b,EAAA,wEAOIsZ,yBAAe/Y,EAAaoY,EAAUgD,GAA/D1O,EAPqB,EAOrBA,OAPqB,EAObqG,aACTiF,EAAU6D,4BAAkB7b,GAC5B0K,EAAgBF,YAAqBpL,EAASY,GATxB,SAUc0C,QAAQwE,IAAI,CACpDwD,EAAc+O,UAAU2B,GACxB1Q,EAAc5F,kBAZY,0CAUrBgX,EAVqB,KAUTxC,EAVS,KAcpB9V,EAAgDsY,EAAhDtY,WAAYC,EAAoCqY,EAApCrY,SAAUM,EAA0B+X,EAA1B/X,uBAE5BL,EAOE4V,EAPF5V,mBACAC,EAME2V,EANF3V,sBACAC,EAKE0V,EALF1V,0BACAI,EAIEsV,EAJFtV,qBACAC,EAGEqV,EAHFrV,qBACAC,EAEEoV,EAFFpV,oBACA6X,EACEzC,EADFyC,wBAtB0B,kBAwBrB,CACLrP,OAAQA,EACRsP,QAAShE,EAAQiE,KAAI,SAAClM,GAAD,OAAOA,EAAEgD,gBAAcmJ,KAAK,KACjD1Y,WAAYA,EAAWhD,WACvBiD,SAAUA,EAASjD,WACnBuD,uBAAwBA,EAAuBvD,WAC/CkD,mBAAoBA,EAAmBlD,WACvCmD,sBAAuBA,EAAsBnD,WAC7CoD,0BAA2BA,EAA0BpD,WAGrDwD,qBAAsBA,EAAqBxD,WAC3CyD,qBAAsBA,EAAqBzD,WAC3C0D,oBAAqBA,EAAoB1D,WACzCub,wBAAyBA,EAAwBvb,aAtCvB,kCAyC5BE,QAAQC,IAAR,iBAzC4B,iCA2CvB,CACL+L,OAAQ,GACRsP,QAAS,GACTxY,WAAY,GACZC,SAAU,GACVM,uBAAwB,GACxBL,mBAAoB,GACpBC,sBAAuB,GACvBC,0BAA2B,GAC3BI,qBAAsB,GACtBC,qBAAsB,GACtBC,oBAAqB,GACrB6X,wBAAyB,KAvDG,0DAAH,4DA2DhBI,EAAe,uCAAG,WAAO/c,EAASY,EAAaD,EAAgBqb,GAA7C,yGAAA3b,EAAA,sEAErB2c,EAAmBC,4BAAkBrc,GACrCgZ,EAAeC,8BAAoBjZ,GACnCkZ,EAAekD,EAAiBH,KAAI,SAACnb,GAAD,OAAOA,EAAEsa,YAC7CkB,EAAaF,EAAiBH,KAAI,SAACnb,GAAD,OAAOA,EAAE4L,UAE3ChC,EAAgBF,YAAqBpL,EAASY,GAPzB,EAQM+Y,yBAAe/Y,EAAa,KAAMob,GAApD9F,EARY,EAQpBtK,OACDA,EAASF,YAAc1L,EAASkW,GATX,UAUyG5S,QAAQwE,IAAI,CAC9IwD,EAAc+O,UAAU2B,GACxB1Q,EAAc5F,gBACd4F,EAAc6R,4BACd7R,EAAc8R,uBACdxR,EAAOyR,YAAY1c,EAAgBqb,GACnCpQ,EAAO0R,WAAW3c,GAClBiL,EAAO2R,aAAa5c,GACpB6c,YAAexd,EAASkd,EAAWrb,SAASma,OAlBnB,QA2B3B,IA3B2B,4BAUpBU,EAVoB,KAURxC,EAVQ,KAUOxB,EAVP,KAU+B9H,EAV/B,KAUkD6M,EAVlD,KAUgEC,EAVhE,KAUyEC,EAVzE,KAUoFC,EAVpF,KAoBnBxW,EAA4CqW,EAA5CrW,OAAQc,EAAoCuV,EAApCvV,KAAMuQ,EAA8BgF,EAA9BhF,0BACdrU,EAAgFsY,EAAhFtY,WAAYO,EAAoE+X,EAApE/X,uBAAwBT,EAA4CwY,EAA5CxY,iBAAkBsU,EAA0BkE,EAA1BlE,sBAE5DjU,EAEE2V,EAFF3V,sBACAC,EACE0V,EADF1V,0BAEEgM,EAAW,GACN9O,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc0O,UAAUJ,EAAalY,KA5B1B,iBA8BL4B,QAAQwE,IAAI0I,GA9BP,QAoC3B,IANMoI,EA9BqB,OA+BrBxQ,EAASwQ,EAAQ/H,QAAO,SAACiE,EAAOzU,EAAGyQ,GACvC,OAAOgE,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAEwY,UAAUvR,MAAMoW,EAAQ5M,OAC7DlN,YAAG,IAEN4M,EAAW,GACF9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KArC1B,iBAuCL4B,QAAQwE,IAAI0I,GAvCP,QAyC3B,IAFM8I,EAvCqB,OAwC3B9I,EAAW,GACF9O,EAAE,EAAGA,EAAEwb,EAAWzP,OAAQ/L,IACjC8O,EAASrJ,KAAKqW,YAAexd,EAASkd,EAAWxb,KA1CxB,iBA4CA4B,QAAQwE,IAAI0I,GA5CZ,eA4CrBqN,EA5CqB,OA6CrBzY,EAAQyY,EAAa7B,GAC3BF,EAAWI,IAAItb,EAAaob,EAAU5W,GAChC8S,EAAaoB,EAAQzI,QAAO,SAACiE,EAAOvP,EAAGuL,GAC3C,OAAOgE,EAAMkD,KAAKpU,YAAGia,EAAa/M,IAAQxJ,MAAM/B,EAAEnB,YAAYkD,MAAMqW,EAAU7M,GAAO1J,QAAQE,MAAM/C,GAAuB8C,SACzHzD,YAAG,IACAka,EAAqBla,YAAGwD,GAAQC,MAAMC,MAAMlD,GAAYkD,MAAMuW,EAAa7B,IAAW1U,MAAM/C,GAI5FwZ,EAAgBzE,EAAQzI,QAAO,SAACiE,EAAOvP,EAAGuL,GAC9C,OAAOgE,EAAMkD,KAAKpU,YAAGia,EAAa/M,IAAQxJ,MAAM/B,EAAEnB,YAAYkD,MAAMqW,EAAU7M,GAAO1J,QAAQ2Q,MAAM4F,EAAU7M,GAAO5I,SACnHtE,YAAG,IACAoa,EAAoB1E,EAAQuD,KAAI,SAACtX,EAAGuL,GACxC,MAAO,CAACvL,EAAE+H,OAAQ1J,YAAGia,EAAa/M,IAAQxJ,MAAM/B,EAAEnB,YAAYkD,MAAMqW,EAAU7M,GAAO1J,QAAQ2Q,MAAM4F,EAAU7M,GAAO5I,MAAM9G,eAGtHmY,GAAYoE,EAAU9M,QAAO,SAACiE,EAAOzU,GACzC,OAAOyU,EAAMkD,KAAKpU,YAAGvD,EAAE6H,SACtBtE,YAAG,IACAiU,GAAcyB,EAAQzI,QAAO,SAACiE,EAAOvP,EAAGuL,GAC5C,OAAIA,IAAUjP,SAASma,GACdlH,EAAMkD,KAAKpU,YAAG+Z,EAAU7M,GAAO1J,QAAQE,MAAMuW,EAAa/M,IAAQxJ,MAAM/B,EAAEnB,aAE1E0Q,IAERlR,YAAG,IAEAK,GAAY2U,EAAQ/H,QAAO,SAACiE,EAAOpT,GAAR,OAAcoT,EAAMkD,KAAKpU,YAAGlC,EAAEuC,WAAWqD,MAAM5F,EAAE0D,OAAOkC,MAAM5F,EAAEmX,UAAUb,KAAKtW,EAAEoX,QAAOlV,YAAG,IACtHqa,GAAa3F,EACjBpU,EACA0Z,EACAxZ,EACAO,EACAV,GACAuU,EACAC,EACAC,EACA9H,EACAxJ,GAnFyB,kBAqFtB,CACHhC,MAAOA,EACPgC,OAAQA,EAAOhG,WACf8c,kBAAmBxG,EAAoBtQ,EAAQc,EAAM9D,GAAYhD,WACjEgH,OAAQA,EAAOhH,WACf8W,WAAYA,EAAW9W,WACvB0c,mBAAoBA,EAAmB1c,WACvC2c,cAAeA,EAAc3c,WAC7B4c,oBACAG,iBAAkBvG,EAChBxQ,EACAgB,EACAmR,GACA1B,GACAzT,EACAI,GACApD,WACF6c,WAAYA,GAAW7c,aAtGE,kCAyG3BE,QAAQC,IAAR,iBAzG2B,iCA2GtB,CACL6F,OAAQ,GACR8W,kBAAmB,GACnB9V,OAAQ,GACR8P,WAAY,GACZ6F,cAAe,GACfI,iBAAkB,KAjHS,0DAAH,4DAqHfC,EAAgB,uCAAG,WAC9Bpe,EACAY,EACAD,EACAqY,GAJ8B,mBAAA3Y,EAAA,wEAOMsZ,yBAAe/Y,EAAaoY,GAA9C/C,EAPY,EAOpBxK,OAPoB,SAQNF,YAAcvL,EAASiW,GAAeoI,UAAU1d,GAR1C,cAQtB2d,EARsB,yBASrBA,EAAQld,YATa,gCAW5BE,QAAQC,IAAR,iBAX4B,iCAavB,IAbuB,yDAAH,4DAgBhBgd,EAAU,uCAAG,WAAOve,EAASY,EAAaD,EAAgBqY,GAA7C,mBAAA3Y,EAAA,wEAEYsZ,yBAAe/Y,EAAaoY,GAA9C/C,EAFM,EAEdxK,OAFc,SAGDF,YAAcvL,EAASiW,GAHtB,cAGhBxK,EAHgB,yBAIfA,EAAO8S,WAAW5d,EAAgBC,IAJnB,gCAMtBU,QAAQC,IAAR,iBANsB,kCAQjB,GARiB,yDAAH,4DAWVid,EAAe,uCAAG,WAAOxe,EAASY,EAAawG,EAAQ4U,GAArC,2BAAA3b,EAAA,kEAEvB+E,EAAQ0W,EAAWpR,IAAI9J,EAAaob,GAFb,EAGVrC,yBAAe/Y,EAAa,KAAMob,GAA5C1O,EAHoB,EAGpBA,OACFlI,EAJsB,gCAMXoY,YAAexd,EAASsN,GANb,OAMzBlI,EANyB,OAOzB0W,EAAWI,IAAItb,EAAaob,EAAU5W,GAPb,WASvB6R,EAAQoF,EAAiB3R,IAAI1K,EAASY,EAAaob,KACxC/E,EAAM7S,WAVM,kCAWnBqa,EAAgBze,EAASY,EAAaob,GAXnB,QAYzB/E,EAAQoF,EAAiB3R,IAAI1K,EAASY,EAAaob,GAZ1B,eAcnB5X,GAdmB,EAcM6S,GAAzB7S,WAAYC,EAdO,EAcPA,SAdO,kBAgBpBT,YAAGwD,GAAQC,MAAMC,MAAMlC,GAAOkC,MAAMlD,GAAYkD,MAAMjD,GAAUjD,YAhB5C,kCAkB3BE,QAAQC,IAAR,iBAlB2B,iCAoBtB,IApBsB,0DAAH,4DAuBfmd,EAAkB,uCAAG,WAChC1e,EACAY,EACAD,EACAyG,EACAuX,EACA3C,GANgC,6BAAA3b,EAAA,wEASbsZ,yBAAe/Y,EAAa,KAAMob,GAA5C1O,EATuB,EASvBA,OACDhC,EAAgBF,YAAqBpL,EAASY,GAVtB,SAWK0C,QAAQwE,IAAI,CAE7C0V,YAAexd,EAASsN,GACxBhC,EAAc+O,UAAU2B,KAdI,0CAWvB5W,EAXuB,KAWhBsX,EAXgB,KAgB9BZ,EAAWI,IAAItb,EAAaob,EAAU5W,GAC/BhB,EAAcsY,EAAdtY,WAjBuB,kBAmBvBR,YAAGwD,GAAQC,MAAMC,MAAMlC,GAAOkC,MAAMlD,GAAY8J,IAAItK,YAAG+a,IAAWvd,YAnB3C,kCAqB9BE,QAAQC,IAAR,iBArB8B,iCAuBzB,IAvByB,0DAAH,gEA0BlBqd,EAAmB,uCAAG,WAAM5e,EAASY,EAAaob,GAA5B,SAAA3b,EAAA,+EAC1Bgc,EAAiB3R,IAAI1K,EAASY,EAAaob,IADjB,2CAAH,0DAI1ByC,EAAe,uCAAG,WAAMze,EAASY,EAAaob,GAA5B,iEAAA3b,EAAA,sDAKtB,IAJMiL,EAAgBF,YAAqBpL,EAASY,GAD9B,EAEL+Y,yBAAe/Y,EAAa,KAAMob,GAA5C1O,EAFe,EAEfA,OACHsM,EAAeC,8BAAoBjZ,GACnCie,EAAc,GACTnd,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACnCmd,EAAY1X,KAAKmE,EAAc0O,UAAUtY,IANrB,gBAQO4B,QAAQwE,IAAI+W,GARnB,cAQhBC,EARgB,OAShB7a,EAAY6a,EAAejO,QAAO,SAACiE,EAAOpT,GAAR,OAAcoT,EAAMkD,KAAKpU,YAAGlC,EAAEuC,WAAWqD,MAAM5F,EAAE0D,OAAOkC,MAAM5F,EAAEmX,UAAUb,KAAKtW,EAAEoX,QAAOlV,YAAG,IAT7G,UAa4BN,QAAQwE,IAAI,CAE5D0V,YAAexd,EAASsN,GACxBhC,EAAc+O,UAAU2B,GACxB1Q,EAAc5F,kBAjBM,QAwCtB,IAxCsB,4BAafN,EAbe,KAaRsX,EAbQ,KAaIxC,EAbJ,KAmBtB4B,EAAWI,IAAItb,EAAaob,EAAU5W,GAC9BhB,EAAmEsY,EAAnEtY,WAAYO,EAAuD+X,EAAvD/X,uBAAwBT,EAA+BwY,EAA/BxY,iBAAkBG,EAAaqY,EAAbrY,SACtDC,EAAuB4V,EAAvB5V,mBAQFwB,EAAsBC,EAAoB,WAApB,EAPJ,CACtB7B,EACAkB,EACAhB,EACAH,EACAU,IAGIkB,EAAcG,EAAmBhG,EAAS8F,GAQ5CgU,EAAeC,8BAAoBnZ,GACnC4P,EAAW,GACN9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KAzC/B,iBA2CA4B,QAAQwE,IAAI0I,GA3CZ,eA2ChB8I,EA3CgB,OA6ChByF,EAAwBzF,EAAQzI,QAAO,SAACiE,EAAOzU,GACnD,OAAOyU,EAAMkD,KAAKpU,YAAGvD,EAAE6D,kBAAkBoD,MAAMjH,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMhD,GAAoB+C,SACrGzD,YAAG,IAGAzC,EAAM,CACViE,QACAhB,WAAYA,EAAWhD,WACvBiD,SAAUA,EAASjD,WACnB8C,iBAAkBA,EAAiB9C,WACnC6C,UAAWA,EAAU7C,WAErBuD,uBAAwBA,EAAuBvD,WAC/CkD,mBAAoBA,EAAmBlD,WACvC0E,oBAAqBA,EACrBD,YAAaA,EACbK,cAAe6Y,EAAsB7Q,IAAIjK,IAE3CoY,EAAiBH,IAAIlc,EAASY,EAAaob,EAAU7a,GA/D/B,kBAgEfA,GAhEe,4CAAH,0DAmER6d,EAAc,uCAAG,WAAOhf,EAASY,EAAaob,GAA7B,uBAAA3b,EAAA,+EAERoe,EAAgBze,EAASY,EAAaob,GAF9B,cAEpB7a,EAFoB,OAGlB0E,EAAkE1E,EAAlE0E,YAAaC,EAAqD3E,EAArD2E,oBAAqB7B,EAAgC9C,EAAhC8C,UAAWC,EAAqB/C,EAArB+C,iBAH3B,kBAInB,CACL+a,aAAcpZ,EAAYyB,MAAM,KAAKlG,WACrC0E,oBAAqBA,EAAoB1E,WACzC6C,UAAWA,EAAU7C,WACrBgG,OAAQ,IACRlD,iBAAkBA,EAAiB9C,aATX,gCAY1BE,QAAQC,IAAR,iBAZ0B,iCAcrB,CACL0d,aAAc,GACdnZ,oBAAqB,GACrB7B,UAAW,GACXmD,OAAQ,GACRlD,iBAAkB,KAnBQ,yDAAH,0DAuBdgb,EAAuB,uCAAG,WACrClf,EACAY,EACAue,EACAnD,GAJqC,mBAAA3b,EAAA,kEAO/Bc,EAAMkb,EAAiB3R,IAAI1K,EAASY,EAAaob,GAPlB,gCASrByC,EAAgBze,EAASY,EAAaob,GATjB,OASjC7a,EATiC,qBAW7BL,EAAO,CACX8C,YAAGzC,EAAI+C,kBAAkB8T,KAAKmH,GAAc/d,WAC5CD,EAAIiE,MACJjE,EAAIiD,WACJjD,EAAI8C,UACJ9C,EAAIwD,wBAEFya,EAAerZ,EAAoB,WAApB,EAAwBjF,GAC3Cse,EAAepZ,EAAmBhG,EAASof,GAnBR,kBAoB5B,CACLA,aAAcA,EAAa9X,MAAM,KAAKlG,aArBL,kCAwBnCE,QAAQC,IAAR,iBAxBmC,iCA0B9B,CACL6d,aAAc,KA3BqB,0DAAH,4DA+BvBC,EAAgB,uCAAG,WAC9Brf,EACAY,EACAob,GAH8B,eAAA3b,EAAA,kEAMxBc,EAAMkb,EAAiB3R,IAAI1K,EAASY,EAAaob,GANzB,gCAQdyC,EAAgBze,EAASY,EAAaob,GARxB,OAQ1B7a,EAR0B,uCAUrB,CACLme,eAAgBne,EAAI+E,cAAcoB,MAAM,KAAKlG,aAXnB,gCAc5BE,QAAQC,IAAR,iBAd4B,iCAgBvB,CACL+d,eAAgB,KAjBY,yDAAH,0DAqBhBC,EAAyB,uCAAG,WACvCvf,EACAY,EACAue,EACAnD,GAJuC,6BAAA3b,EAAA,kEAOjCc,EAAMkb,EAAiB3R,IAAI1K,EAASY,EAAaob,GAPhB,gCASvByC,EAAgBze,EAASY,EAAaob,GATf,OASnC7a,EATmC,cAiBrC,IANMmK,EAAgBF,YAAqBpL,EAASY,GAIhDkZ,EAAeC,8BAAoBnZ,GACnC4P,EAAW,GACN9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KAlBhB,iBAoBf4B,QAAQwE,IAAI0I,GApBG,eAoB/B8I,EApB+B,OAqBjCgG,EAAiBhG,EAAQzI,QAAO,SAACiE,EAAOzU,EAAGyQ,GAC7C,OAAIA,IAAUjP,SAASma,GACdlH,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMjH,EAAE6D,iBAAiB8T,KAAKmH,IAAe9X,OAExFyN,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMjH,EAAE6D,kBAAkBmD,SAE7EzD,YAAG,IAGA4b,EAAiBF,EAAehY,MAAMnG,EAAImD,oBAAoB4J,IAAI/M,EAAI8C,WA9BvC,kBA+B9B,CACLub,eAAgBA,EAAelY,MAAM,KAAKlG,aAhCP,kCAmCrCE,QAAQC,IAAR,iBAnCqC,iCAqChC,CACLie,eAAgB,KAtCqB,0DAAH,4DA2CzBC,EAAwB,uCAAG,WAAMzf,EAASY,EAAaD,EAAgBqb,GAA5C,+DAAA3b,EAAA,sDAUpC,IAVoC,SAEhCqf,EAAajD,4BAAkB7b,GAC7B0K,EAAgBF,YAAqBpL,EAASY,GAHhB,EAIH+Y,yBAAe/Y,EAAa,KAAMob,GAApD9F,EAJqB,EAI7BtK,OACDA,EAASF,YAAc1L,EAASkW,GAIlC2I,EAAc,GACTnd,EAAE,EAAGA,EAAEge,EAAWjS,OAAQ/L,IACjCmd,EAAY1X,KAAKoE,YAAcvL,EAAS0f,EAAWhe,GAAGuU,eAAeoI,UAAU1d,IAX7C,gBAaX2C,QAAQwE,IAAI+W,GAbD,OAcpC,IADMc,EAb8B,OAc3Bje,EAAE,EAAGA,EAAEge,EAAWjS,OAAQ/L,IACjCge,EAAWhe,GAAGke,cAAgBD,EAAWje,GAAGN,WAfV,OAkB9BwY,EAAeC,8BAAoBjZ,GACnCkZ,EAAeC,8BAAoBnZ,GAnBL,UAoBc0C,QAAQwE,IAAI,CAC5D8D,EAAO0R,WAAW3c,GAClBiL,EAAO2R,aAAa5c,GACpB2K,EAAc5F,kBAvBoB,QA4BpC,IA5BoC,4BAoB7BgY,EApB6B,KAoBpBC,EApBoB,KAoBTzD,EApBS,KAyB5B3V,EAA0B2V,EAA1B3V,sBAEJiM,EAAW,GACN9O,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc0O,UAAUJ,EAAalY,KA7BjB,iBA+Bd4B,QAAQwE,IAAI0I,GA/BE,QAsCpC,IAPMoI,EA/B8B,OAgC9BxQ,EAASwQ,EAAQ/H,QAAO,SAACiE,EAAOzU,EAAGyQ,GACvC,OAAOgE,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAEwY,UAAUvR,MAAMoW,EAAQ5M,OAC7DlN,YAAG,IAGN4M,EAAW,GACF9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KAvCjB,iBAyCd4B,QAAQwE,IAAI0I,GAzCE,eAyC9B8I,EAzC8B,OA0C9BpB,EAAaoB,EAAQzI,QAAO,SAACiE,EAAOzU,EAAGyQ,GAC3C,OAAOgE,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMqW,EAAU7M,GAAO1J,QAAQC,MAAMC,MAAM/C,MAC5FX,YAAG,IAGAkV,EAAMQ,EAAQzI,QAAO,SAACiE,EAAOzU,EAAGyQ,GACpC,OAAOgE,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMqW,EAAU7M,GAAO1J,QAAQ2Q,MAAM4F,EAAU7M,GAAO5I,SACvGtE,YAAG,IAGN8b,EAAaA,EAAW7C,KAAI,SAACnb,EAAGoP,GAM9B,OALI8E,MAAMwG,WAAWxD,EAAQ9H,GAAO1L,SAAoC,MAAzBwT,EAAQ9H,GAAO1L,MAG5D1D,EAAEme,iBAAmB,IAFrBne,EAAEme,iBAAmB1R,YAAII,YAAInG,EAAO2P,MAAMG,GAAYF,KAAKc,GAAK5K,IAAI0K,EAAQ9H,GAAO1L,OAAO8I,IAAI0K,EAAQ9H,GAAO+H,UAAW6E,EAAQ5M,IAASlN,YAAG,IAAIxC,WAI3IM,KA1D2B,kBA4D7Bge,GA5D6B,kCA8DpCpe,QAAQC,IAAR,iBA9DoC,iCAgE/B,IAhE+B,0DAAH,4D,QC3b/Bue,EAAS,uCAAG,WAAO9P,GAAP,eAAA3P,EAAA,sEACG0W,MAAM/G,GADT,cACV+P,EADU,gBAEHA,EAAK5I,OAFF,mFAAH,sDAKT6I,EAAiB,uCAAG,WACxB1U,EACA2U,EACAxZ,EACAyZ,EACA9b,EACAC,GANwB,iCAAAhE,EAAA,6DAQlB8f,EAAcpc,YAAckc,EAAKE,aARf,SASA7U,EAAc8U,cAAc3Z,GAT5B,cASlB4Z,EATkB,OAWlBC,EAAYH,EAAYzY,GAAG,GAAK,OAAS,QACzCtC,EAAQrB,YAAckc,EAAK7a,OAC3Bmb,EAbkB,WAaPF,EAAUlb,UAbH,OAclB6W,EAAWiE,EAAKjE,SAChBwE,EAAiBlV,EAAcmV,cACnCN,EACA/a,EACAhB,EAAWvC,SAASma,IACpB3X,EAASxC,SAASma,KAEd0E,EAAWP,EAAY9Y,MAAMC,MAAMlC,GAAOkC,MAAMlD,EAAWvC,SAASma,KACpE5U,EAAS+Y,EAAY9Y,MAErBlG,EAAM,CACVmf,YAEAtE,WACA5W,MAAOA,EAAMhE,WACbsf,SAAUA,EAAStf,WACnBgG,OAAQA,EAAOhG,WACfof,eAAgBA,EAAepf,WAC/Buf,gBAAiBT,EAAO9e,WACxBmf,QAjCsB,kBAmCjBpf,GAnCiB,4CAAH,gEAqCjByf,EAAqB,uCAAG,WAC5B5gB,EACAY,EACAD,EACAqb,EACAnV,GAL4B,yCAAAxG,EAAA,6DAQtByZ,EAAeC,8BAAoBnZ,GAEnC0K,EAAgBF,YAAqBpL,EAASY,GAVxB,SAWN0K,EAAcuV,cAAc,UAXtB,OAe5B,IAJM7Z,EAXsB,OAY5BH,EAAYhF,SAASgF,GAEjB2J,EAAU,GACL9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KAhBzB,iBAkBR4B,QAAQwE,IAAI0I,GAlBJ,eAkBxB8I,EAlBwB,OAoBtBlV,EAAakV,EAAQuD,KAAI,SAACnb,GAAD,OAAOA,EAAE0C,WAAWhD,cAC7CiD,EAAWiV,EAAQuD,KAAI,SAACnb,GAAD,OAAOA,EAAE2C,SAASjD,cAEzC0f,EAAU,CAAEC,MAAOpgB,GAvBG,UAwBT2K,EAAc0V,eAC/B,QACAF,EACAja,EACAG,EAAQia,QA5BkB,QAwBxBna,EAxBwB,OA+BtBjD,EAAS,GACfiD,EAAUA,EAAOF,QAAO,SAAClF,GAAD,OAAOA,EAAEwf,aAAalF,WAAaA,KAElDta,EAAI,EAlCe,aAkCZA,EAAIoF,EAAO2G,QAlCC,wBAmCpB0T,EAAOra,EAAOpF,GAnCM,UAoCRse,EAChB1U,EACA6V,EAAKD,aACLC,EAAK1a,YACL0a,EAAKR,gBACLvc,EACAC,GA1CwB,QAoCpBlD,EApCoB,OA4C1B0C,EAAOud,QAAQjgB,GA5CW,QAkCOO,IAlCP,iDA8CrBmC,GA9CqB,4CAAH,8DAiDdwd,EAAe,uCAAG,WAC7BrhB,EACAY,EACAD,EACAqb,GAJ6B,uCAAA3b,EAAA,sEAOPihB,EAAe,GAPR,SAQTxB,EAAU,GAAD,OAtGtB/K,8BAAoBtK,UAAQC,OAsGN,0BACS1K,EADT,YACoBY,EADpB,YACmCD,EADnC,YACqDqb,IATrD,WAQrB7a,EARqB,SAWhBA,EAAIoF,UACbgb,EAAiB1f,SAASV,EAAI6B,KAAKwe,mBAC/BrgB,EAAI6B,KAAKse,cAAgBG,MAAMC,QAAQvgB,EAAI6B,KAAKse,gBAClDA,EAAengB,EAAI6B,KAAKse,eAGxBA,EAAa7T,OAAS,IACxB6T,EAAeA,EACZ1a,QAAO,SAAClF,GAAD,OAAOA,KACdmb,KAAI,SAACnb,GACJ,MAAO,CACL4e,UAAW5e,EAAE4e,UAAUqB,OAEvB3F,SAAUta,EAAEsa,SACZ5W,MAAOrB,YAAcrC,EAAE0D,OAAOhE,WAC9Bsf,SAAU3c,YAAcrC,EAAEgf,UAAUtf,WACpCgG,OAAQrD,YAAcrC,EAAE0F,QAAQhG,WAChCof,eAAgBzc,YAAcrC,EAAE8e,gBAAgBpf,WAChDuf,gBAAiBjf,EAAEif,gBACnBJ,KAAM7e,EAAE6e,KAAKnf,gBAKE,IAAnBmgB,EAnCuB,kCAqCUje,QAAQwE,IAAI,CAC7C8Y,EACE5gB,EACAY,EACAD,EACAqb,EACAuF,EAAiB,KA3CI,2CAqClBK,EArCkB,KA8CnB/d,EAAS+d,EAAmBC,OAAOP,GA9ChB,kBA+ClBzd,EAAO6M,MAAK,SAACrQ,EAAGsQ,GAAJ,OAAU9O,SAAS8O,EAAE4P,MAAQ1e,SAASxB,EAAEkgB,UA/ClC,iBAkDF5G,yBAAe/Y,GAA/B8S,EAlDkB,EAkDlBA,aACP6N,EAAiB1f,SAAS6R,GAnDD,UAoDUpQ,QAAQwE,IAAI,CAC7C8Y,EACE5gB,EACAY,EACAD,EACAqb,EACAuF,EAAiB,KA1DI,2CAoDlBK,EApDkB,KA6DnB/d,EAAS+d,EA7DU,kBA8DlB/d,EAAO6M,MAAK,SAACrQ,EAAGsQ,GAAJ,OAAU9O,SAAS8O,EAAE4P,MAAQ1e,SAASxB,EAAEkgB,UA9DlC,0DAiE3Bjf,QAAQC,IAAR,0BAA+BvB,EAA/B,aAA2CY,EAA3C,aAA2DD,EAA3D,aAA8Eqb,EAA9E,qBAjE2B,iCAmEtB,IAnEsB,0DAAH,4DC3Ff8F,EAAM,uCAAG,WAAO9hB,EAASY,EAAaD,EAAgBqY,GAA7C,uBAAA3Y,EAAA,+DACesZ,yBAAe/Y,EAAaoY,GAA9C/C,EADG,EACXxK,OACHA,EAASF,YAAcvL,EAASiW,GAFlB,kBAKDxK,EAAOqW,OAAOnhB,EAAgBC,GAL7B,OAKZkB,EALY,OAMlBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GANlB,gDAQlBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IARX,iCAUbjB,GAVa,yDAAH,4DAcN4gB,EAAa,uCAAG,WAC3B/hB,EACAY,EACAD,EACA0F,EACA2S,GAL2B,uBAAA3Y,EAAA,+DAOQsZ,yBAAe/Y,GAAjC2a,EAPU,EAOlBC,OACFC,EAAsBtJ,YAA2BnS,EAASub,GARtC,kBAWPE,EAAoBuG,UAAUrhB,EAAgBqY,EAAU3S,GAXjD,OAWlBvE,EAXkB,OAYxBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAZZ,gDAcxBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAdL,iCAgBnBjB,GAhBmB,yDAAH,8DAmBb8gB,EAAc,uCAAG,WAC5BjiB,EACAY,EACAD,EACA0F,EACA2S,GAL4B,qCAAA3Y,EAAA,6DAM5Bwb,EAN4B,kCAQOlC,yBAAe/Y,GAAjC2a,EARW,EAQnBC,OACFC,EAAsBtJ,YAA2BnS,EAASub,GATrC,kBAYRE,EAAoByG,aAAavhB,EAAgBqY,EAAU3S,EAAQwV,GAZ3D,OAYnB/Z,EAZmB,OAazBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAbX,kDAezBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAfJ,iCAiBpBjB,GAjBoB,0DAAH,8DAoBdghB,EAAe,uCAAG,WAC7BniB,EACAY,EACAD,EACAyhB,EACApG,GAL6B,mEAAA3b,EAAA,+DAO6BsZ,yBAAe/Y,GAAxD2a,EAPY,EAOpBC,OAA+BtF,EAPX,EAOGtK,OACzB6P,EAAsBtJ,YAA2BnS,EAASub,GAC1DjQ,EAAgBF,YAAqBpL,EAASY,GAC9CgL,EAASF,YAAc1L,EAASkW,GAVV,SAWa5S,QAAQwE,IAAI,CAGnDwD,EAAc5F,gBACdkG,EAAO2R,aAAa5c,KAfM,0CAWrBuZ,EAXqB,KAWNyD,EAXM,KAoBpBpZ,EAA6C2V,EAA7C3V,sBAAuBD,EAAsB4V,EAAtB5V,mBAEzBsV,EAAeC,8BAAoBjZ,GAtBb,UAuBNgL,EAAO0R,WAAW3c,GAvBZ,QAyB3B,IAFK+c,EAvBsB,OAwBvBlN,EAAW,GACN9O,EAAE,EAAGA,EAAEkY,EAAanM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc0O,UAAUJ,EAAalY,KA1B1B,iBA4BL4B,QAAQwE,IAAI0I,GA5BP,QAoC3B,IARMoI,EA5BqB,OA6BrBxQ,EAASwQ,EAAQ/H,QAAO,SAACiE,EAAOpT,EAAGoP,GACvC,OAAOgE,EAAMkD,KAAKpU,YAAGlC,EAAE0D,OAAOkC,MAAM5F,EAAEmX,UAAUvR,MAAMoW,EAAQ5M,OAC7DlN,YAAG,IAEAK,EAAY2U,EAAQ/H,QAAO,SAACiE,EAAOpT,GAAR,OAAcoT,EAAMkD,KAAKpU,YAAGlC,EAAEuC,WAAWqD,MAAM5F,EAAE0D,OAAOkC,MAAM5F,EAAEmX,UAAUb,KAAKtW,EAAEoX,QAAOlV,YAAG,IACxHkW,EAAeC,8BAAoBnZ,GACvC4P,EAAW,GACF9O,EAAE,EAAGA,EAAEoY,EAAarM,OAAQ/L,IACnC8O,EAASrJ,KAAKmE,EAAc+O,UAAUP,EAAapY,KArC1B,iBAuCL4B,QAAQwE,IAAI0I,GAvCP,WAuCrB8I,EAvCqB,OA+C3BpB,GAPIA,EAAaoB,EAAQzI,QAAO,SAACiE,EAAOzU,EAAGyQ,GACzC,OAAIA,IAAUjP,SAASma,GACdlH,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMqW,EAAU7M,GAAO1J,OAAO4Q,KAAKoK,IAAY/a,OAE1FyN,EAAMkD,KAAKpU,YAAGvD,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYkD,MAAMqW,EAAU7M,GAAO1J,QAAQC,SAElFzD,YAAG,KACkB0D,MAAM/C,GAU9B2B,GAPIA,EAAgBoT,EAAQzI,QAAO,SAACiE,EAAOzU,EAAGyQ,GAC5C,OAAIA,IAAUjP,SAASma,GACdlH,EAAMkD,KAAKpU,YAAGvD,EAAE6D,iBAAiB8T,KAAKoK,IAAY9a,MAAMjH,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYiD,OAErFyN,EAAMkD,KAAKpU,YAAGvD,EAAE6D,kBAAkBoD,MAAMjH,EAAE+E,OAAOkC,MAAMjH,EAAE+D,YAAYiD,SAE7EzD,YAAG,KACwB0D,MAAMhD,KAG/B+d,EAAkBpK,EAEtB7P,EACA8P,EACAjU,EACAiC,IAMkBK,QAvEQ,4CAyERkV,EAAoB6G,MAAM3hB,EAAgBqb,EAAUoG,GAzE5C,QAyEnBtgB,EAzEmB,OA0EzBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GA1EX,mDA4EzBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IA5EJ,gCA+E1BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAOigB,EAAgBjgB,OA/ErB,iCAiFrBjB,GAjFqB,2DAAH,8DAoFfohB,EAAa,uCAAG,WAAOviB,EAASY,EAAaD,EAAgBqb,GAA7C,iCAAA3b,EAAA,+DAC+BsZ,yBAAe/Y,GAAxD2a,EADU,EAClBC,OAA+BtF,EADb,EACKtK,OACzB6P,EAAsBtJ,YAA2BnS,EAASub,GAC1D3P,EAASF,YAAc1L,EAASkW,GAHZ,SAIDtK,EAAOyR,YAAY1c,EAAgBqb,GAJlC,mBAIlB5U,EAJkB,EAIlBA,OACFgb,EAAYhb,EAAOob,UAEpBpb,EAAOuQ,GAAG,GAPW,2CASN8D,EAAoB6G,MAAM3hB,EAAgBqb,EAAUoG,GAT9C,QASjBtgB,EATiB,OAUvBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAVb,kDAYvBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAZN,iCAclBjB,GAdkB,QAgBzBA,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,wBAhBN,iCAkBpBjB,GAlBoB,0DAAH,4DCjIbshB,EAAS,uCAAG,WAAMziB,EAASW,EAAgB+hB,GAA/B,uBAAAriB,EAAA,6DACvBL,EAAUiR,YAAiBjR,GAC3BW,EAAiBgiB,YAAiBhiB,GAClC+hB,EAAgBC,YAAiBD,GAHV,EAIiBpT,0BAAgBtP,GAAxC4iB,EAJO,EAIhB/a,QAJgB,SAOfwH,EAAgByD,YAAqB9S,EAAS4iB,GAP/B,SAQJvT,EAAcoT,UAAU9hB,EAAgB+hB,GARpC,OAQf5gB,EARe,OASrBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GATf,kDAWrBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAXR,iCAahBjB,GAbgB,0DAAH,2D,gCClBtB,quK,6LCmCa0hB,EAAa,uCAAG,WAC3BC,EACAC,GAF2B,mBAAA1iB,EAAA,8DAII4O,IAA3B,YAAO/L,OAAOC,UAJS,iCAKFD,OAAOC,SAASC,QAAQ,CAC7CvC,OAAQ,wBANe,cAKnBmiB,EALmB,YAQTnhB,SARS,SASjBqB,OAAOC,SAASC,QAAQ,CAAEvC,OAAQ,gBATjB,0BAQnBb,GARmB,cAcnBijB,EAAUxB,MAAMC,QAAQsB,IAAaA,EAAS,GAGpD9f,OAAOC,SAAS+f,GAAG,mBAAmB,SAACF,GACrC,IAAIC,EAEFA,EADED,EAASvV,OAAS,EACVuV,EAAS,GAET,GAEwB,oBAAzBD,EACTA,EAAqBE,GAErB/f,OAAOigB,SAASC,YAIpBlgB,OAAOC,SAAS+f,GAAG,gBAAgB,SAACljB,GAClC,IAAImB,EAAMsN,YAAYzO,GACY,oBAAvB8iB,EACTA,EAAmB3hB,GAEnB+B,OAAOigB,SAASC,YApCK,kBAwClB,CAAE7c,SAAS,EAAM0c,UAASjjB,YAxCR,iCA0CpB,CACLuG,SAAS,EACTnE,MAAO,oDA5CkB,4CAAH,wDAwDbihB,EAAoB,uCAAG,WAAOrjB,EAASsjB,GAAhB,mBAAAjjB,EAAA,6DAE5BC,EAAOE,cAFqB,SAGZF,EAAKI,IAAI6iB,WAAWD,GAHR,cAG5BhF,EAH4B,OAI5Bnd,EAAMyB,IAAKC,MAAM2gB,QAAQlF,GAJG,kBAK3Bnd,GAL2B,2CAAH,yD,+SC5CpBsiB,EAAkB,uCAAG,WAChCzjB,EACAY,EACAD,GAHgC,iBAAAN,EAAA,2DAKfsW,YAAqB3W,EAASY,GAClC,SADLuT,EALwB,EAKxBA,MALwB,gCAOjBuP,YAAoB1jB,EAASY,EAAaD,GAPzB,kDAQZ,QAATwT,EARqB,kCASjBwP,YAAoB3jB,EAASY,EAAaD,GATzB,oDAUZ,SAATwT,EAVqB,kCAWjByP,YAAqB5jB,EAASY,EAAaD,GAX1B,iDAa9BW,QAAQC,IAAR,gDAAqD4S,IAbvB,4CAAH,0DA8BlB0P,EAAc,uCAAG,WAC5B7jB,EACAY,EACAD,EACA0F,GAJ4B,iBAAAhG,EAAA,2DAMXsW,YAAqB3W,EAASY,GAClC,SADLuT,EANoB,EAMpBA,MANoB,gCAQb2P,YAAgB9jB,EAASY,EAAaD,EAAgB0F,GARzC,kDASR,QAAT8N,EATiB,kCAUb4P,YAAgB/jB,EAASY,EAAaD,EAAgB0F,GAVzC,oDAWR,SAAT8N,EAXiB,kCAYb6P,YAAiBhkB,EAASY,EAAaD,EAAgB0F,GAZ1C,iDAc1B/E,QAAQC,IAAR,4CAAiD4S,IAdvB,4CAAH,4DA+Bd8P,EAAiB,uCAAG,WAC/BjkB,EACAY,EACAD,EACA0F,GAJ+B,iBAAAhG,EAAA,2DAMdsW,YAAqB3W,EAASY,GAClC,SADLuT,EANuB,EAMvBA,MANuB,gCAQhB+P,YACXlkB,EACAY,EACAD,EACA0F,GAZ2B,kDAcX,QAAT8N,EAdoB,kCAehBgQ,YACXnkB,EACAY,EACAD,EACA0F,GAnB2B,oDAqBX,SAAT8N,EArBoB,kCAsBhBiQ,YACXpkB,EACAY,EACAD,EACA0F,GA1B2B,iDA6B7B/E,QAAQC,IAAR,+CAAoD4S,IA7BvB,4CAAH,4DA0CjBkQ,EAAY,uCAAG,WAAOrkB,EAASY,EAAaD,GAA7B,iBAAAN,EAAA,2DACTsW,YAAqB3W,EAASY,GAClC,SADLuT,EADkB,EAClBA,MADkB,gCAGXmQ,YAActkB,EAASY,EAAaD,GAHzB,kDAIN,QAATwT,EAJe,kCAKXoQ,YAAcvkB,EAASY,EAAaD,GALzB,oDAMN,SAATwT,EANe,kCAOXqQ,YAAexkB,EAASY,EAAaD,GAP1B,iDASxBW,QAAQC,IAAR,2CAAgD4S,IATxB,4CAAH,0DAyBZsQ,EAAQ,uCAAG,WAAOzkB,EAASY,EAAaD,GAA7B,iBAAAN,EAAA,2DACLsW,YAAqB3W,EAASY,GAClC,SADLuT,EADc,EACdA,MADc,gCAGPuQ,YAAU1kB,EAASY,EAAaD,GAHzB,kDAIF,QAATwT,EAJW,kCAKPwQ,YAAU3kB,EAASY,EAAaD,GALzB,oDAMF,SAATwT,EANW,kCAOPyQ,YAAW5kB,EAASY,EAAaD,GAP1B,iDASpBW,QAAQC,IAAR,sCAA2C4S,IATvB,4CAAH,0DAqBR0Q,EAAkB,uCAAG,WAChC7kB,EACAY,EACAD,GAHgC,iBAAAN,EAAA,2DAKfsW,YAAqB3W,EAASY,GAClC,SADLuT,EALwB,EAKxBA,MALwB,gCAOjB2Q,YAAoB9kB,EAASY,EAAaD,GAPzB,kDAQZ,QAATwT,EARqB,kCASjB4Q,YAAoB/kB,EAASY,EAAaD,GATzB,oDAUZ,SAATwT,EAVqB,kCAWjB6Q,YAAqBhlB,EAASY,EAAaD,GAX1B,iDAa9BW,QAAQC,IAAR,gDAAqD4S,IAbvB,4CAAH,2D,oGCjMV8Q,E,WAGnB,aAAc,yBAFdnd,IAAM,GAGJod,YAAe9kB,KAAK,CAClB0H,IAAMqd,IACNC,OAASC,M,wCAIb,SAAKxR,GACH,IAAMyR,EAAUzR,GAAWA,EAAQyR,QAC/BC,EAAUjS,mCAAyB7I,UAAQC,MAAM4a,GAerD,OAdGzR,IACD0R,EAAUA,EAAQ3e,QAAO,SAAA4G,GAAC,OAAIA,EAAEqG,UAAYA,EAAQyR,WAEjDzR,EAAQ2R,OACTD,EAAUA,EAAQ1U,QAAO,SAAC4U,EAAMC,GAK9B,OAHY,IADAD,EAAM1U,WAAU,SAAAvD,GAAC,OAAIA,EAAEF,SAAWoY,EAAIpY,QAAUE,EAAE+F,OAASmS,EAAInS,SAEzEkS,EAAMte,KAAKue,GAEND,IACP,MAGNrlB,KAAKglB,OAAOG,GACLnlB,KAAK0H,M,oBAGd,SAAOA,GACL1H,KAAK0H,IAAMA,M,qvBClCkB6d,EAA6BC,EAAQ,IAA9DtS,yBACkBuS,EAAuBD,EAAQ,IAAjDE,kBAEKxS,EAA2B,WAA2B,IAA1B/D,EAAyB,uDAAnB,MAAOsE,EAAY,uCAChE,GAAKA,GAAuB,MAAZA,GAA+B,OAAZA,EAE5B,IAAgB,MAAZA,GAA+B,OAAZA,EAC5B,OAAOgS,EAAoBtW,GAAKsS,OAAO8D,EAA0BpW,IAEjE,MAAM,IAAI/N,MAAJ,mDAAsDqS,IAJ5D,OAAO8R,EAA0BpW,I,+CCGxBmK,EAAgB,uCAAG,WAC9B1Z,EACAY,EACAD,EACAqY,GAJ8B,SAAA3Y,EAAA,8DAMb4O,IAAb+J,EAN0B,yCAOrB+M,YAAkB/lB,EAASY,EAAaD,IAPnB,gCASrBqlB,YAAmBhmB,EAASY,EAAaD,EAAgBqY,IATpC,2CAAH,4DAahB6B,EAAgB,uCAAG,WAC9B7a,EACAY,EACAoY,GAH8B,SAAA3Y,EAAA,8DAKb4O,IAAb+J,EAL0B,yCAMrBiN,YAAkBjmB,EAASY,IANN,gCAQrBslB,YAAmBlmB,EAASY,EAAaoY,IARpB,2CAAH,0DAYhBkC,EAAc,uCAAG,WAAOlb,EAASY,EAAaoY,GAA7B,SAAA3Y,EAAA,8DACX4O,IAAb+J,EADwB,yCAEnBmN,YAAgBnmB,EAASY,IAFN,gCAInBwlB,YAAiBpmB,EAASY,EAAaoY,IAJpB,2CAAH,0D,QCzBdsC,EAAY,uCAAG,WAC1Btb,EACAY,EACAD,EACA0F,EACA2S,GAL0B,SAAA3Y,EAAA,8DAOT4O,IAAb+J,EAPsB,yCAQjBqN,YAAcrmB,EAASY,EAAaD,EAAgB0F,IARnC,gCAUjBigB,YACLtmB,EACAY,EACAD,EACA0F,EACA2S,IAfsB,2CAAH,8DAoBZ4C,EAAe,uCAAG,WAC7B5b,EACAY,EACAD,EACA0F,EACA2S,EACA6C,GAN6B,SAAAxb,EAAA,8DAQZ4O,IAAb+J,EARyB,yCASpBuN,YAAiBvmB,EAASY,EAAaD,EAAgB0F,IATnC,gCAWpBmgB,YACLxmB,EACAY,EACAD,EACA0F,EACA2S,EACA6C,IAjByB,2CAAH,gE,QCMfW,EAAgB,uCAAG,WAC9Bxc,EACAY,EACAoY,EACAgD,GAJ8B,SAAA3b,EAAA,8DAMb4O,IAAb+M,EAN0B,yCAOrByK,YAAkBzmB,EAASY,IAPN,gCASrB8lB,YAAmB1mB,EAASY,EAAaoY,EAAUgD,IAT9B,2CAAH,4DAahBe,EAAe,uCAAG,WAAO/c,EAASY,EAAaD,EAAgBqb,GAA7C,SAAA3b,EAAA,8DACZ4O,IAAb+M,EADyB,yCAEpB2K,YAAiB3mB,EAASY,EAAaD,IAFnB,gCAIpBimB,YAAkB5mB,EAASY,EAAaD,EAAgBqb,IAJpC,2CAAH,4DAOfoC,EAAgB,uCAAG,WAC9Bpe,EACAY,EACAD,EACAqY,GAJ8B,SAAA3Y,EAAA,8DAMb4O,IAAb+J,EAN0B,yCAOrB6N,YAAkB7mB,EAASY,EAAaD,IAPnB,gCASrBmmB,YAAmB9mB,EAASY,EAAaD,EAAgBqY,IATpC,2CAAH,4DAahBuF,EAAU,uCAAG,WAAOve,EAASY,EAAaD,EAAgBqY,GAA7C,SAAA3Y,EAAA,8DACD4O,IAAnBtO,EADoB,yCAEfomB,YAAe/mB,EAASY,IAFT,eAGAqO,IAAb+J,EAHa,yCAIfgO,YAAYhnB,EAASY,EAAaD,IAJnB,gCAMfsmB,YAAajnB,EAASY,EAAaD,EAAgBqY,IANpC,2CAAH,4DAUVwF,EAAe,uCAAG,WAAOxe,EAASY,EAAawG,EAAQ4U,GAArC,SAAA3b,EAAA,8DACZ4O,IAAb+M,EADyB,yCAEpBkL,YAAiBlnB,EAASY,EAAawG,IAFnB,gCAIpB+f,YAAkBnnB,EAASY,EAAawG,EAAQ4U,IAJ5B,2CAAH,4DAuBfgD,EAAc,uCAAG,WAAOhf,EAASY,EAAaob,GAA7B,SAAA3b,EAAA,8DACX4O,IAAb+M,EADwB,yCAEnBoL,YAAgBpnB,EAASY,IAFN,gCAInBymB,YAAiBrnB,EAASY,EAAaob,IAJpB,2CAAH,0DAQdkD,EAAuB,uCAAG,WACrClf,EACAY,EACAue,EACAnD,GAJqC,SAAA3b,EAAA,8DAMpB4O,IAAb+M,EANiC,yCAO5BsL,YAAyBtnB,EAASY,EAAaue,IAPnB,gCAS5BoI,YAA0BvnB,EAASY,EAAaue,EAAcnD,IATlC,2CAAH,4DAavBqD,EAAgB,uCAAG,WAC9Brf,EACAY,EACAob,GAH8B,SAAA3b,EAAA,8DAKb4O,IAAb+M,EAL0B,yCAMrBwL,YAAkBxnB,EAASY,IANN,gCAQrB6mB,YAAmBznB,EAASY,EAAaob,IARpB,2CAAH,0DAYhBuD,EAAyB,uCAAG,WACvCvf,EACAY,EACAue,EACAnD,GAJuC,SAAA3b,EAAA,8DAMtB4O,IAAb+M,EANmC,yCAO9B0L,YAA2B1nB,EAASY,EAAaue,IAPnB,gCAS9BwI,YAA4B3nB,EAASY,EAAaue,EAAcnD,IATlC,2CAAH,4D,QClHzB8F,EAAM,uCAAG,WACpB9hB,EACAY,EACAD,EACAqY,GAJoB,SAAA3Y,EAAA,8DAMG4O,IAAnBtO,EANgB,yCAOXinB,YAAW5nB,EAASY,IAPT,eAQIqO,IAAb+J,EARS,yCASX6O,YAAQ7nB,EAASY,EAAaD,IATnB,gCAWXmnB,YAAS9nB,EAASY,EAAaD,EAAgBqY,IAXpC,2CAAH,4DAeN+I,EAAa,uCAAG,WAC3B/hB,EACAY,EACAD,EACA0F,EACA2S,GAL2B,SAAA3Y,EAAA,8DAOV4O,IAAb+J,EAPuB,yCAQlB+O,YAAe/nB,EAASY,EAAaD,EAAgB0F,IARnC,gCAUlB2hB,YACLhoB,EACAY,EACAD,EACA0F,EACA2S,IAfuB,2CAAH,8DAoBbiJ,EAAc,uCAAG,WAC5BjiB,EACAY,EACAD,EACA0F,EACA2S,EACA6C,GAN4B,SAAAxb,EAAA,8DAQX4O,IAAb+J,EARwB,yCASnBiP,YAAgBjoB,EAASY,EAAaD,EAAgB0F,IATnC,gCAWnB6hB,YACLloB,EACAY,EACAD,EACA0F,EACA2S,EACA6C,IAjBwB,2CAAH,gEAsBdsG,EAAe,uCAAG,WAC7BniB,EACAY,EACAD,EACAyhB,EACApG,GAL6B,SAAA3b,EAAA,8DAOZ4O,IAAb+M,EAPyB,yCAQpBmM,YAAiBnoB,EAASY,EAAaD,EAAgByhB,IARnC,gCAUpBgG,YACLpoB,EACAY,EACAD,EACAyhB,EACApG,IAfyB,2CAAH,8DAoBfuG,EAAa,uCAAG,WAC3BviB,EACAY,EACAD,EACAqb,GAJ2B,SAAA3b,EAAA,8DAMV4O,IAAb+M,EANuB,yCAOlBqM,YAAeroB,EAASY,EAAaD,IAPnB,gCASlB2nB,YAAgBtoB,EAASY,EAAaD,EAAgBqb,IATpC,2CAAH,4DC1FbqF,EAAe,uCAAG,WAC7BrhB,EACAY,EACAD,EACAqb,GAJ6B,SAAA3b,EAAA,8DAMZ4O,IAAb+M,EANyB,yCAOpBuM,YAAiBvoB,EAASY,EAAaD,IAPnB,gCASpB6nB,YACLxoB,EACAY,EACAD,EACAqb,IAbyB,2CAAH,6D,spBCAfnF,EAAe,SAACjW,EAAaob,GAC5BvR,UAAQC,MAApB,IACQ4C,EAAWqM,YAAe/Y,EAAa,KAAMob,GAA7C1O,OACFwJ,EAAiB,SAAC9G,GAAD,IAAM1C,EAAN,uDAAe,SAAf,gBAA+B0C,EAA/B,mBAA6C1C,IACpE,OAEMA,EACKwJ,EAAe,qCAAsCxJ,GAEvD,sCAUEtI,EAAa,uCAAG,WAAOpE,EAAaob,GAApB,mBAAA3b,EAAA,sDACvB2P,EAAM6G,EAAajW,EAAaob,GAEhCjb,EAAQ,EAHe,YAKpBA,EAAQ,GALY,iCAMbgW,MAAM/G,EAAK,CAAEgH,KAAM,OAAQC,MAAO,aANrB,YAMzB9V,EANyB,QAOjB+V,GAPiB,mDAUzBnW,GAAS,EAVgB,0BAYb,IAAVA,GAAgBI,EAZO,uBAanB,IAAIK,MAAJ,iDAbmB,yBAedL,EAAIgW,OAfU,qFAAH,wDA2BbqG,EAAc,uCAAG,WAAOxd,EAASsN,GAAhB,iBAAAjN,EAAA,yDAC5BL,EAAUiR,YAAiBjR,KACrB2N,EAASN,YAAgBrN,EAASsN,MAC1BK,EAAO9F,QAHO,mBAIrB8F,EAAO+E,QAJc,sBAKlB,IAAIlR,MAAM,mCAAoCmM,EAAO+E,SALnC,cAOpBzN,EAASuN,YACbxS,EACA2N,EAAO9F,QACPyF,EACAK,EAAO+E,SAXiB,SAabzN,EAAOwjB,WAbM,mFAAH,yD,iaClDdtiB,EAAyB,SACpCjC,EACAkB,EACAhB,EACAH,EACAmC,GAEA,OAAOxC,YACHM,EAAmBkB,EAAQhB,EAAcH,EAAamC,GACxDiB,OAGStB,EAAuB,SAClC7B,EACAkB,EACAhB,EACAH,EACAU,GAEA,OAAST,EAAmBkB,EAAQhB,EAAcH,EAClDU,GAGWqB,EAAqB,SAAChG,EAAS6F,GAC1C,IAAMwS,EAAmBlH,YAAoBnR,GAE7C,OAAO4D,YAAGiC,GAAayB,MAAM+Q,ICxBlBqQ,EAAsB,SAACC,EAAmB1kB,GAApB,OACjC0kB,EAAkBhR,GAAG,GAAK/T,YAAG,GAAKK,EAAUiK,IAAIya,IACrCC,EAA8B,SACzCC,EACAF,EACA1kB,EACAC,EACAC,EACAC,EACAE,EACAc,GAEA,IAAM0jB,EAAaJ,EAAoBC,EAAmB1kB,GACpDlB,EAAQmB,EAAiBoD,MAAMlC,GAAOkC,MAAMlD,GAC5C2kB,EAAY9kB,EACf+T,KAAK7T,GACL4T,MAAMhV,GACNgV,MAAMhV,EAAMsE,MAAMC,MAAMhD,IAE3B,OADe6J,YAAII,YAAIsa,EAAeE,EAAU7a,IAAI4a,IAAcllB,YAAG,KAI1D8T,EAAsB,SAACtQ,EAAQc,EAAM9D,GAAf,OACjCgD,EAAOuQ,GAAG,GAAK/T,YAAG,GAAKsE,EAAKgG,IAAI9G,GAAQ8G,IAAI9J,IAEjC4kB,EAAsB,SACjC5jB,EACAgC,EACAhD,EACAG,GAEA,OAAO6C,EAAOC,MAAMC,MAAMlC,GAAOkC,MAAMlD,GAAYkD,MAAM/C,IAG9C0kB,EAAe,SAAC7jB,EAAOgC,EAAQhD,EAAY8D,GACtD,OAAOd,EAAOE,MAAMlC,GAAOkC,MAAMlD,GAAY2T,MAAM7P,IAGxCghB,EAA6B,SACxC9jB,EACAgC,EACAgB,EACAF,EACA9D,EACAG,GAEA,GAAI6C,EAAOuQ,GAAG,GACZ,OAAOvP,EAET,IAAM+gB,EAAOH,EACX5jB,EACAgC,EACAhD,EACAG,GAEIuU,EAAMmQ,EAAa7jB,EAAOgC,EAAQhD,EAAY8D,GAEpD,OADqBiG,YAAI/F,EAAO4P,KAAKc,GAAKf,MAAMoR,EAAK7hB,MAAM,OAAQ1D,YAAG,KAI3DgU,EAA4B,SACvCxQ,EACAgB,EACAF,EACA9D,EACAI,GAEA,IAAMsT,EAAM5P,EAAK6P,MAAM3P,GAAQ8F,IAAI9G,GAAQ8G,IAAI9J,GAC3CjD,EAAMiG,EAAOM,GAAG,GAChBoQ,EAAI5J,IAAItK,YAAG,GAAGmU,MAAMvT,IACpBsT,EAAI5J,IAAItK,YAAG,GAAGoU,KAAKxT,IAEvB,OADArD,EAAMgN,YAAIhN,EAAKyC,YAAG,KAIPqU,EAAe,SAC1B7S,EACAgD,EACAhB,EACAnD,EACAC,EACAE,EACAE,EACAC,EACA6d,EACA/b,GAEA,IAAM8R,EAAY/Q,EACf4Q,KAAKoK,GACL/a,MACAC,MAAMlC,GACNkC,MAAMlD,GACNkD,MAAM/C,GACH6kB,EAAgBnlB,EACnBiK,IAAI5J,GACJ4J,IAAI9I,GACJ8I,IAAI9J,GACP,OAAIgE,EAAO4P,KAAK3R,GAAQiI,IAAI6J,GAExBiK,EAAU5T,IAAI4a,EAAcrR,MAAM7T,KAClCke,EAAU9T,IAAI8a,EAAc5G,UAAUzK,MAAM7T,IAErC,CAAEqC,SAAS,GAEb,CAAEA,SAAS,EAAO8iB,QAAS,+BAE7B,CAAE9iB,SAAS,EAAO8iB,QAAS,gC,4nBCnEvBvH,EAAM,uCAAG,WAAO9hB,EAASY,EAAaD,GAA7B,uBAAAN,EAAA,+DACM0V,YAAuB/V,EAASY,GAAlDqV,EADY,EACZA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAFjC,kBAOD6K,EAAOqW,OAAOnhB,GAPb,OAOZmB,EAPY,OAQlBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GARlB,gDAUlBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAVX,iCAYbjB,GAZa,yDAAH,0DA4BN4gB,EAAa,uCAAG,WAC3B/hB,EACAY,EACAD,EACA0F,GAJ2B,eAAAhG,EAAA,6DAMrBipB,EAAQle,YAAqBpL,EAASY,GANjB,SAOd0oB,EAAMvH,cAAcphB,EAAgB6I,YAAcnD,IAPpC,mFAAH,4DAuBb4b,EAAc,uCAAG,WAC5BjiB,EACAY,EACAD,EACA0F,GAJ4B,2CAAAhG,EAAA,+DAOF0V,YAAuB/V,EAASY,GAAlDsV,EAPoB,EAOpBA,cACFoT,EAAQle,YAAqBpL,EAASY,GAEtCgL,EAASF,YAAc1L,EAASkW,EAAetV,GAVzB,SAaR4E,YAAexF,EAASY,GAbhB,cAatBwE,EAbsB,gBAcWwG,EAAOmR,gBAAgBpc,GAdlC,uBAcpByG,EAdoB,EAcpBA,OAAQgB,EAdY,EAcZA,OAAQF,EAdI,EAcJA,KAdI,UAewBohB,EAAM5jB,gBAf9B,oBAepBtB,EAfoB,EAepBA,WAAYG,EAfQ,EAeRA,sBAEdglB,EAAoBL,YACxB9jB,EACAgC,EACAgB,EACAF,EACA9D,EACAG,IAEEX,YAAGyC,GAAQmI,IAAI+a,GAzBS,4CA2BPD,EAAMhjB,cACrB,gEACA,CAACkD,YAAcnD,IACf1F,GA9BsB,QA2BlBmB,EA3BkB,OAgCxBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAhCZ,mDAkCxBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAlCL,gCAqC1BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,0BArCL,iCAuCrBjB,GAvCqB,2DAAH,4DAuFdma,EAAY,uCAAG,WAC1Btb,EACAY,EACAD,EACA0F,GAJ0B,mBAAAhG,EAAA,6DAMpBipB,EAAQle,YAAqBpL,EAASY,GANlB,kBAUP0oB,EAAMhjB,cACrB,8DACA,CAACkD,YAAcnD,IACf1F,GAbsB,OAUlBmB,EAVkB,OAexBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAfZ,gDAiBxBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAjBL,iCAmBnBjB,GAnBmB,yDAAH,4DAmCZya,EAAe,uCAAG,WAC7B5b,EACAY,EACAD,EACAia,GAJ6B,mDAAAva,EAAA,+DAMH0V,YAAuB/V,EAASY,GAAlDuV,EANqB,EAMrBA,cACFmT,EAAQle,YAAqBpL,EAASY,GAEtCmL,EAASF,YAAc7L,EAASmW,EAAevV,GATxB,SAWT4E,YAAexF,EAASY,GAXf,cAWvBwE,EAXuB,gBAYoB9B,QAAQwE,IAAI,CAC3DiE,EAAOuS,QAAQ3d,GACfoL,EAAOyd,gBAdoB,0CAYtBX,EAZsB,KAYPF,EAZO,eAgBoBW,EAAM5jB,gBAhB1B,wBAgBrBtB,EAhBqB,EAgBrBA,WAAYE,EAhBS,EAgBTA,mBAhBS,UAqBnBglB,EAAM7jB,iBArBa,oBAkB3BxB,EAlB2B,EAkB3BA,UACAC,EAnB2B,EAmB3BA,iBACAC,EApB2B,EAoB3BA,eAGIsW,EAAqBmO,YACzBC,EACAF,EACA1kB,EACAC,EACAC,EACAC,EACAE,EACAc,IAGExB,YAAGgX,GAAQpM,IAAIiM,GAlCU,4CAoCR6O,EAAMhjB,cACrB,iEACA,CAACkD,YAAcoR,IACfja,GAvCuB,QAoCnBmB,EApCmB,OAyCzBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAzCX,mDA2CzBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IA3CJ,gCA8C3BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,0BA9CJ,iCAgDtBjB,GAhDsB,2DAAH,4DAiEfghB,EAAe,uCAAG,WAC7BniB,EACAY,EACAD,EACAyhB,GAJ6B,+DAAA/hB,EAAA,6DAK7BgG,EAL6B,+BAKpB,IALoB,SAOTb,YAAexF,EAASY,GAPf,cAOvBwE,EAPuB,SAQH2Q,YAAuB/V,EAASY,GAAlDsV,EARqB,EAQrBA,cACFoT,EAAQle,YAAqBpL,EAASY,GAEtCgL,EAASF,YAAc1L,EAASkW,EAAetV,GAXxB,SAiBnB0oB,EAAM5jB,gBAjBa,uBAc3BtB,EAd2B,EAc3BA,WACAG,EAf2B,EAe3BA,sBACAD,EAhB2B,EAgB3BA,mBAhB2B,UAkBiBglB,EAAM7jB,iBAlBvB,wBAkBrBxB,EAlBqB,EAkBrBA,UAAWC,EAlBU,EAkBVA,iBAlBU,UAmBI0H,EAAOmR,gBAAgBpc,GAnB3B,oBAmBrByG,EAnBqB,EAmBrBA,OAAQgB,EAnBa,EAmBbA,SAEVia,EAAkBpK,YACtB7S,EACAgD,EACAhB,EACAnD,EACAC,EACAE,EACAE,EACAC,EACAX,YAAGwe,GACHxe,YAAGyC,KAEeE,QAjCS,4CAmCR+iB,EAAMhjB,cACrB,wEACA,CAACkD,YAAc4Y,GAAY5Y,YAAcnD,IACzC1F,GAtCuB,QAmCnBmB,EAnCmB,OAwCzBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAxCX,mDA0CzBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IA1CJ,gCA6C3BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAOigB,EAAgBgH,SA7CpB,iCA+CtBloB,GA/CsB,2DAAH,4DA8DfohB,EAAa,uCAAG,WAAOviB,EAASY,EAAaD,GAA7B,6BAAAN,EAAA,+DACD0V,YAAuB/V,EAASY,GAAlDsV,EADmB,EACnBA,cACFoT,EAAQle,YAAqBpL,EAASY,GAEtCgL,EAASF,YAAc1L,EAASkW,EAAetV,GAJ1B,SAMJgL,EAAOmR,gBAAgBpc,GANnB,oBAO3ByG,GADMA,EANqB,EAMrBA,QACUob,WAEJ7K,GAAG,GATY,2CAWN2R,EAAMhjB,cACrB,wEACA,CAACkD,YAAcpC,GAAS,KACxBzG,GAdqB,QAWjBmB,EAXiB,OAgBvBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAhBb,kDAkBvBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAlBN,gCAqBzBjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,wBArBN,iCAuBpBjB,GAvBoB,0DAAH,0DAqCbsoB,EAAU,uCAAG,WAAOzpB,EAASW,GAAhB,mCAAAN,EAAA,sEAEDqpB,YAAe/oB,GAFd,UAElBgpB,EAFkB,OAGlBtjB,EAASmD,YAAcmgB,EAAStjB,QAC9BujB,EAAaD,EAAbC,SACAC,EAAUF,EAAVE,MACAxkB,EAAMskB,EAANtkB,EACAC,EAAMqkB,EAANrkB,EACAC,EAAMokB,EAANpkB,GACJokB,EAASG,MATW,sBAUhBC,EAAqBzT,YAA8BtW,IAVnC,wBAYdgqB,EAAche,YAAuBhM,EAAS+pB,GAZhC,oBAeDC,EAAYP,WAC3B9oB,EACA0F,EACAujB,EACAC,EACAxkB,EACAC,EACAC,GAtBgB,QAeZzD,EAfY,OAwBlBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAxBlB,mDA0BlBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IA1BX,gCA6BpBjB,EAAM,CACJoF,SAAS,EACTnE,MAAM,iDAAD,OAAmDpC,IA/BtC,gCAmCtBmB,EAAM,CACJoF,SAAS,EACTnE,MAAO,yBArCa,iCAwCjBjB,GAxCiB,2DAAH,wDAwDV8oB,EAAM,uCAAG,WAAOjqB,EAASW,EAAgBmJ,EAAWzD,GAA3C,uBAAAhG,EAAA,+DACQ0J,YAAuB/J,GAA3CiK,EADY,EACZA,gBACFgD,EAAWF,YAAgB/M,EAASiK,GAFtB,kBAMDgD,EAASgd,OAAOtpB,EAAgB0F,EAAQyD,GANvC,OAMZhI,EANY,OAOlBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAPlB,gDASlBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAK,MATX,iCAWbjB,GAXa,yDAAH,4DAyBN+oB,EAAQ,uCAAG,WAAOpgB,EAAWnJ,GAAlB,yCAAAN,EAAA,6DAEhB8pB,EAAmBpf,aAAwB,GAF3B,SAICof,EAAiBC,UAAUzpB,GAJ5B,UAIhBgpB,EAJgB,OAMdtjB,EAAWsjB,EAAXtjB,OACA6D,EAAgByf,EAAhBzf,YACAC,EAAiBwf,EAAjBxf,aACFC,EAAYuf,EAASE,MACnBxkB,EAAMskB,EAANtkB,EACAC,EAAMqkB,EAANrkB,EACAC,EAAMokB,EAANpkB,GACJokB,EAASG,MAbS,sBAcQ/f,YAAuBD,KAA3CG,EAdY,EAcZA,iBAdY,wBAgBZgD,EAAWF,YAAgBjD,EAAWG,GAhB1B,oBAmBCgD,EAASid,SACxBvpB,EACA0F,EACA6D,EACAC,EACAC,EACA/E,EACAC,EACAC,GA3Bc,QAmBVzD,EAnBU,OA6BhBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GA7BpB,mDA+BhBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IA/Bb,gCAkClBjB,EAAM,CACJoF,SAAS,EACTnE,MAAM,6CAAD,OAA+C8H,IApCpC,gCAwCpB/I,EAAM,CACJoF,SAAS,EACTnE,MAAO,yBA1CW,iCA6CfjB,GA7Ce,2DAAH,wDA2DRymB,EAAU,uCAAG,WAAO5nB,EAASW,GAAhB,yBAAAN,EAAA,+DACiB0J,YAAuB/J,GAAxDiK,EADgB,EAChBA,gBAAiB2M,EADD,EACCA,YACnB9J,EAAOF,YAAY5M,EAAS4W,EAAa3M,GAFvB,kBAML6C,EAAKgV,OAAOnhB,GANP,OAMhBmB,EANgB,OAOtBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAPd,gDAStBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAK,MATP,iCAWjBjB,GAXiB,yDAAH,wDAyBVkpB,EAAW,uCAAG,WAAOrqB,EAASW,GAAhB,yCAAAN,EAAA,sEAEFiqB,YAAyB3pB,GAFvB,UAEnBgpB,EAFmB,OAGnBtjB,EAASmD,YAAcmgB,EAAStjB,QAAQjF,WACtCwoB,EAA4CD,EAA5CC,SAAUC,EAAkCF,EAAlCE,MAAOU,EAA2BZ,EAA3BY,GAAIC,EAAuBb,EAAvBa,GAAIC,EAAmBd,EAAnBc,GAAIC,EAAef,EAAfe,GAAIC,EAAWhB,EAAXgB,GAAIC,EAAOjB,EAAPiB,IACzCjB,EAASG,MALY,sBAMjBC,EAAqB3V,8CAAoCpU,IANxC,wBAUf6qB,EAAoB3d,YACxBlN,EACA+pB,GAZmB,mBAeFc,EAAkBC,KACjCnqB,EACA0F,EACAujB,EACAC,EACAU,EACAC,EACAC,EACAC,EACAC,EACAC,GAzBiB,QAeb9oB,EAfa,OA2BnBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GA3BjB,kDA6BnBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IA7BV,gCAgCrBjB,EAAM,CACJoF,SAAS,EACTnE,MAAM,wDAAD,OAA0DpC,IAlC5C,gCAsCvBmB,EAAM,CACJoF,SAAS,EACTnE,MAAO,yBAxCc,iCA2ClBjB,GA3CkB,0DAAH,yD,8RCthBX4pB,EAAW,uCAAG,WAAOC,GAAP,mCAAA3qB,EAAA,6DACnBya,EAAKzQ,aAAgB,GAC3B2gB,EAAc9V,YAAkB8V,GAFP,SAGPlQ,EACfC,UAAU,CAAC,GAAD,OACNiQ,EADM,4BAENA,EAFM,2BAGNA,EAHM,6BAINA,EAJM,0BAKNA,EALM,sBAMNA,EANM,sBAONA,EAPM,sBAQNA,EARM,kBAUVhQ,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,cAAe0Z,MAdpB,YAGnB9Z,EAHmB,6CAgBoCA,EAhBpC,GAgBhBnB,EAhBgB,KAgBPqG,EAhBO,KAgBCujB,EAhBD,KAgBWC,EAhBX,KAgBkBxkB,EAhBlB,KAgBqBC,EAhBrB,KAgBwBC,EAhBxB,KAgB2BukB,EAhB3B,uBAiBhB,CACL9pB,QAASwV,YAAaxV,GACtBqG,OAAQtC,YAAcsC,GAAQjF,WAC9BwoB,SAAUpU,YAAaoU,GACvBC,MAAOrU,YAAaqU,GACpBxkB,EAAGmQ,YAAanQ,GAChBC,IACAC,IACAukB,MAAOrU,YAAWqU,KAzBG,2CAAH,sDA8BXmB,EAAkB,uCAAG,WAAOD,GAAP,uBAAA3qB,EAAA,6DAC1Bya,EAAKzQ,aAAgB,GAC3B2gB,EAAc9V,YAAkB8V,GAFA,SAGdlQ,EACfC,UAAU,CAAC,GAAD,OACNiQ,EADM,+BAENA,EAFM,0BAIVhQ,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,qBAAsB0Z,MARpB,YAG1B9Z,EAH0B,6CAUIA,EAVJ,GAUvB+pB,EAVuB,KAUZC,EAVY,uBAWvB,CACLC,GAAIrnB,YAAcmnB,GAAW9pB,WAC7BkhB,MAAOve,YAAconB,GAAc/pB,aAbP,2CAAH,sDAkBlBiqB,EAAgB,uCAAG,WAAOL,GAAP,qBAAA3qB,EAAA,6DACxBya,EAAKzQ,aAAgB,GAC3B2gB,EAAc9V,YAAkB8V,GAFF,SAGZlQ,EACfC,UAAU,CAAC,GAAD,OAAIiQ,EAAJ,kBACVhQ,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,mBAAoB0Z,MALpB,YAGxB9Z,EAHwB,6CAOZA,EAPY,GAOrBskB,EAPqB,uBAQrB,CACLA,MAAO1hB,YAAc0hB,GAAOrkB,aATF,2CAAH,sDAgChBsoB,EAAc,uCAAG,WAAOsB,GAAP,mBAAA3qB,EAAA,sEACL0qB,EAAYC,GADP,cACtBrB,EADsB,gBAEEsB,EAAmBD,GAFrB,cAEtBM,EAFsB,gBAGAD,EAAiBL,GAHjB,cAGtBO,EAHsB,yBAIrB3gB,OAAO4gB,OAAO7B,EAAU2B,EAAiBC,IAJpB,4CAAH,sDAiBd1Q,EAAgB,uCAAG,WAAO7a,EAASY,GAAhB,yBAAAP,EAAA,6DAExBya,EAAKzQ,cAFmB,kBAIVyQ,EACfC,UAAU,CAAC,GAAD,OAAI/a,EAAJ,YAAeY,EAAf,gBACVoa,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,mBAAoB0Z,MANtB,UAItB9Z,EAJsB,SAOT4U,YAAuB/V,EAASY,GAA3C0M,EAPoB,EAOpBA,QACJnM,EARwB,qCASNA,EATM,GASnB8C,EATmB,uBAUnB,CACLA,UAAWF,YAAcE,GAAW7C,WACpCkM,WAZwB,yDAgB5BhM,QAAQC,IAAR,MAhB4B,0DAAH,wDA+BhB2Z,EAAc,uCAAG,WAAOlb,EAASY,GAAhB,2BAAAP,EAAA,6DACtBya,EAAKzQ,aAAgB,GADC,SAKpByL,EAAcD,YAAe7V,GALT,SAMR8a,EACfC,UAAU,CAAC,GAAD,OACNjF,EADM,YACSlV,EADT,kBAENkV,EAFM,YAESlV,EAFT,wBAGNkV,EAHM,YAGSlV,EAHT,iBAKVoa,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,iBAAkB0Z,MAZtB,YAMpB9Z,EANoB,6CAcWA,EAdX,GAcjBga,EAdiB,KAcZC,EAdY,KAcFC,EAdE,uBAejB,CACLF,IAAKpX,YAAcoX,GAAK/Z,WACxBga,SAAUrX,YAAcqX,GAAUha,WAClCia,UAAWtX,YAAcsX,GAAWja,aAlBd,yDAsB1BE,QAAQC,IAAR,MAtB0B,0DAAH,wDAqCdkqB,EAAgB,uCAAG,WAAOzrB,EAASY,GAAhB,6BAAAP,EAAA,6DACxBya,EAAKzQ,aAAgB,GADG,SAGtByL,EAAcD,YAAe7V,GAHP,SAIV8a,EACfC,UAAU,CAAC,GAAD,OACNjF,EADM,YACSlV,EADT,kBAENkV,EAFM,YAESlV,EAFT,mBAGNkV,EAHM,YAGSlV,EAHT,wBAINkV,EAJM,YAISlV,EAJT,iBAMVoa,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,iBAAkB0Z,MAXpB,YAItB9Z,EAJsB,6CAaeA,EAbf,GAanBga,EAbmB,KAaduQ,EAbc,KAaRtQ,EAbQ,KAaEC,EAbF,uBAcnB,CACLF,IAAKpX,YAAcoX,GAAK/Z,WACxBsqB,KAAM3nB,YAAc2nB,GAAMtqB,WAC1Bga,SAAUrX,YAAcqX,GAAUha,WAClCia,UAAWtX,YAAcsX,GAAWja,aAlBZ,yDAsB5BE,QAAQC,IAAR,MAtB4B,0DAAH,wDA0EhBoqB,EAAiB,uCAAG,WAAO3rB,EAASY,EAAaoqB,GAA7B,yBAAA3qB,EAAA,6DACzBya,EAAKzQ,aAAgB,GAE3B2gB,EAAc9V,YAAkB8V,GAHD,SAKvBlV,EAAcD,YAAe7V,GALN,SAMX8a,EACfC,UAAU,CAAC,GAAD,OACNjF,EADM,YACSlV,EADT,YACwBoqB,EADxB,wBAENlV,EAFM,YAESlV,EAFT,YAEwBoqB,EAFxB,iBAIVhQ,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,oBAAqB0Z,MAXtB,YAMvB9Z,EANuB,8CAaGA,EAbH,GAapBia,EAboB,KAaVC,EAbU,uBAcpB,CACLD,SAAUrX,YAAcqX,GAAUha,WAClCia,UAAWtX,YAAcsX,GAAWja,aAhBX,0DAoB7BE,QAAQC,IAAR,MApB6B,0DAAH,0DAwBjB+oB,EAAwB,uCAAG,WAAOU,GAAP,yCAAA3qB,EAAA,6DAChCya,EAAK7P,aAAuB,GAClC+f,EAAc9V,YAAkB8V,GAFM,SAGpBlQ,EACfC,UAAU,CAAC,GAAD,OACNiQ,EADM,4BAENA,EAFM,2BAGNA,EAHM,6BAINA,EAJM,0BAKNA,EALM,uBAMNA,EANM,uBAONA,EAPM,uBAQNA,EARM,uBASNA,EATM,uBAUNA,EAVM,uBAWNA,EAXM,kBAgBVhQ,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,2BAA4B0Z,MApBpB,YAGhC9Z,EAHgC,6CAqChCA,EArCgC,IAuBlCnB,EAvBkC,KAwBlCqG,EAxBkC,KAyBlCujB,EAzBkC,KA0BlCC,EA1BkC,KA2BlCU,EA3BkC,KA4BlCC,EA5BkC,KA6BlCC,EA7BkC,KA8BlCC,EA9BkC,KA+BlCC,EA/BkC,KAgClCC,EAhCkC,KAiClCd,EAjCkC,wBAsC7B,CACL9pB,QAASwV,YAAaxV,GACtBqG,OAAQtC,YAAcsC,GAAQjF,WAC9BwoB,SAAUpU,YAAaoU,GACvBC,MAAOrU,YAAaqU,GACpBU,GAAI/U,YAAa+U,GACjBC,KACAC,KACAC,GAAIlV,YAAakV,GACjBC,KACAC,KACAd,MAAOrU,YAAWqU,KAjDgB,2CAAH,uD,wUCvQ/B9J,EAAiB,uCAAG,WACxB1U,EACAqI,EACAsM,EACAxZ,EACAyZ,EACA9b,EACAC,GAPwB,+BAAAhE,EAAA,6DASlB8f,EAAcpc,YAAckc,EAAKE,aATf,SAUA7U,EAAc8U,cAAc3Z,GAV5B,cAUlB4Z,EAVkB,OAYlBC,EAAYH,EAAYzY,GAAG,GAAK,OAAS,QACzCtC,EAAQrB,YAAckc,EAAK7a,OAC3Bmb,EAdkB,WAcPF,EAAUlb,UAdH,OAelBqb,EAAiBlV,EAAcmV,cACnCN,EACA/a,EACAhB,EACAC,GAEIqc,EAAWP,EAAY9Y,MAAMC,MAAMlC,GAAOkC,MAAMlD,GAChDgD,EAAS+Y,EAAY9Y,MAErBlG,EAAM,CACVmf,YACAsL,UAAWjY,EACXvO,MAAOA,EAAMhE,WACbsf,SAAUA,EAAStf,WACnBgG,OAAQA,EAAOhG,WACfof,eAAgBA,EAAepf,WAC/Buf,gBAAiBT,EAAO9e,WACxBmf,QAhCsB,kBAmCjBpf,GAnCiB,4CAAH,kEAsCjB0qB,EAAqB,uCAAG,WAC5B5L,EACAC,EACAvM,EACAvP,GAJ4B,uBAAA/D,EAAA,6DAOtB+G,EAASrD,YAAckc,EAAK7Y,QAAQC,MAGpClC,EAVsB,UAUP8a,EAAK9a,UAVE,OAWtBC,EAAQrB,YAAckc,EAAK7a,OAG3B0mB,EAAW1kB,EAAOE,MAAMlC,GAAOkC,MAAMlD,GAGrCjD,EAAM,CACVmf,UAAW,cACXsL,UAAWjY,EACXvO,MAAOA,EAAMhE,WACbsf,SAAUoL,EAAS1qB,WACnBgG,OAAQA,EAAOhG,WACfof,eAAgB,IAChBG,gBAAiBT,EAAO9e,WACxBmf,KAAMpb,GAzBoB,kBA+BrBhE,GA/BqB,2CAAH,4DA0Kdyf,EAAqB,uCAAG,WACnC5gB,EACAY,EACAD,EACAkG,GAJmC,yCAAAxG,EAAA,+DAMV0V,YAAuB/V,EAASY,GAAjD+S,EAN2B,EAM3BA,aAEFrI,EAAgBF,YAAqBpL,EAASY,GARjB,SAUb0K,EAAcuV,cAAc,UAVf,cAU7B7Z,EAV6B,OAYnCH,EAAYhF,SAASgF,GACfia,EAAU,CAAEC,MAAOpgB,GAbU,SAcd2K,EAAc0V,eACjC,QACAF,EACAja,EACAG,EAAQia,QAlByB,cAc7Bna,EAd6B,iBAwBzBwE,EAAc5F,gBAxBW,iBAqBjCtB,EArBiC,EAqBjCA,WACAC,EAtBiC,EAsBjCA,SACAE,EAvBiC,EAuBjCA,sBAGIV,EAAS,GAENnC,EAAI,EA5BsB,aA4BnBA,EAAIoF,EAAO2G,QA5BQ,wBA6B3B0T,EAAOra,EAAOpF,GA7Ba,UA+Bfse,EAChB1U,EACAqI,EACAwN,EAAKD,aACLC,EAAK1a,YACL0a,EAAKR,gBACLvc,EACAC,EACAE,GAvC+B,QA+B3BpD,EA/B2B,OAyCjC0C,EAAOud,QAAQjgB,GAzCkB,QA4BAO,IA5BA,iDA2C5BmC,GA3C4B,4CAAH,4DA+CrBkoB,EAAyB,uCAAG,WACvC/rB,EACAY,EACAD,EACAkG,GAJuC,qCAAAxG,EAAA,+DAMd0V,YAAuB/V,EAASY,GAAjD+S,EAN+B,EAM/BA,aAEFrI,EAAgBF,YAAqBpL,EAASY,GARb,SAUjB0K,EAAcuV,cAAc,UAVX,cAUjC7Z,EAViC,OAWvCH,EAAYhF,SAASgF,GACfia,EAAU,CAAEC,MAAOpgB,GAZc,SAalB2K,EAAc0V,eACjC,YACAF,EACAja,EACAG,EAAQia,QAjB6B,cAajCna,EAbiC,iBAmBVwE,EAAc5F,gBAnBJ,iBAmB/BtB,EAnB+B,EAmB/BA,WAEFP,EAAS,GAENnC,EAAI,EAvB0B,aAuBvBA,EAAIoF,EAAO2G,QAvBY,wBAwB/B0T,EAAOra,EAAOpF,GAxBiB,UA0BnBmqB,EAChB1K,EAAKD,aACLC,EAAKR,gBACLhN,EACAvP,GA9BmC,QA0B/BjD,EA1B+B,OAgCrC0C,EAAOud,QAAQjgB,GAhCsB,QAuBJO,IAvBI,iDAkChCmC,GAlCgC,4CAAH,4DClQhCmoB,EAAc,WAClB,OAAOjX,8BAAoBtK,UAAQC,QAG/BoV,EAAS,uCAAG,WAAO9P,EAAKic,GAAZ,eAAA5rB,EAAA,sEACG0W,MAAM/G,EAAKic,GADd,cACVlM,EADU,gBAEHA,EAAK5I,OAFF,mFAAH,wDAKF+U,EAAY,uCAAG,WAAOC,GAAP,2BAAA9rB,EAAA,6DAAa4rB,EAAb,+BAAoB,CAAEprB,OAAQ,OAA9B,SACbif,EAAU,GAAD,OAAIkM,KAAJ,OAAoBG,GAAQF,GADxB,mFAAH,sDAYZxF,EAAiB,uCAAG,WAAOzmB,EAASY,GAAhB,eAAAP,EAAA,sEACbyf,EAAU,GAAD,OAAIkM,IAAJ,0BAAmCprB,IAD/B,YACzBO,EADyB,UAEpBA,EAAIoF,QAFgB,yCAGtBpF,EAAI6B,MAHkB,gCAKxB7B,GALwB,2CAAH,wDAgBjBimB,EAAe,uCAAG,WAAOpnB,EAASY,GAAhB,eAAAP,EAAA,sEACXyf,EAAU,GAAD,OAAIkM,IAAJ,yBAAkCprB,IADhC,YACvBO,EADuB,UAElBA,EAAIoF,QAFc,yCAGpBpF,EAAI6B,MAHgB,gCAKtB7B,GALsB,2CAAH,wDAgBfqmB,EAAiB,uCAAG,WAAOxnB,EAASY,GAAhB,eAAAP,EAAA,sEACbyf,EAAU,GAAD,OAAIkM,IAAJ,2BAAoCprB,IADhC,YACzBO,EADyB,UAEpBA,EAAIoF,QAFgB,yCAGtBpF,EAAI6B,MAHkB,gCAKxB7B,GALwB,2CAAH,wDAgBjBirB,EAAoB,uCAAG,WAAOpsB,EAASY,GAAhB,iBAAAP,EAAA,sEAChByf,EAAU,GAAD,OACtBkM,IADsB,+BACcprB,IAFP,YAC5BO,EAD4B,UAIvBA,EAAIoF,QAJmB,uBAK5B1C,EAAS1C,EAAI6B,MACVoC,MAAQxB,YAAGC,EAAOuB,OACzBvB,EAAOgC,YAAcjC,YAAGC,EAAOgC,aAC/BhC,EAAOqC,cAAgBtC,YAAGC,EAAOqC,eARD,kBASzBrC,GATyB,gCAW3B1C,GAX2B,4CAAH,wDA8CpB4kB,EAAiB,uCAAG,WAC/B/lB,EACAY,EACAD,GAH+B,eAAAN,EAAA,sEAKbyf,EAAU,GAAD,OACtBkM,IADsB,2BACUhsB,EADV,YACqBY,EADrB,YACoCD,IANhC,YAKzBQ,EALyB,UAQpBA,EAAIoF,QARgB,yCAStBpF,EAAI6B,MATkB,gCAWxB7B,GAXwB,2CAAH,0DA6JjBonB,EAAgB,uCAAG,WAC9BvoB,EACAY,EACAD,GAH8B,6CAAAN,EAAA,sEAMZyf,EAAU,GAAD,OACtBkM,IADsB,0BACShsB,EADT,YACoBY,EADpB,YACmCD,IAPhC,WAMxBQ,EANwB,SASnBA,EAAIoF,UACbgb,EAAiB1f,SAASV,EAAI6B,KAAKwe,mBACnC6K,EAAqBxqB,SAASV,EAAI6B,KAAKspB,uBACvChL,EAAengB,EAAI6B,KAAKse,cAE1BA,EAAeA,EAAa1a,QAAO,SAAClF,GAAD,OAAOA,KAAGmb,KAAI,SAACnb,GAChD,MAAO,CACL4e,UAAW5e,EAAE4e,UAAUqB,OACvBiK,UAAWlqB,EAAEkqB,UAAUjK,OACvBvc,MAAOrB,YAAcrC,EAAE0D,OAAOhE,WAC9Bsf,SAAU3c,YAAcrC,EAAEgf,UAAUtf,WACpCgG,OAAQrD,YAAcrC,EAAE0F,QAAQhG,WAChCof,eAAgBzc,YAAcrC,EAAE8e,gBAAgBpf,WAChDuf,gBAAiBjf,EAAEif,gBACnBJ,KAAM7e,EAAE6e,KAAKnf,eAGM,IAAnBmgB,GAA+C,IAAvB8K,EA1BE,iCA4B+B/oB,QAAQwE,IAAI,CACrE8Y,EACE5gB,EACAY,EACAD,EACA4gB,EAAiB,GAEnBwK,EACE/rB,EACAY,EACAD,EACA0rB,EAAqB,KAvCG,0CA4BrBzK,EA5BqB,KA4BD2K,EA5BC,KA0CtB1oB,EAAS+d,EACZC,OAAO0K,GACP1K,OAAOP,GA5CkB,kBA6CrBzd,EAAO6M,MAAK,SAACrQ,EAAGsQ,GAAJ,OAAU9O,SAAS8O,EAAE4P,MAAQ1e,SAASxB,EAAEkgB,UA7C/B,iBA+CHxK,YAAuB/V,EAASY,GAAjD8S,EA/CoB,EA+CpBA,aACR6N,EAAiB1f,SAAS6R,GAC1B2Y,EAAqBxqB,SAAS6R,GAjDF,UAkD+BpQ,QAAQwE,IAAI,CACrE8Y,EACE5gB,EACAY,EACAD,EACA4gB,EAAiB,GAEnBwK,EACE/rB,EACAY,EACAD,EACA0rB,EAAqB,KA7DG,2CAkDrBzK,EAlDqB,KAkDD2K,EAlDC,KAgEtB1oB,EAAS+d,EAAmBC,OAAO0K,GAhEb,kBAiErB1oB,EAAO6M,MAAK,SAACrQ,EAAGsQ,GAAJ,OAAU9O,SAAS8O,EAAE4P,MAAQ1e,SAASxB,EAAEkgB,UAjE/B,4CAAH,2D,+hBCjQvBiM,EAAc,SAACC,EAAIC,GACvB,OAAO,IAAIppB,SAAQ,SAACrB,GAClBwqB,EAAGvJ,GAAGwJ,GAAO,SAAS1pB,GACpBf,EAAQ0qB,KAAKC,MAAM5pB,WAInB6pB,EAAwB,uCAAG,WAAMC,GAAN,iBAAAzsB,EAAA,6DACzBosB,EAAKM,IAAWC,SAASjY,8BAAoBtK,UAAQC,QAD5B,SAEzB+hB,EAAGQ,KAAKH,GAFiB,uBAGbN,EAAYC,EAAI,oBAHH,cAGzBtrB,EAHyB,yBAKxBA,GALwB,2CAAH,sDAQjBgnB,EAAgB,uCAAG,WAC9BnoB,EACAY,EACAD,EACAyhB,GAJ8B,+BAAA/hB,EAAA,6DAK9BgG,EAL8B,+BAKrB,IALqB,SAOZ8b,YAAgBniB,EAASY,EAAaD,EAAgByhB,EAAW/b,GAPrD,YAOxBlF,EAPwB,QAQtBoF,QARsB,iCASTsmB,EAAyB,qBAAD,OAAsB7sB,EAAtB,YAAiCY,EAAjC,YAAgDD,EAAhD,MATf,cAStBusB,EATsB,oDAUjBA,GAAS/rB,IAVQ,iCAYrBA,GAZqB,4CAAH,4DAgBhBknB,EAAc,uCAAG,WAC5BroB,EACAY,EACAD,EACAyhB,GAJ4B,+BAAA/hB,EAAA,6DAK5BgG,EAL4B,+BAKnB,IALmB,SAOVkc,YAAcviB,EAASY,EAAaD,EAAgByhB,EAAW/b,GAPrD,YAOtBlF,EAPsB,QAQpBoF,QARoB,iCASPsmB,EAAyB,kBAAD,OAAmB7sB,EAAnB,YAA8BY,EAA9B,YAA6CD,EAA7C,MATjB,cASpBusB,EAToB,oDAUfA,GAAS/rB,IAVM,iCAYnBA,GAZmB,4CAAH,4DAgBd4mB,EAAc,uCAAG,WAC5B/nB,EACAY,EACAD,GAH4B,+BAAAN,EAAA,6DAI5BgG,EAJ4B,+BAInB,IAJmB,SAMV0b,YAAc/hB,EAASY,EAAaD,EAAgB0F,GAN1C,YAMtBlF,EANsB,QAOpBoF,QAPoB,iCAQPsmB,EAAyB,kBAAD,OAAmB7sB,EAAnB,YAA8BY,EAA9B,YAA6CD,EAA7C,MARjB,cAQpBusB,EARoB,oDASfA,GAAS/rB,IATM,iCAWnBA,GAXmB,4CAAH,0DAed8mB,EAAe,uCAAG,WAC7BjoB,EACAY,EACAD,GAH6B,+BAAAN,EAAA,6DAI7BgG,EAJ6B,+BAIpB,IAJoB,SAMX4b,YAAejiB,EAASY,EAAaD,EAAgB0F,GAN1C,YAMvBlF,EANuB,QAOrBoF,QAPqB,iCAQRsmB,EAAyB,mBAAD,OAAoB7sB,EAApB,YAA+BY,EAA/B,YAA8CD,EAA9C,MARhB,cAQrBusB,EARqB,oDAShBA,GAAS/rB,IATO,iCAWpBA,GAXoB,4CAAH,0DAefklB,EAAa,uCAAG,WAC3BrmB,EACAY,EACAD,GAH2B,+BAAAN,EAAA,6DAI3BgG,EAJ2B,+BAIlB,IAJkB,SAMTiV,YAAatb,EAASY,EAAaD,EAAgB0F,GAN1C,YAMrBlF,EANqB,QAOnBoF,QAPmB,iCAQNsmB,EAAyB,iBAAD,OAAkB7sB,EAAlB,YAA6BY,EAA7B,YAA4CD,EAA5C,MARlB,cAQnBusB,EARmB,oDASdA,GAAS/rB,IATK,iCAWlBA,GAXkB,4CAAH,0DAebolB,EAAgB,uCAAG,WAC9BvmB,EACAY,EACAD,GAH8B,+BAAAN,EAAA,6DAI9Bua,EAJ8B,+BAIrB,IAJqB,SAMZgB,YAAgB5b,EAASY,EAAaD,EAAgBia,GAN1C,YAMxBzZ,EANwB,QAOtBoF,QAPsB,iCAQTsmB,EAAyB,oBAAD,OAAqB7sB,EAArB,YAAgCY,EAAhC,YAA+CD,EAA/C,MARf,cAQtBusB,EARsB,oDASjBA,GAAS/rB,IATQ,iCAWrBA,GAXqB,4CAAH,0DAehBgsB,EAAgB,uCAAG,WAC9BntB,EACAY,EACAD,GAH8B,+BAAAN,EAAA,6DAI9BgG,EAJ8B,+BAIrB,IAJqB,SAMZyd,YAAgB9jB,EAASY,EAAaD,EAAgB0F,GAN1C,YAMxBlF,EANwB,QAOtBoF,QAPsB,iCAQTsmB,EAAyB,qBAAD,OAAsB7sB,EAAtB,YAAiCY,EAAjC,YAAgDD,EAAhD,MARf,cAQtBusB,EARsB,oDASjBA,GAAS/rB,IATQ,iCAWrBA,GAXqB,4CAAH,0DAehBisB,EAAmB,uCAAG,WACjCptB,EACAY,EACAD,GAHiC,+BAAAN,EAAA,6DAIjCua,EAJiC,+BAIxB,IAJwB,SAMfsJ,YAAmBlkB,EAASY,EAAaD,EAAgBia,GAN1C,YAM3BzZ,EAN2B,QAOzBoF,QAPyB,iCAQZsmB,EAAyB,wBAAD,OAAyB7sB,EAAzB,YAAoCY,EAApC,YAAmDD,EAAnD,MARZ,cAQzBusB,EARyB,oDASpBA,GAAS/rB,IATW,iCAWxBA,GAXwB,4CAAH,0DAcnBksB,EAAgB,uCAAG,WAC9BrtB,EACAY,EACAD,GAH8B,+BAAAN,EAAA,6DAI9BgG,EAJ8B,+BAIrB,IAJqB,SAMZ0d,YAAgB/jB,EAASY,EAAaD,EAAgB0F,GAN1C,YAMxBlF,EANwB,QAOtBoF,QAPsB,iCAQTsmB,EAAyB,qBAAD,OAAsB7sB,EAAtB,YAAiCY,EAAjC,YAAgDD,EAAhD,MARf,cAQtBusB,EARsB,oDASjBA,GAAS/rB,IATQ,iCAWrBA,GAXqB,4CAAH,0DAehBmsB,EAAmB,uCAAG,WACjCttB,EACAY,EACAD,GAHiC,+BAAAN,EAAA,6DAIjCua,EAJiC,+BAIxB,IAJwB,SAMfuJ,YAAmBnkB,EAASY,EAAaD,EAAgBia,GAN1C,YAM3BzZ,EAN2B,QAOzBoF,QAPyB,iCAQZsmB,EAAyB,wBAAD,OAAyB7sB,EAAzB,YAAoCY,EAApC,YAAmDD,EAAnD,MARZ,cAQzBusB,EARyB,oDASpBA,GAAS/rB,IATW,iCAWxBA,GAXwB,4CAAH,0DAenBosB,EAAiB,uCAAG,WAC/BvtB,EACAY,EACAD,GAH+B,+BAAAN,EAAA,6DAI/BgG,EAJ+B,+BAItB,IAJsB,SAMb2d,YAAiBhkB,EAASY,EAAaD,EAAgB0F,GAN1C,YAMzBlF,EANyB,QAOvBoF,QAPuB,iCAQVsmB,EAAyB,qBAAD,OAAsB7sB,EAAtB,YAAiCY,EAAjC,YAAgDD,EAAhD,MARd,cAQvBusB,EARuB,oDASlBA,GAAS/rB,IATS,iCAWtBA,GAXsB,4CAAH,0DAejBqsB,EAAoB,uCAAG,WAClCxtB,EACAY,EACAD,GAHkC,+BAAAN,EAAA,6DAIlCua,EAJkC,+BAIzB,IAJyB,SAMhBwJ,YAAoBpkB,EAASY,EAAaD,EAAgBia,GAN1C,YAM5BzZ,EAN4B,QAO1BoF,QAP0B,iCAQbsmB,EAAyB,wBAAD,OAAyB7sB,EAAzB,YAAoCY,EAApC,YAAmDD,EAAnD,MARX,cAQ1BusB,EAR0B,oDASrBA,GAAS/rB,IATY,iCAWzBA,GAXyB,4CAAH,2D,+OCjMpBkb,EAAoB,WAC/B,IAAIC,EAAc,GAClB,MAAO,CACL5R,IADK,SACD1K,EAASC,GACX,IAAM0K,EAAG,UAAM3K,EAAN,YAAiBC,GAC1B,GAAI2K,OAAOC,KAAKyR,GAAajb,SAASsJ,GACpC,OAAO2R,EAAY3R,GAErBrJ,QAAQC,IAAR,2CAAgDoJ,KAGlDuR,IATK,SASDlc,EAASC,EAAiBsc,GAC5B,IAAM5R,EAAG,UAAM3K,EAAN,YAAiBC,GAC1Bqc,EAAY3R,GAAO4R,IAbQ,GA0CpBT,GAxBuB,WAClC,IAAI2R,EAAkB,GADY,GAwBT,WACzB,IAAIC,EAAS,GACTC,EAAY,KAChB,MAAO,CACLjjB,IADK,WAKH,MAHe,KAAXgjB,GACFpsB,QAAQC,IAAI,6BAEPmsB,GAEHE,QAPD,SAOS5tB,EAASY,GAAc,OAAD,mIAEd4E,YAAexF,EAASY,GAFV,OAGpB,MADNO,EAF0B,UAI9BusB,EAASvsB,GAJqB,gDAOhCG,QAAQC,IAAR,oCAPgC,4DAUpCssB,OAjBK,SAiBE7tB,EAASY,GACd,IAAMmB,EAAO3B,KACbutB,EAAYG,aAAY,WAEtB/rB,EAAK6rB,QAAQ5tB,EAASY,KACrB,MAELmtB,MAxBK,WAyBCJ,GACFK,cAAcL,GAEhBD,EAAS,KA/BY,IA2CdO,EAAgC,WAC3C,IAAIC,EAAc,GAClB,MAAO,CACLxjB,IADK,WAKH,OAHKwjB,EAAY9pB,YACf9C,QAAQC,IAAI,iDAEP2sB,GAEHL,OAPD,SAOQ7tB,EAASY,GAAc,OAAD,mHAC3B0K,EAAgBF,YAAqBpL,EAASY,GADnB,SAEf0K,EAAc5F,gBAFC,cAE3BvE,EAF2B,QAGzBiD,aACN8pB,EAAc/sB,GAJiB,kBAM1BA,GAN0B,+CATM,GAqBhC4rB,EAAc,WACzB,IAAIoB,EAAM,KACV,MAAO,CACLzjB,IADK,WAEH,GAAIyjB,EACF,OAAOA,EAEP7sB,QAAQC,IAAI,oDAGhB2a,IARK,SAQDlM,GACF,IACE,IAAMyc,EAAK2B,aAAGpe,EAAK,CACjBqe,WAAY,CAAC,aACblC,KAAM,QAERM,EAAGvJ,GAAG,WAAW,WACf5hB,QAAQC,IAAI,iBAAkBkrB,EAAG6B,OAE/B7B,EACF0B,EAAM1B,EAENnrB,QAAQC,IAAI,mDAEd,MAAO0Z,GACP3Z,QAAQC,IAAI,oBAAqB0Z,KAGrC+R,SA1BK,SA0BIhd,GAIP,OAHKme,GACH/tB,KAAK8b,IAAIlM,GAEJme,IAhCc,I,qHClHrBI,G,iBAGJ,aAAc,yBAFdjJ,QAAU,KAGRkJ,YAAmBpuB,KAAK,CACtBklB,QAAUH,IACVsJ,WAAapJ,IACbqJ,KAAOC,IACPnJ,KAAOmJ,M,8CAKX,SAAW9a,GACTzT,KAAKklB,QAAUzR,I,oBAGjB,WACsB,OAAjBzT,KAAKklB,QACNllB,KAAKquB,WAAW,MAEhBruB,KAAKquB,WAAW,Q,gBAIpB,WACE,MAAwB,OAAjBruB,KAAKklB,U,gBAGd,WACE,MAAwB,OAAjBllB,KAAKklB,Y,MAGD,QAAIiJ,G,oDClCnB,6jBAIO,SAAS3qB,EAAGb,GAAkB,IAAXiL,EAAU,uDAAH,EAC/B,OAAY,GAARA,EACKN,IAAU3K,GACRiL,EAAO,EACTN,IAAU3K,GAAOuE,MAAMoG,IAAU,IAAM,IAAIO,OAAOD,KAElDN,IAAU3K,GAAOmL,IAAIR,IAAU,IAAM,IAAIO,QAAQD,KAQrD,SAAS4gB,EAAc/mB,GAC5B,OAAOA,GAAO,UAAOA,EAAQgnB,OAAO,EAAE,GAAxB,cAAgChnB,EAAQgnB,QAAQ,IAGzD,SAASC,EAAcxQ,GAC5B,OAAOA,KAAaA,GAAS5P,QAAQ,GAGhC,SAASqgB,EAAWC,EAAKC,GAC9B,OAASD,KAAYC,EAGhB,SAASC,EAAKrnB,GACnB,MAAmB,+CAAZA,GAAwE,+CAAZA,EAE9D,SAASsnB,EAAUtnB,GACxB,MAAmB,+CAAZA,EAEF,SAASunB,EAASvnB,GACvB,MAAmB,+CAAZA,EAGF,SAASwnB,EAAkBxb,GAChC,MAAM,GAAN,OAAUA,EAAV,yBAYK,SAASyb,EAAYzb,EAAQlG,GAClC,GAAGA,EAAO,CACR,IAAMhD,EAAM0kB,EAAkBxb,GAC9B0b,eAAeC,QAAQ7kB,EAAIgiB,KAAK8C,UAAU9hB,KAIvC,SAAS+hB,EAAmB7b,GACjC,OAAO8Y,KAAKC,MAAM2C,eAAeI,QAAQN,EAAkBxb,KAGtD,SAAS+b,EAAWC,GACzBN,eAAeC,QAAQ,gBAAgB7C,KAAK8C,UAAUI,IAMjD,SAASC,EAAYC,GAC1BR,eAAeC,QAAQ,iBAAiBO,GAGnC,SAASC,IACd,OAAOT,eAAeI,QAAQ,kBAGzB,SAASM,EAASC,EAAMntB,GAAwC,IAAlCotB,EAAiC,uDAArBjtB,OAAOigB,SAASiN,KACzDpgB,EAAM,IAAIqgB,IAAIF,GAMpB,OALGngB,EAAIsgB,aAAaC,IAAIL,GACtBlgB,EAAIsgB,aAAapU,IAAIgU,EAAMntB,GAE3BiN,EAAIsgB,aAAaE,OAAON,EAAMntB,GAExBiN,EAAI5O,WAGP,SAASqvB,EAASP,GAAwC,IAAlCC,EAAiC,uDAArBjtB,OAAOigB,SAASiN,KACnDpgB,EAAM,IAAIqgB,IAAIF,GACpB,OAAOngB,EAAIsgB,aAAaC,IAAIL,GAGvB,SAASQ,EAASR,GAAwC,IAAlCC,EAAiC,uDAArBjtB,OAAOigB,SAASiN,KACnDpgB,EAAM,IAAIqgB,IAAIF,GACpB,OAAOngB,EAAIsgB,aAAa5lB,IAAIwlB,GAGvB,SAASS,EAAgBrjB,GAC9B,IAAMsjB,EAhCCjE,KAAKC,MAAM2C,eAAeI,QAAQ,mBAAqB,CAACkB,KAAO,IAiCtE,MAA2B,OAApBhd,IAAQyR,QAAR,UAA8BhY,EAA9B,eAA2CsjB,EAAWA,EAASC,KAAKC,cAAgB,OAAUxjB,I,wfCwB1FyP,EAAe,uCAAG,WAAO/c,EAASY,EAAaD,GAA7B,uCAAAN,EAAA,6DACzB+E,EAAQ,GADiB,kBAGbI,YAAexF,EAASY,GAHX,OAG3BwE,EAH2B,uDAK3B9D,QAAQC,IAAR,MAL2B,iBAOHwU,YAAuB/V,EAASY,GAAlDsV,EAPqB,EAOrBA,cACFoT,EAAQle,YAAqBpL,EAASY,GAEtCgL,EAASF,YAAc1L,EAASkW,EAAetV,GAVxB,UAgBnB0oB,EAAM5jB,gBAhBa,wBAa3BtB,EAb2B,EAa3BA,WACAG,EAd2B,EAc3BA,sBACAC,EAf2B,EAe3BA,0BAf2B,UAkBUoH,EAAOmR,gBAAgBpc,GAlBjC,oBAkBrByG,EAlBqB,EAkBrBA,OAAQgB,EAlBa,EAkBbA,OAAQF,EAlBK,EAkBLA,KACV,KAAV9C,EAnByB,0CAoBpB,CACLA,QACAgC,OAAQA,EAAOhG,WACf8c,kBAAmBxG,YACjBtQ,EACAc,EACA9D,GACAhD,WACFgH,OAAQA,EAAOhH,WACf8W,WAAY,GACZ6F,cAAe,GACfI,iBAAkBvG,YAChBxQ,EACAgB,EACAF,EACA9D,EACAI,GACApD,aArCuB,iCAwCpB,CACLgE,QACAgC,OAAQA,EAAOhG,WACf8c,kBAAmBxG,YACjBtQ,EACAc,EACA9D,GACAhD,WACFgH,OAAQA,EAAOhH,WACf8W,WAAY8Q,YACV5jB,EACAgC,EACAhD,EACAG,GACAnD,WACF2c,cAAekL,YAAa7jB,EAAOgC,EAAQhD,EAAY8D,GAAM9G,WAC7D+c,iBAAkBvG,YAChBxQ,EACAgB,EACAF,EACA9D,EACAI,GACApD,aA9DuB,yDAAH,0DAyIfgd,EAAgB,uCAAG,WAC9Bpe,EACAY,EACAD,GAH8B,qBAAAN,EAAA,+DAKJ0V,YAAuB/V,EAASY,GAAlDqV,EALsB,EAKtBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GANvB,SAQR6K,EAAO6S,QAAQ3d,GARP,cAQxB2d,EARwB,yBASvBA,EAAQld,YATe,2CAAH,0DAqBhBmd,EAAU,uCAAG,WAAOve,EAASY,EAAaD,EAAgBR,GAA7C,mBAAAE,EAAA,+DACE0V,YAAuB/V,EAASY,GAAlDqV,EADgB,EAChBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,EAAaT,GAF1C,SAIXsL,EAAO8S,WAAW5d,GAJP,mFAAH,4DAkBV+d,EAAkB,uCAAG,WAChC1e,EACAY,EACAD,EACAyG,EACAuX,GALgC,qBAAAte,EAAA,sEAOZmF,YAAexF,EAASY,GAPZ,cAO1BwE,EAP0B,OAQ1BkkB,EAAQle,YAAqBpL,EAASY,GARZ,SAUH0oB,EAAM5jB,gBAVH,uBAUxBtB,EAVwB,EAUxBA,WAVwB,kBAWzBR,YAAGwD,GACPC,MACAC,MAAMlC,GACNkC,MAAMlD,GACN8J,IAAItK,YAAG+a,IACPvd,YAhB6B,2CAAH,8DA4BlBod,EAAe,uCAAG,WAAOxe,EAASY,EAAawG,GAA7B,uBAAA/G,EAAA,yDAEzB+E,EAAQ0W,IAAWpR,MACnBqmB,EAAa9C,IAA6BvjB,MAChC,KAAVtF,EAJyB,gCAKrB0W,IAAW+R,OAAO7tB,EAASY,GALN,OAM3BwE,EAAQ0W,IAAWpR,MANQ,UAUxBqmB,EAAW3sB,WAVa,iCAWR6pB,IAA6BJ,OAC9C7tB,EACAY,GAbyB,OAW3BmwB,EAX2B,sBAiBrB3sB,GAjBqB,EAiBI2sB,GAAzB3sB,WAAYC,EAjBS,EAiBTA,SAjBS,kBAkBtBT,YAAGwD,GACPC,MACAC,MAAMlC,GACNkC,MAAMlD,GACNkD,MAAMjD,GACNjD,YAvB0B,4CAAH,0DA+Ef8d,EAAuB,uCAAG,WACrClf,EACAY,EACAue,GAHqC,qBAAA9e,EAAA,yDAOrCc,EAAMkb,IAAiB3R,IAAI1K,EAASY,GAPC,uBAS7B0K,EAAgBF,YAAqBpL,EAASY,GATjB,SAUvB0K,EAAc0T,iBAVS,OAUnC7d,EAVmC,kBAYjCA,EAZiC,oBAa7B4vB,EAAa,CACjBntB,YAAGzC,EAAI+C,kBAAkB8T,KAAKpU,YAAGub,IAAe/d,WAChDD,EAAIiE,MACJjE,EAAIiD,WACJjD,EAAI8C,UACJ9C,EAAIwD,yBAEFiB,IAAmB,WAAnB,EAAuBmrB,GApBQ,0CAqB1B,CACL3R,aAAc,MAtBiB,eA0BnCA,EAAerZ,IAAoB,WAApB,EAAwBgrB,GACvC3R,EAAepZ,YAAmBhG,EAASof,GA3BR,kBA4B5B,CACLA,aAAc9J,YAAsB8J,KA7BH,4CAAH,0DAoEvBG,EAAyB,uCAAG,WACvCvf,EACAY,EACAue,GAHuC,qBAAA9e,EAAA,yDAMvCc,EAAMkb,IAAiB3R,IAAI1K,EAASY,GANG,uBAQ/B0K,EAAgBF,YAAqBpL,EAASY,GARf,SASzB0K,EACT0T,iBACAhE,OAAM,SAACC,GAAD,OAAS3Z,QAAQC,IAAI,mBAAoB0Z,MAXb,OASrC9Z,EATqC,kBAanCA,EAbmC,oBAc/B4vB,EAAa,CACjBntB,YAAGzC,EAAI+C,kBAAkB8T,KAAKpU,YAAGub,IAAe/d,WAChDD,EAAIiE,MACJjE,EAAIiD,WACJjD,EAAI8C,UACJ9C,EAAIiF,kBAEFR,IAAmB,WAAnB,EAAuBmrB,GArBU,0CAsB5B,CACLvR,eAAgB,MAvBiB,eA0B/BA,EAAiBrZ,IAAsB,WAAtB,EAA0B4qB,GA1BZ,kBA2B9B,CACLvR,eAAgBlK,YAAsBkK,KA5BH,4CAAH,0DAwCzBwR,EAAwB,uCAAG,WAAOrwB,GAAP,eAAAN,EAAA,6DAChC8pB,EAAmBpf,aAAwB,GADX,SAEzBof,EAAiBC,UAAUzpB,GAFF,mFAAH,sDAaxBomB,EAAc,uCAAG,WAAO/mB,EAASW,GAAhB,qBAAAN,EAAA,+DACa0J,YAAuB/J,GAAxDiK,EADoB,EACpBA,gBAAiB2M,EADG,EACHA,YACnB9J,EAAOF,YAAY5M,EAAS4W,EAAa3M,GAFnB,SAIf6C,EAAKyR,WAAW5d,GAJD,mFAAH,wDAedswB,EAAc,uCAAG,WAAOjxB,EAASW,GAAhB,qBAAAN,EAAA,+DACa0J,YAAuB/J,GAAxD4W,EADoB,EACpBA,YAAa3M,EADO,EACPA,gBACf6C,EAAOF,YAAY5M,EAAS4W,EAAa3M,GAFnB,SAGd6C,EAAKwR,QAAQ3d,GAHC,uCAGgBS,YAHhB,2CAAH,yD,yeC9hBrBtB,EAAiB,OAEVoxB,EAAb,WACE,WAAYlxB,EAASC,EAAiBC,GAAc,oBAClDE,KAAKJ,QAAUA,EACfI,KAAKH,gBAAkBA,EACvBG,KAAKF,YAAcA,EAJvB,gFAOE,sBAAAG,EAAA,yDAEOD,KAAKE,KAFZ,oBAGQqO,eAAgBE,cAHxB,gBAIMzO,KAAKE,KAAOE,cAJlB,sCAMwBD,IAAYmK,IAAItK,KAAKJ,SAN7C,OAMMI,KAAKE,KANX,cAQIF,KAAKK,SAAW,IAAIL,KAAKE,KAAKI,IAAIX,SAChCK,KAAKF,YACLE,KAAKH,iBAVX,gDAPF,gHAsBE,WAAYY,GAAZ,iCAAAR,EAAA,sDAAoBS,EAApB,+BAA2B,GAErBC,EAAQ,EAFd,YAGSA,EAAQ,GAHjB,0CAKYX,KAAKY,QALjB,wBAMkB,EAAAZ,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMI,OANzD,cAMMC,EANN,8DASMJ,GAAS,EAETX,KAAKE,KAAO,KACR,KAAIc,WAAWC,SAAS,6BAC1BC,QAAQC,IAAR,iDAAsDnB,KAAKJ,QAA3D,MACS,KAAIoB,WAAWC,SAAS,kCACjCC,QAAQC,IAAR,mCAAwCnB,KAAKH,gBAA7C,yBAA6EG,KAAKJ,QAAlF,MAfR,kCAmBgB,IAAVe,GAAgBI,EAnBtB,uBAoBU,IAAIK,MAAJ,uBAA0BpB,KAAKH,gBAA/B,cAAoDY,EAApD,YAA8DC,EAA9D,gCApBV,iCAsBSK,GAtBT,0DAtBF,yHA+CE,WAAoBN,GAApB,mCAAAR,EAAA,6DAA4BS,EAA5B,+BAAmC,GAAIH,EAAvC,gCACQP,KAAKY,QADb,OAEMS,EAAM,EACDC,EAAI,EAHf,YAGkBA,EAAI,GAHtB,4CAKkB,EAAAtB,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMa,YAAY,CAC7DC,KAAMjB,IANd,eAKMc,EALN,OAQMA,EAAMI,SAAe,KAANJ,GARrB,+DAGyBC,IAHzB,8BAca,GAAPD,GAAYA,EAAM,OAAUA,EAAM3B,GAdxC,kBAeS2B,GAfT,0DA/CF,2FAiEE,SAAuBK,GACrB,IAAMC,EAAO3B,KACb,OAAO,SAAS4B,EAAoBC,EAASC,GAC3CH,EAAKzB,KAAKI,IAAIyB,sBAAsBL,GAAI,SAACM,EAAOC,GAC1CD,EACFF,EAAOE,GACc,OAAZC,EACTC,YAAW,kBAAMN,EAAoBC,EAASC,KAAS,MAC3B,IAAnBG,EAAQE,QACjBF,EAAQG,aAAe,qBACvBN,EAAOG,IAEPJ,EAAQI,SA7ElB,8DAkFE,WAAgBxB,EAAQC,EAAMH,GAA9B,qBAAAN,EAAA,sEACQD,KAAKY,QADb,uBAEoBZ,KAAKqC,cAAc5B,EAAQC,EAAMH,GAFrD,cAEQc,EAFR,OAGMiB,EAAQ,CACV,CACEd,KAAMjB,EACNgC,GAAIvC,KAAKH,gBACTwB,IAAKqB,YAAYrB,GACjBsB,MAAOD,YAAY,KACnBE,MAAM,EAAA5C,KAAKK,SAASQ,SAAQJ,GAAtB,oBAAiCC,IAAMmC,cATnD,SAYiBC,OAAOC,SAASC,QAAQ,CACrCvC,OAAQ,sBACRwC,OAAQX,IAdZ,cAYMZ,EAZN,iBAgBe,IAAIwB,QAAQlD,KAAKmD,uBAAuBzB,IAhBvD,0FAlFF,kECJaqvB,EAAmB,CAAE,CAAE,OAAU,CAAE,CAAE,aAAgB,aAAc,KAAQ,aAAc,KAAQ,cAAgB,CAAE,aAAgB,aAAc,KAAQ,YAAa,KAAQ,eAAkB,gBAAmB,aAAc,KAAQ,eAAiB,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,YAAa,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,aAAc,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,YAAa,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,wBAAyB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,kBAAmB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,cAAe,KAAQ,UAAY,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,QAAS,KAAQ,SAAW,CAAE,OAAU,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,iBAAkB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,WAAY,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,YAAa,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,MAAO,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,gBAAiB,KAAQ,WAAc,aAAgB,mCAAoC,KAAQ,OAAQ,KAAQ,UAAa,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,aAAc,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,WAAY,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,yBAA0B,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,wBAAyB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,mBAAoB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,iBAAkB,KAAQ,WAAc,aAAgB,mCAAoC,KAAQ,OAAQ,KAAQ,UAAa,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,aAAc,KAAQ,YAAe,KAAQ,uBAAwB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,qBAAsB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,aAAc,KAAQ,YAAe,KAAQ,uBAAwB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,eAAgB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,uBAAwB,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,iBAAkB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,WAAY,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,YAAa,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,MAAO,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,gBAAiB,KAAQ,WAAc,aAAgB,mCAAoC,KAAQ,GAAI,KAAQ,UAAa,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,kBAAmB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,aAAc,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,gBAAiB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,kBAAmB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,qBAAsB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,wBAAyB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,4BAA6B,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,uBAAwB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,uBAAwB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,sBAAuB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,0BAA2B,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,wBAAyB,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,aAAc,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,WAAY,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,yBAA0B,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,wBAAyB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,mBAAoB,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,iBAAkB,KAAQ,WAAc,aAAgB,mCAAoC,KAAQ,GAAI,KAAQ,UAAa,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,kBAAmB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,aAAc,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,kBAAmB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,iBAAkB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,sBAAuB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,yBAA0B,KAAQ,YAAe,KAAQ,sBAAuB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,cAAe,KAAQ,UAAY,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,QAAS,QAAW,GAAI,gBAAmB,aAAc,KAAQ,aAC5zXC,EAAyB,CAAE,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,6BAA8B,KAAQ,YAAe,gBAAmB,aAAc,KAAQ,eAAiB,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,qBAAsB,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,mBAAoB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,qBAAsB,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,mBAAoB,KAAQ,SAAW,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,iBAAkB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,IAAK,KAAQ,SAAW,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,YAAe,aAAgB,0CAA2C,KAAQ,QAAS,KAAQ,YAAe,KAAQ,yBAA0B,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,IAAK,KAAQ,SAAW,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,YAAe,aAAgB,0CAA2C,KAAQ,QAAS,KAAQ,YAAe,KAAQ,sBAAuB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,aAAc,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,yBAA0B,KAAQ,YAAe,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,qBAAsB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,aAAc,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,YAAa,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,IAAK,KAAQ,SAAW,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,YAAe,aAAgB,0CAA2C,KAAQ,QAAS,KAAQ,YAAe,KAAQ,sBAAuB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,sBAAuB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,uBAAwB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,qBAAsB,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,OAAQ,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,SAAU,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,kBAAmB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,IAAK,KAAQ,SAAW,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,YAAe,aAAgB,0CAA2C,KAAQ,QAAS,KAAQ,YAAe,KAAQ,4BAA6B,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,IAAK,KAAQ,SAAW,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,YAAe,aAAgB,0CAA2C,KAAQ,QAAS,KAAQ,YAAe,KAAQ,yBAA0B,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,iBAAkB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,sBAAuB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,mBAAoB,KAAQ,YAAe,KAAQ,yBAA0B,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,YAAe,KAAQ,UAAW,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,yBAA0B,KAAQ,YAAe,KAAQ,sBAAuB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,cAAe,KAAQ,WAAc,KAAQ,QAAS,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,cAAe,KAAQ,UAAY,CAAE,WAAc,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,IAAK,KAAQ,SAAW,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,IAAK,KAAQ,YAAe,aAAgB,0CAA2C,KAAQ,QAAS,KAAQ,YAAe,KAAQ,kBAAmB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,aACrgVC,EAAY,CAAE,CAAE,OAAU,CAAE,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,UAAW,KAAQ,WAAc,gBAAmB,aAAc,KAAQ,eAAiB,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,WAAY,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,WAAY,KAAQ,SAAW,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,UAAW,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,WAAY,QAAW,CAAE,CAAE,aAAgB,QAAS,KAAQ,GAAI,KAAQ,UAAa,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,OAAQ,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,SAAU,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,WAAY,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,SAAU,KAAQ,YAAe,KAAQ,eAAgB,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,aAAc,KAAQ,aAC16FC,EAAY,CAAE,CAAE,OAAU,CAAE,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,UAAW,KAAQ,UAAY,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,YAAe,gBAAmB,aAAc,KAAQ,eAAiB,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,WAAY,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,OAAQ,KAAQ,WAAY,KAAQ,SAAY,KAAQ,iBAAkB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,WAAY,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,YAAa,KAAQ,UAAY,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,MAAO,KAAQ,UAAY,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,oBAAqB,KAAQ,WAAc,KAAQ,cAAe,KAAQ,SAAW,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,UAAW,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,OAAQ,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,SAAU,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,WAAY,QAAW,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,YAAa,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,MAAO,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,oBAAqB,KAAQ,WAAc,aAAgB,uBAAwB,KAAQ,GAAI,KAAQ,UAAa,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,YAAa,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,MAAO,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,oBAAqB,KAAQ,WAAc,aAAgB,yBAA0B,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,OAAQ,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,OAAQ,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,aAAc,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,UAAW,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,OAAQ,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,OAAQ,KAAQ,UAAa,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,OAAQ,KAAQ,WAAY,KAAQ,SAAY,KAAQ,oBAAqB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,MAAO,KAAQ,YAAe,KAAQ,gBAAiB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,UAAW,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,SAAU,KAAQ,cAAe,KAAQ,WAAc,KAAQ,oBAAqB,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,SAAU,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,YAAa,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,MAAO,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,oBAAqB,KAAQ,WAAc,aAAgB,uBAAwB,KAAQ,QAAS,KAAQ,UAAa,KAAQ,cAAe,QAAW,GAAI,gBAAmB,aAAc,KAAQ,aACpwPC,EAAY,CAAE,CAAE,OAAU,CAAE,CAAE,aAAgB,SAAU,KAAQ,QAAS,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,UAAW,KAAQ,UAAY,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,YAAe,gBAAmB,aAAc,KAAQ,eAAiB,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,WAAY,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,OAAQ,KAAQ,WAAY,KAAQ,SAAY,KAAQ,iBAAkB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,WAAY,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,SAAU,KAAQ,WAAc,KAAQ,eAAgB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAE,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,OAAQ,KAAQ,UAAY,CAAE,SAAW,EAAO,aAAgB,SAAU,KAAQ,4BAA6B,KAAQ,WAAc,KAAQ,iBAAkB,KAAQ,SAAW,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,UAAW,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,OAAQ,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,SAAU,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,YAAa,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,aAAc,QAAW,CAAE,CAAE,aAAgB,WAAY,KAAQ,GAAI,KAAQ,aAAgB,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,cAAe,QAAW,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,OAAQ,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,4BAA6B,KAAQ,WAAc,aAAgB,0BAA2B,KAAQ,GAAI,KAAQ,UAAa,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,eAAgB,QAAW,CAAE,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,OAAQ,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,4BAA6B,KAAQ,WAAc,aAAgB,4BAA6B,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,OAAQ,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,OAAQ,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,aAAc,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,aAAc,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,UAAW,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,OAAQ,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,aAAgB,QAAS,KAAQ,OAAQ,KAAQ,UAAa,KAAQ,mBAAoB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,OAAQ,KAAQ,WAAY,KAAQ,SAAY,KAAQ,oBAAqB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,MAAO,KAAQ,YAAe,KAAQ,gBAAiB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,MAAO,KAAQ,YAAe,KAAQ,gBAAiB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,UAAW,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,SAAU,KAAQ,cAAe,KAAQ,WAAc,KAAQ,oBAAqB,QAAW,CAAE,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,SAAU,QAAW,CAAE,CAAE,aAAgB,SAAU,KAAQ,GAAI,KAAQ,WAAc,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,cAAe,QAAW,CAAE,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,OAAQ,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,KAAM,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,UAAW,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,WAAc,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,WAAY,KAAQ,UAAW,KAAQ,aAAgB,KAAQ,gBAAiB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,CAAE,CAAE,aAAgB,UAAW,KAAQ,QAAS,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,WAAY,KAAQ,WAAa,CAAE,WAAc,CAAE,CAAE,aAAgB,SAAU,KAAQ,SAAU,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,OAAQ,KAAQ,UAAY,CAAE,aAAgB,SAAU,KAAQ,4BAA6B,KAAQ,WAAc,aAAgB,0BAA2B,KAAQ,WAAY,KAAQ,UAAa,KAAQ,iBAAkB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,aAElmTC,EAAe,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,OAAS,GAAG,KAAO,MAAM,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,aAC3lBC,EAAqB,CAAC,CAAC,KAAO,cAAc,gBAAkB,aAAa,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,aAAe,WAAW,CAAC,KAAO,UAAU,KAAO,oBAAoB,aAAe,aAAa,CAAC,KAAO,QAAQ,KAAO,gBAAgB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,aAAe,SAAS,SAAU,GAAM,CAAC,KAAO,UAAU,KAAO,UAAU,aAAe,UAAU,SAAU,GAAM,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,UAAU,SAAU,IAAQ,WAAY,GAAO,CAAC,KAAO,QAAQ,KAAO,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,aAAe,UAAU,SAAU,GAAM,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,UAAU,SAAU,GAAM,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,UAAU,SAAU,IAAQ,WAAY,GAAO,CAAC,KAAO,QAAQ,KAAO,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,aAAe,UAAU,SAAU,GAAM,CAAC,KAAO,UAAU,KAAO,KAAK,aAAe,UAAU,SAAU,IAAO,WAAY,GAAO,CAAC,KAAO,QAAQ,KAAO,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,aAAe,UAAU,SAAU,GAAM,CAAC,KAAO,UAAU,KAAO,KAAK,aAAe,UAAU,SAAU,IAAO,WAAY,GAAO,CAAC,KAAO,WAAW,gBAAkB,aAAa,QAAU,GAAG,KAAO,kBAAkB,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,uCAAuC,KAAO,mBAAmB,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,YAAY,KAAO,aAAa,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,aAAa,QAAU,GAAG,KAAO,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,aAAe,aAAa,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,QAAQ,KAAO,GAAG,aAAe,UAAU,KAAO,WAAW,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,GAAG,aAAe,WAAW,KAAO,cAAc,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,GAAG,aAAe,WAAW,KAAO,YAAY,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,aAAe,aAAa,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,aAAe,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,aAAe,UAAU,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,SAAS,KAAO,kBAAkB,aAAe,WAAW,KAAO,eAAe,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,aAAe,YAAY,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,YAAY,KAAO,eAAe,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,aAAe,aAAa,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,GAAG,aAAe,WAAW,KAAO,eAAe,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,YAAY,KAAO,cAAc,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,aAAe,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,aAAe,UAAU,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,SAAS,KAAO,kBAAkB,aAAe,WAAW,KAAO,kBAAkB,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,YAAY,KAAO,kBAAkB,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,oBAAoB,KAAO,QAAQ,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,qCAAqC,KAAO,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,GAAG,aAAe,YAAY,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,GAAG,aAAe,WAAW,KAAO,UAAU,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,aAAa,QAAU,GAAG,KAAO,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,aAAe,aAAa,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,qCAAqC,KAAO,qBAAqB,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,aAAe,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,aAAe,UAAU,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,SAAS,KAAO,kBAAkB,aAAe,WAAW,KAAO,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,aAAe,YAAY,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,aAAe,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,aAAe,UAAU,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,UAAU,KAAO,YAAY,aAAe,WAAW,CAAC,KAAO,SAAS,KAAO,kBAAkB,aAAe,WAAW,KAAO,0BAA0B,OAAS,IAAI,CAAC,KAAO,WAAW,gBAAkB,aAAa,QAAU,GAAG,KAAO,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,oBAAoB,aAAe,aAAa,CAAC,KAAO,WAAW,gBAAkB,aAAa,QAAU,GAAG,KAAO,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,MAAM,aAAe,aAAa,CAAC,KAAO,WAAW,gBAAkB,OAAO,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,GAAG,aAAe,YAAY,KAAO,UAAU,OAAS,KACh5LC,EAAmB,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,aAE3iBC,EAAmB,CAAC,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,YAAY,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,aACpkBC,EAAmB,CAAC,CAAE,OAAU,CAAC,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,gBAAiB,KAAQ,WAAa,CAAE,aAAgB,UAAW,KAAQ,oBAAqB,KAAQ,YAAe,gBAAmB,aAAc,KAAQ,eAAiB,CAAE,WAAa,EAAO,OAAU,CAAC,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,eAAgB,KAAQ,SAAW,CAAE,WAAa,EAAO,OAAU,CAAC,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,WAAa,CAAE,SAAW,EAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,YAAe,KAAQ,gBAAiB,KAAQ,SAAW,CAAE,OAAU,CAAC,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,YAAe,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,gBAAiB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,mBAAoB,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,iBAAkB,QAAW,CAAC,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,SAAY,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,eAAgB,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,eAAgB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,cAAe,QAAW,GAAI,gBAAmB,aAAc,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,oBAAqB,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,sBAAuB,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,YAAe,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,KAAQ,iBAAkB,QAAW,GAAI,gBAAmB,aAAc,KAAQ,aCThzEnuB,EAAb,kDACE,WAAYzD,EAASC,GAAkB,IAAD,8BACpC,cAAMD,EAASC,EAAiBkxB,IAE3BU,YAAa,EAClB,EAAKC,YAAa,EAElB,EAAK3b,cAAgB,GACrB,EAAKD,cAAgB,GACrB,EAAKqF,cAAgB,GACrB,EAAKwW,qBAAuB,GAE5B,EAAKC,mBAAqB,EAXU,EADxC,kFAeE,sBAAA3xB,EAAA,sEACQiD,QAAQwE,IAAI,CAChB1H,KAAK6xB,aACL7xB,KAAK8xB,eACL9xB,KAAKsF,kBAJT,gDAfF,qHAuBE,4BAAArF,EAAA,+EAEsBD,KAAKsD,MAAM,cAFjC,QAEUvC,EAFV,QAIY,IAAMA,EAAI,KAChBf,KAAKyxB,YAAahwB,SAASV,EAAI,IAC/Bf,KAAK0xB,YAAajwB,SAASV,EAAI,KANrC,sDASU,IAAIK,MAAJ,iDATV,yDAvBF,uHAmCE,4BAAAnB,EAAA,+EAEsBD,KAAKsD,MAAM,gBAFjC,OAEUvC,EAFV,OAGIf,KAAK+V,cAAgBhV,EAAIgV,cACzB/V,KAAK8V,cAAgB/U,EAAI+U,cACzB9V,KAAKmb,cAAgBpa,EAAIoa,cACzBnb,KAAK2xB,qBAAuB5wB,EAAI4wB,qBANpC,wDAQU,IAAIvwB,MAAJ,kDARV,0DAnCF,wHA8CE,4BAAAnB,EAAA,sEACoBD,KAAKsD,MAAM,iBAD/B,cACQvC,EADR,yBAES,CACLgxB,UAAWhxB,EAAIgxB,UACfzW,gBAAiB3X,YAAc5C,EAAIua,iBACnCpX,mBAAoBP,YAAc5C,EAAImD,oBACtCC,sBAAuBR,YAAc5C,EAAIoD,uBACzCC,0BAA2BT,YAAc5C,EAAIqD,2BAC7CI,qBAAsBb,YAAc5C,EAAIyD,sBACxCC,qBAAsBd,YAAc5C,EAAI0D,sBACxCC,oBAAqBf,YAAc5C,EAAI2D,qBACvC6X,wBAAyB5Y,YAAc5C,EAAIwb,2BAX/C,gDA9CF,gIA4DE,4BAAAtc,EAAA,sEACqBD,KAAKsD,MAAM,yBADhC,OACQvC,EADR,OAEEf,KAAK4xB,mBAAqBjuB,YAAc5C,GAF1C,gDA5DF,oHAgEE,WAAgB6X,GAAhB,eAAA3Y,EAAA,+EAGsBD,KAAKsD,MAAM,YAAa,CAACsV,IAH/C,cAGU7X,EAHV,yBAIW,CACL8U,cAAe9U,EAAI8U,cACnBmc,eAAgBjxB,EAAI8U,cACpBoc,cAAelxB,EAAIkxB,cACnBrqB,SAAU7G,EAAI6G,SACd6Q,SAAU9U,YAAc5C,EAAI0X,UAC5BzT,MAAOrB,YAAc5C,EAAIiE,OACzBnB,UAAWF,YAAc5C,EAAI8C,WAC7B6U,IAAK/U,YAAc5C,EAAI2X,KACvB6B,cAAe5W,YAAc5C,EAAIwZ,iBAbvC,sCAgBU,IAAInZ,MAAJ,gDAhBV,yDAhEF,2HAmFE,WAAsBwX,GAAtB,SAAA3Y,EAAA,sEAEeD,KAAKsD,MAAM,kBAAmB,CAACsV,IAF9C,wFAnFF,qHAuFE,WAAgBgD,GAAhB,eAAA3b,EAAA,+EAGuBD,KAAKsD,MAAM,YAAa,CAACsY,IAHhD,cAGU7a,EAHV,yBAIW,CACLmM,OAAQnM,EAAImM,OACZ+kB,cAAelxB,EAAIkxB,cACnBjuB,WAAYL,YAAc5C,EAAIiD,YAC9BC,SAAUN,YAAc5C,EAAIkD,UAC5BM,uBAAwBZ,YAAc5C,EAAIwD,wBAC1CS,MAAOrB,YAAc5C,EAAIiE,OACzBoT,sBAAuBzU,YAAc5C,EAAIqX,uBACzCtU,iBAAkBH,YAAc5C,EAAI+C,kBACpCC,eAAgBJ,YAAc5C,EAAIgD,kBAbxC,sCAgBU,IAAI3C,MAAJ,gDAhBV,yDAvFF,2HA0GE,WAAsBwa,GAAtB,SAAA3b,EAAA,sEAEeD,KAAKsD,MAAM,kBAAmB,CAACsY,IAF9C,wFA1GF,yHAgHE,WAAoBvV,GAApB,SAAApG,EAAA,sEACQD,KAAKY,QADb,uBAEeZ,KAAKE,KAAKI,IAAIgG,SAASD,GAFtC,wFAhHF,qIAsHE,4BAAApG,EAAA,sEACQD,KAAKY,QADb,uBAEoBZ,KAAKE,KAAKI,IAAI4xB,aAAalyB,KAAKH,gBAAiB,GAFrE,cAEQkB,EAFR,yBAISsN,YAAYtN,IAJrB,gDAtHF,+HA8HE,4BAAAd,EAAA,sEACQD,KAAKY,QADb,uBAEoBZ,KAAKE,KAAKI,IAAIqP,iBAFlC,cAEQ5O,EAFR,yBAISA,GAJT,gDA9HF,iFAqIE,SAAciG,EAAQhC,EAAOhB,EAAYC,GACvC,OAAOT,YAAGwD,GACPC,MACAC,MAAMlC,GACNkC,MAAMlD,GACNkD,MAAMjD,GACNjD,aA3IP,kEA6IE,WAAoBqF,GAApB,SAAApG,EAAA,sEACQD,KAAKY,QADb,uBAEeZ,KAAKE,KAAKI,IAAIgG,SAASD,GAFtC,wFA7IF,0HAkJE,WAAqBE,GAArB,2CAAAtG,EAAA,6DAAgCuG,EAAhC,+BAAyC,GAAIC,EAA7C,+BAAyD,EAAGlE,EAA5D,+BAAiE,EAAjE,SACQvC,KAAKY,QADb,OAEM8F,EAAS,GAIXT,EADE,CAAC,KAAM,KAAK,MAAO,SAAShF,SAASjB,KAAKJ,SACnC,IAEA,KAEN6G,EAAYR,EAAU1D,IACzB0D,EAAS1D,EAAKkE,GAXlB,YAaSA,GAAalE,GAbtB,kCAcmBvC,KAAKK,SAASsG,cAAcJ,EAAW,CACpDC,OAAQA,EACRC,UAAWA,EACXG,QAASH,EAAYR,IAjB3B,QAcQY,EAdR,qBAmBkBA,GAnBlB,IAmBI,2BAASC,EAAS,QAChBJ,EAAOK,KAAKD,GApBlB,+BAsBIL,GAAaR,EAAS,GACLA,EAAU1D,IACzB0D,EAAS1D,EAAKkE,GAxBpB,gDA2BSC,GA3BT,iDAlJF,4DAAmCoqB,G,QCCtB9e,EAAb,kDACE,WAAYpS,EAASC,GAAkB,IAAD,8BACpC,cAAMD,EAASC,EAAiBmxB,IAC3BxwB,YAAc,GAFiB,EADxC,+EAOE,sBAAAP,EAAA,sEAC2BD,KAAKsD,MAAM,QADtC,cACEtD,KAAKQ,YADP,yBAESR,KAAKQ,aAFd,gDAPF,uHAaE,WAAmBD,EAAgBqY,EAAU3S,GAA7C,SAAAhG,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,uBAIenT,KAAKuH,UAChB,eACA,CAACqR,EAAUxP,YAAcnD,IACzB1F,GAPJ,wFAbF,+HAwBE,WAAsBA,EAAgBqY,EAAU3S,EAAQwV,GAAxD,SAAAxb,EAAA,0DACMwb,EADN,gCAEiBzb,KAAKuH,UAChB,kBACA,CAACqR,EAAUuZ,cACX5xB,GALN,+DAQiBP,KAAKuH,UAChB,kBACA,CAACqR,EAAUxP,YAAcnD,IACzB1F,GAXN,wFAxBF,2HAwCE,WAAgBA,EAAgBqY,EAAU3S,GAA1C,SAAAhG,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,uBAIenT,KAAKuH,UAChB,YACA,CAACqR,EAAUxP,YAAcnD,IACzB1F,GAPJ,wFAxCF,4HAmDE,WAAmBA,EAAgBqY,EAAU3S,EAAQwV,GAArD,SAAAxb,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,WAIMsI,EAJN,gCAMiBzb,KAAKuH,UAChB,eACA,CAACqR,EAAUuZ,cACX5xB,GATN,gEAYiBP,KAAKuH,UAChB,eACA,CAACqR,EAAUxP,YAAcnD,IACzB1F,GAfN,0FAnDF,uHAuEE,WAAYA,EAAgBqb,EAAU3V,GAAtC,SAAAhG,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,uBAIenT,KAAKuH,UAChB,QACA,CAACqU,EAAUxS,YAAcnD,IACzB1F,GAPJ,wFAvEF,sIAmFE,WAA6BA,EAAgBqY,EAAU3S,EAAQmsB,GAA/D,SAAAnyB,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,uBAIenT,KAAKuH,UAChB,yBACA,CAACqR,EAAUxP,YAAcnD,GAASmsB,GAClC7xB,GAPJ,wFAnFF,2IA6FE,WAAgCA,EAAgBqY,EAAU3S,EAAQmsB,EAAY3W,GAA9E,SAAAxb,EAAA,0DACMwb,EADN,gCAEiBzb,KAAKuH,UAChB,4BACA,CAACqR,EAAUuZ,aAAYC,GACvB7xB,GALN,+DAQiBP,KAAKuH,UAChB,4BACA,CAACqR,EAAUxP,YAAcnD,GAASmsB,GAClC7xB,GAXN,wFA7FF,uIA6GE,WAA0BA,EAAgBqY,EAAU3S,EAAQmsB,GAA5D,SAAAnyB,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,uBAIenT,KAAKuH,UAChB,sBACA,CAACqR,EAAUxP,YAAcnD,GAASmsB,GAClC7xB,GAPJ,wFA7GF,wIAwHE,WAA6BA,EAAgBqY,EAAU3S,EAAQmsB,EAAY3W,GAA3E,SAAAxb,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,WAIMsI,EAJN,gCAKiBzb,KAAKuH,UAChB,yBACA,CAACqR,EAAUuZ,aAAYC,GACvB7xB,GARN,gEAWiBP,KAAKuH,UAChB,yBACA,CAACqR,EAAUxP,YAAcnD,GAASmsB,GAClC7xB,GAdN,0FAxHF,mIA2IE,WAAsBA,EAAgBqb,EAAU3V,EAAQmsB,GAAxD,SAAAnyB,EAAA,yDACOD,KAAKQ,YADZ,gCAEUR,KAAKmT,OAFf,uBAIenT,KAAKuH,UAChB,kBACA,CAACqU,EAAUxS,YAAcnD,GAASmsB,GAClC7xB,GAPJ,wFA3IF,kEAAyCuwB,G,QCC5B7e,EAAb,kDACE,WAAYrS,EAASC,GAAkB,uCAC/BD,EAASC,EAAiBoxB,GAFpC,iFAKE,sBAAAhxB,EAAA,sEACeD,KAAKsD,MAAM,UAD1B,wFALF,mHASE,sBAAArD,EAAA,sEACeD,KAAKsD,MAAM,YAD1B,wFATF,qHAYE,WAAiBmE,GAAjB,SAAAxH,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAACmE,IADxC,wFAZF,qHAgBE,WAAgBA,GAAhB,qBAAAxH,EAAA,sEACgCiD,QAAQwE,IAAI,CACxC1H,KAAKqyB,WAAW5qB,GAChBzH,KAAK4H,aAHT,0CACS7G,EADT,KACc6G,EADd,uBAKSpE,YAAGzC,GAAM6G,IALlB,gDAhBF,uHAwBE,4BAAA3H,EAAA,sEACoBD,KAAKsD,MAAM,eAD/B,cACQvC,EADR,yBAES4C,YAAc5C,IAFvB,gDAxBF,qHA6BE,WAAiBR,EAAgBC,GAAjC,eAAAP,EAAA,sEAC0BD,KAAKsD,MAAM,YAAa,CAC9C/C,EACAC,IAHJ,cACQ6G,EADR,yBAKS7D,YAAG6D,GAAWC,GAAG,IAL1B,gDA7BF,oHAsCE,WAAa/G,EAAgBC,GAA7B,SAAAP,EAAA,sEACeD,KAAKuH,UAChB,UACA,CAAC/G,EAAa8xB,eACd/xB,GAJJ,wFAtCF,8DAA4BuwB,GCFtByB,EAAe,SAACxxB,GACpB,MAAO,CACL8C,UAAWF,YAAc5C,EAAI,IAC7B2X,IAAK/U,YAAc5C,EAAI,IACvBqZ,kBAAmBzW,YAAc5C,EAAI,MAG5BmR,EAAb,kDACE,WAAYtS,EAASC,GAAkB,uCAC/BD,EAASC,EAAiBqxB,GAFpC,oFAME,WAAgB3wB,GAAhB,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAAC/C,IADxC,wFANF,gHASE,sBAAAN,EAAA,sEACeD,KAAKsD,MAAM,QAD1B,wFATF,iHAYE,WAAa/C,GAAb,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,SAAU,CAAC/C,IADrC,wFAZF,oHAeE,WAAeA,EAAgBqY,GAA/B,eAAA3Y,EAAA,sEACoBD,KAAKsD,MAAM,WAAY,CAAC/C,EAAgBqY,IAD5D,UACQ7X,EADR,QAEMsgB,MAAMC,QAAQvgB,GAFpB,yCAGWwxB,EAAaxxB,IAHxB,aAKIG,QAAQC,IAAI,UAAWnB,KAAKH,iBAC5BqB,QAAQC,IAAI,MAAOJ,GACb,IAAIK,MAAJ,gDAAmDb,EAAnD,YAAqEqY,EAArE,MAPV,iDAfF,uHAyBE,WAAgBrY,GAAhB,eAAAN,EAAA,sEACoBD,KAAKsD,MAAM,YAAa,CAAC/C,IAD7C,UACQQ,EADR,QAEMsgB,MAAMC,QAAQvgB,GAFpB,yCAGWA,EAAI0b,KAAI,SAAAnb,GAAC,OAAIixB,EAAajxB,OAHrC,aAKU,IAAIF,MAAJ,gDAAmDb,EAAnD,MALV,gDAzBF,4DAA4BuwB,GCPtB0B,EAAkB,SAACzxB,GACvB,MAAO,CACLiG,OAAQrD,YAAc5C,EAAIiG,QAC1Bc,KAAMnE,YAAc5C,EAAI+G,MACxBuQ,0BAA2B1U,YAAc5C,EAAIsX,6BAGpClG,EAAb,kDACE,WAAYvS,EAASC,GAAkB,uCAC/BD,EAASC,EAAiBsxB,GAFpC,+EAME,sBAAAlxB,EAAA,sEACeD,KAAKsD,MAAM,QAD1B,wFANF,oHASE,WAAgB/C,GAAhB,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAAC/C,IADxC,wFATF,kHAYE,WAAaA,GAAb,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,SAAU,CAAC/C,IADrC,wFAZF,qHAeE,WAAgBA,EAAgBqb,GAAhC,eAAA3b,EAAA,sEACoBD,KAAKsD,MAAM,YAAa,CAAC/C,EAAgBqb,IAD7D,cACQ7a,EADR,yBAES4C,YAAc5C,IAFvB,gDAfF,wHAmBE,WAAiBR,GAAjB,eAAAN,EAAA,sEACoBD,KAAKsD,MAAM,aAAc,CAAC/C,IAD9C,UACQQ,EADR,QAEMsgB,MAAMC,QAAQvgB,GAFpB,yCAGWA,EAAI0b,KAAI,SAACnb,GAAD,OAAOqC,YAAcrC,OAHxC,gDAnBF,uHAyBE,WAAkBf,EAAgBqb,GAAlC,eAAA3b,EAAA,sEACoBD,KAAKsD,MAAM,cAAe,CAAC/C,EAAgBqb,IAD/D,UACQ7a,EADR,QAEMsgB,MAAMC,QAAQvgB,GAFpB,yCAGWyxB,EAAgBzxB,IAH3B,aAKU,IAAIK,MAAJ,iDAAoDb,EAApD,MALV,gDAzBF,0HAiCE,WAAmBA,GAAnB,eAAAN,EAAA,sEACoBD,KAAKsD,MAAM,eAAgB,CAAC/C,IADhD,UACQQ,EADR,QAEMsgB,MAAMC,QAAQvgB,GAFpB,yCAGWA,EAAI0b,KAAI,SAACnb,GAAD,OAAOkxB,EAAgBlxB,OAH1C,gDAjCF,4DAA4BwvB,GCPfre,EAAb,kDACE,WAAY7S,EAAS6H,EAASyF,EAAQoF,GAAU,IAAD,8BAC7C,cAAM1S,EAAS6H,EAAS2pB,IACnBlkB,OAASA,EACd,EAAKoF,QAAUA,EAH8B,EADjD,mFAOE,4BAAArS,EAAA,sEACoBD,KAAKsD,MAAM,OAD/B,cACQvC,EADR,yBAESyC,YAAGzC,EAAD,WAAUf,KAAKsS,UAAWtR,YAFrC,gDAPF,2DAA+B8vB,GCAlBve,EAAb,kDACE,WAAY3S,EAAS6H,EAASyF,EAAQoF,GAAU,IAAD,8BAC7C,cAAM1S,EAAS6H,EAAS4pB,IACnBnkB,OAASA,EACd,EAAKoF,QAAUA,EAH8B,EADjD,mFAQE,4BAAArS,EAAA,sEACoBD,KAAKsD,MAAM,mBAD/B,YACQvC,EADR,UAEaA,EAAI0xB,OAFjB,yCAGWjvB,YAAGzC,EAAI0xB,OAAL,WAAiBzyB,KAAKsS,UAAWtR,YAH9C,gDARF,2DAAqC8vB,GCAxBte,EAAb,kDACE,WAAY5S,EAAS6H,EAASyF,EAAQoF,GAAU,IAAD,8BAC7C,cAAM1S,EAAS6H,EAAS6pB,IACnBpkB,OAASA,EACd,EAAKoF,QAAUA,EAH8B,EADjD,mFAQE,4BAAArS,EAAA,sEACoBD,KAAKsD,MAAM,YAD/B,YACQvC,EADR,iDAGW4C,YAAc5C,GAAKC,YAH9B,gDARF,2DAAmC8vB,GCDtBne,EAAb,kDACE,WAAY/S,EAAS6H,GAAU,uCACvB7H,EAAS6H,EAAS8pB,GAF5B,oFAKE,WAAgBhxB,GAAhB,SAAAN,EAAA,sEACeD,KAAKsD,MAAM,YAAa,CAAC/C,IADxC,wFALF,qHAUE,WAAgBA,EAAgB+hB,GAAhC,SAAAriB,EAAA,sEACeD,KAAKuH,UAChB,YACA,CAAC+a,GACD/hB,GAJJ,wFAVF,8DAAmCuwB,GCAtBje,EAAb,kDACE,WAAYjT,EAASY,GAAc,uCAC3BZ,EAASY,EAAagxB,GAFhC,2FAIE,sBAAAvxB,EAAA,sEACeD,KAAKsD,MAAM,mBAAoB,IAD9C,wFAJF,8HAOE,sBAAArD,EAAA,sEACeD,KAAKsD,MAAM,sBAAuB,IADjD,wFAPF,wHAUE,WAAoB/C,GAApB,SAAAN,EAAA,sEACeD,KAAKuH,UAAU,gBAAiB,GAAIhH,GADnD,wFAVF,4DAAmCuwB,I,oBCHnC,IAAIrU,EAAM,CACT,mBAAoB,IACpB,mBAAoB,IACpB,wBAAyB,IACzB,mBAAoB,IACpB,uBAAwB,IACxB,mBAAoB,IACpB,iBAAkB,IAClB,iBAAkB,IAClB,mBAAoB,IACpB,wBAAyB,IACzB,gBAAiB,IACjB,iBAAkB,IAClB,mBAAoB,IACpB,mBAAoB,IACpB,wBAAyB,IACzB,mBAAoB,IACpB,uBAAwB,IACxB,mBAAoB,IACpB,iBAAkB,IAClB,iBAAkB,IAClB,mBAAoB,IACpB,wBAAyB,IACzB,gBAAiB,IACjB,iBAAkB,IAClB,mBAAoB,IACpB,mBAAoB,IACpB,wBAAyB,IACzB,mBAAoB,IACpB,uBAAwB,IACxB,mBAAoB,IACpB,iBAAkB,IAClB,iBAAkB,IAClB,mBAAoB,IACpB,wBAAyB,IACzB,gBAAiB,IACjB,iBAAkB,KAInB,SAASiW,EAAeC,GACvB,IAAIzE,EAAK0E,EAAsBD,GAC/B,OAAOE,EAAoB3E,GAE5B,SAAS0E,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAErW,EAAKkW,GAAM,CACpC,IAAI7rB,EAAI,IAAI1F,MAAM,uBAAyBuxB,EAAM,KAEjD,MADA7rB,EAAE2pB,KAAO,mBACH3pB,EAEP,OAAO2V,EAAIkW,GAEZD,EAAejoB,KAAO,WACrB,OAAOD,OAAOC,KAAKgS,IAEpBiW,EAAe7wB,QAAU+wB,EACzBG,EAAOC,QAAUN,EACjBA,EAAexE,GAAK,K,mo2CCzDpB,4RAkCaxI,EAAoB,WAE/B,OAlCuB,SAACnY,GAGxB,OAFcA,EAAO4I,MAGlBsG,KAAI,SAACtJ,GAEJ,IADA,IAAI1P,EAAS,GACJnC,EAAI,EAAGA,EAAI6R,EAAKqF,QAAQnL,OAAQ/L,IAEvC,IADA,IAAM+J,EAAS8H,EAAKqF,QAAQlX,GACnBA,EAAI,EAAGA,EAAI6R,EAAK+F,QAAQ7L,OAAQ/L,IAAK,CAC5C,IAAM4L,EAASiG,EAAK+F,QAAQ5X,GAC5BmC,EAAOsD,KAAK,CACVoM,KAAMA,EAAKA,KACX3H,OAAQ2H,EAAK3H,OACbG,OAAQwH,EAAKxH,OACbyP,OAAQjI,EAAKiI,OACb9H,aAAcH,EAAKG,aACnB1T,QAASuT,EAAKvT,QACdyL,OAAQA,EAAOA,OACfuN,SAAUvN,EAAOuN,SACjBrF,aAAclI,EAAOkI,aACrBrG,OAAQA,EAAOA,OACf0O,SAAU1O,EAAO0O,SACjBpI,KAAMtG,EAAOsG,KACbC,QAAS,OAIf,OAAOhQ,KAERwvB,OAKIC,CADQlmB,gBAIJmmB,EAA4B,SAAC3yB,EAAaoY,EAAUgD,GAC/DhD,EAA+B,kBAAbA,EAAwBA,EAAS5X,WAAa4X,EAChEgD,EAA+B,kBAAbA,EAAwBA,EAAS5a,WAAa4a,EAChE,IAAMwX,EAAiB1N,IACjB2N,EAAoB,MAAZza,EACE,MAAZgD,EACE,SAACta,GAAD,OACEA,EAAE6R,OAAS3S,GACXc,EAAEsX,WAAaA,GACftX,EAAEsa,WAAaA,GACjB,SAACta,GAAD,OAAOA,EAAE6R,OAAS3S,GAAec,EAAEsX,WAAaA,GACrC,MAAZgD,EAAmB,SAACta,GAAD,OAAOA,EAAE6R,OAAS3S,GAAec,EAAEsa,WAAaA,GAAW,SAACta,GAAD,OAAOA,EAAE6R,OAAS3S,GACrG,GAAI4yB,EAAe/lB,OAAS,EAAG,CAC7B,IAAMtM,EAAMqyB,EAAe5sB,OAAO6sB,GAClC,GAAItyB,GAAOA,EAAIsM,OAAS,EACtB,OAAOtM,EAGX,MAAM,IAAIK,MAAJ,qDAAwDZ,EAAxD,sBAAiFoY,EAAjF,0BAA2GgD,EAA3G,OAGK0X,EAAgB,SAAC9yB,EAAaoY,EAAUgD,GAEnD,OADauX,EAA0B3yB,EAAaoY,EAAUgD,GACnD,IAGA2X,EAAiB,SAAC/yB,GAC7B,IAEI2S,EAFWnG,cACMmJ,MACJqd,MAAK,SAAC5d,GAAD,OAAOA,EAAEzC,OAAS3S,KAExC,GAAI2S,EACF,OAAOA,EAET,MAAM,IAAI/R,MAAJ,8CAAiDZ,EAAjD,OAGK+Y,EAAiB,SAAC/Y,EAAaoY,EAAUgD,GACpD,IAWIvQ,EAAQ6B,EAXNiG,EAAOogB,EAAe/yB,GAkB5B,YANiBqO,IAAb+J,GAAuC,OAAbA,IAC5BvN,EAAS8H,EAAKqF,QAAQgb,MAAK,SAACjjB,GAAD,OAAOA,EAAEqI,WAAaA,MAZ7B,CACpBA,SAAU,GACVrF,aAAc,GACdlI,OAAQ,UAWOwD,IAAb+M,GAAuC,OAAbA,IAC5B1O,EAASiG,EAAK+F,QAAQsa,MAAK,SAACjjB,GAAD,OAAOA,EAAEqL,WAAaA,MAV7B,CACpBA,SAAU,GACV1O,OAAQ,GACRsG,KAAM,KASD,CACLL,KAAMA,EAAKA,KACX3H,OAAQ2H,EAAK3H,OACbG,OAAQwH,EAAKxH,OACbyP,OAAQjI,EAAKiI,OACbqY,OAAQtgB,EAAKsgB,OACbhC,YAAate,EAAKse,YAClBC,YAAave,EAAKue,YAClBpe,aAAcH,EAAKG,aACnB1T,QAASuT,EAAKvT,QACdyL,OAAQA,EAAOA,OACfuN,SAAUvN,EAAOuN,SACjBrF,aAAclI,EAAOkI,aACrBrG,OAAQA,EAAOA,OACf0O,SAAU1O,EAAO0O,SACjBpI,KAAMtG,EAAOsG,KACbC,QAAS,OAIA4I,EAAoB,SAAC7b,GAEhC,OADa+yB,EAAe/yB,GAChBgY,QAAQiE,KAAI,SAAClM,GACvB,MAAO,CACLqI,SAAUrI,EAAEqI,SACZrF,aAAchD,EAAEgD,aAChBsC,cAAetF,EAAElF,YAKVoO,EAAsB,SAACjZ,GAElC,OADa+yB,EAAe/yB,GAChBgY,QAAQiE,KAAI,SAAClM,GAAD,OAAOA,EAAEqI,aAGtBiE,EAAoB,SAACrc,GAEhC,OADa+yB,EAAe/yB,GAChB0Y,QAAQuD,KAAI,SAACtX,GACvB,MAAO,CACL+H,OAAQ/H,EAAE+H,OACV0O,SAAUzW,EAAEyW,SACZpI,KAAMrO,EAAEqO,UAKDmG,EAAsB,SAACnZ,GAElC,OADa+yB,EAAe/yB,GAChB0Y,QAAQuD,KAAI,SAAClM,GAAD,OAAOA,EAAEqL,c,i9cC3I7B8X,EAAaniB,aAAkB,kBAAM,wDACrCoiB,EAAYpiB,aAAkB,kBAAM,wDAW3BqiB,ICVI1uB,EDUJ0uB,cAAO,OAAPA,CAAeC,aAT9B,YAAsB,IAARC,EAAO,EAAPA,KACZ,OAAGvlB,YACM,cAACmlB,EAAD,CAAY/D,OAAQmE,EAAKnE,SAE/BoE,WACM,cAACJ,EAAD,CAAWhE,OAAQmE,EAAKnE,cADjC,M,sFEyFaqE,E,WA1Fb,aAAc,IAAD,gCAFbC,OAAS,GAEI,KAWbC,YAAc,mBAAQpxB,OAAOC,UAXhB,KAaboxB,YAAc,mBAAQ,EAAKF,OAAOpR,SAbrB,KAyBbuR,QAzBa,uCAyBH,WAAOjhB,EAAKyF,GAAZ,eAAA3Y,EAAA,0DACL,EAAKg0B,OAAOr0B,QADP,gCAEiB8hB,iBAAO,EAAKuS,OAAOr0B,QAAQuT,EAAK,EAAK8gB,OAAOpR,QAAQjK,GAFrE,cAEAyb,EAFA,yBAGCA,GAHD,2CAzBG,6DAgCbC,QAhCa,sBAgCF,4BAAAr0B,EAAA,sEACSwiB,0BADT,cACH1hB,EADG,yBAEF,IAAImC,QAAJ,uCAAY,WAAOrB,EAAQC,GAAf,mBAAA7B,EAAA,0DACdc,EAAIoF,QADU,uBAERvG,EAAmBmB,EAAnBnB,QAAQijB,EAAW9hB,EAAX8hB,QAFA,SAGM,EAAK0R,kBAAkB30B,EAAQijB,GAHrC,OAGT2R,EAHS,OAIf3yB,EAAQ2yB,GAJO,sBAMf1yB,EAAO,MANQ,2CAAZ,0DAFE,2CAhCE,KA6CbyyB,kBA7Ca,uCA6CO,WAAO30B,EAAQijB,GAAf,qBAAA5iB,EAAA,sEACIgjB,+BAAqBrjB,EAAQijB,GADjC,cACZ3E,EADY,OAEZ+V,EAAS,CAACr0B,UAAQijB,UAAQ3E,UAAQwQ,cAAgBA,YAAcxQ,IAChE/O,EAAM9E,UAAQC,OACbmlB,EAAaliB,EAAO4B,GAApBsgB,WAEM7vB,KACX4K,OAAO4gB,OAAO6I,EAAdzpB,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAyBilB,EAAU7vB,IAAnC,IAA4C60B,WAAY,KACxDjF,YAAWC,EAAU7vB,KAEvB,EAAK80B,UAAUT,GAVG,kBAWXA,GAXW,2CA7CP,6DA2Db3pB,IAAM,WACJ,OAAO,EAAK2pB,QA3DZ7F,YAAmBpuB,KAAK,CACtBi0B,OAASlP,IACT2P,UAAYzP,IACZ0P,UAAYpG,IACZqG,UAAYrG,IACZsG,kBAAoBtG,IACpBuG,aAAevG,M,qFASnB,WAAiBpb,EAAKyF,GAAtB,eAAA3Y,EAAA,0DACKD,KAAKi0B,OAAOr0B,UAAWI,KAAK80B,aADjC,gCAE6B3W,qBAAWne,KAAKi0B,OAAOr0B,QAAQuT,EAAKnT,KAAKi0B,OAAOpR,QAAQjK,GAAUgC,OAAM,SAAA9T,GAAC,OAAI5F,QAAQc,MAAM,yBAFxH,cAEU+yB,EAFV,OAGI/0B,KAAKi0B,OAAOc,WAAaA,EACzB/0B,KAAK00B,UAAU10B,KAAKi0B,QAJxB,kBAKWc,GALX,gD,gFA+CA,SAAUd,GACRj0B,KAAKi0B,OAASA,I,qBAGhB,WACEj0B,KAAKu0B,kBAAkBv0B,KAAKi0B,OAAOr0B,QAAQI,KAAKi0B,OAAOpR,W,qBAGzD,WACE,OAAO7iB,KAAKi0B,OAAOU,Y,qBAGrB,WACE,OAAO30B,KAAKi0B,OAAOW,Y,6BAGrB,WACE,OAAO50B,KAAKi0B,OAAOW,WAAa50B,KAAKi0B,OAAOU,Y,wBAG9C,WACE,OAAO30B,KAAKi0B,OAAOQ,c,uBC0CRO,E,WA5Hb,aAAc,yBATd9nB,OAAS,SASI,KARb+nB,SAAW,MAQE,KAPbvkB,MAAQ,EAOK,KANbwkB,MAAQ,GAMK,KALb7I,GAAK,KAKQ,KAJb8I,QAAS,EAII,KAHbC,UAAY,GAGC,KAFbC,SAAU,EAGRjH,YAAmBpuB,KAAK,CACtB0Q,MAAQqU,IACRmQ,MAAQnQ,IACRuQ,SAAWrQ,M,iDAKf,WAAgB,IAAD,OACE,OAAZjlB,KAAKqsB,KACNrsB,KAAKqsB,GAAK,IAAIkJ,IAAU3gB,6BAA+B,CACrDqZ,WAAY,CAAC,aACbuH,iBAAiB,IAEnBx1B,KAAKqsB,GAAGvJ,GAAG,WAAU,WAChB,EAAKuS,UACN,EAAKhJ,GAAGoJ,KAAK,mBAAoB,CAAC,OAAU,EAAKvoB,OAAQ,UAAa,EAAK+nB,WAC3E/zB,QAAQC,IAAI,8BAEdD,QAAQC,IAAI,iC,kBAMlB,SAAK+L,GAAyB,IAAD,OAAjB+nB,EAAiB,uDAAN,MAErBj1B,KAAK01B,gBACL11B,KAAKqsB,GAAGvJ,GAAG,gBAAe,SAAAlgB,GACxB,IAAM+yB,EAAM,GACRxV,EAAOvd,EAAKud,KAChB,GAAIvd,EAAKsK,OAAOwjB,gBAAkB,EAAKxjB,OAAOwjB,gBAC5CiF,EAAIxV,KAAOA,EACXwV,EAAIC,IAAM9lB,OAAOlN,EAAKgzB,KACtBD,EAAIE,KAAO/lB,OAAOlN,EAAKizB,MACvBF,EAAIG,KAAOhmB,OAAOlN,EAAKkzB,MACvBH,EAAII,MAAQjmB,OAAOlN,EAAKmzB,OACxBJ,EAAI3uB,OAAS8I,OAAOlN,EAAKoE,QACzB2uB,EAAIK,UAAYpzB,EAAKozB,UACrBL,EAAIzoB,OAAStK,EAAKsK,QACd,EAAKioB,QAAQ,CACf,EAAKG,SAASK,EAAII,OAClB,IAAI,IAAJ,MAAiBvrB,OAAOC,KAAK,EAAK2qB,WAAlC,eAA6C,CAAzC,IAAM7qB,EAAG,KACuB,oBAAxB,EAAK6qB,UAAU7qB,IACvB,EAAK6qB,UAAU7qB,GAAKorB,QAM3BzoB,IAAWlN,KAAKkN,QACjBlN,KAAKi2B,gBAAgBj2B,KAAKkN,QAE5BlN,KAAKk2B,UAAUhpB,GACflN,KAAKm2B,YAAYlB,GACjBj1B,KAAKqsB,GAAGoJ,KAAK,mBAAoB,CAAC,OAAUz1B,KAAKkN,OAAQ,UAAalN,KAAKi1B,WAC3Ej1B,KAAKq1B,SAAU,I,yBAGjB,SAAYnH,EAAGkI,GACTp2B,KAAKo1B,UAAUlH,KACjBluB,KAAKo1B,UAAUlH,GAAMkI,K,6BAMzB,SAAgBlpB,GACXlN,KAAKqsB,IACNrsB,KAAKqsB,GAAGoJ,KAAK,sBAAuB,CAClCvoB,OAASA,EAAQ,UAAc,U,yBAOrC,SAAYA,EAAO+nB,EAASoB,GAC1Br2B,KAAKqsB,GAAGvJ,GAAG,iBAAiB,SAAAlgB,GAC1B,IAAM0zB,EAAU1zB,EAAK6Z,KAAI,SAAA8Z,GACvB,MAAO,CACLpW,KAAMoW,EAAGpW,KACTyV,IAAK9lB,OAAOymB,EAAGX,KACfC,KAAM/lB,OAAOymB,EAAGV,MAChBC,KAAMhmB,OAAOymB,EAAGT,MAChBC,MAAOjmB,OAAOymB,EAAGR,OACjB/uB,OAAQ8I,OAAOymB,EAAGvvB,YAGnBqvB,IACDn1B,QAAQC,IAAI,aAAam1B,EAAQA,EAAQjpB,OAAO,GAAG8S,MACnDkW,EAASC,OAGbt2B,KAAKqsB,GAAGoJ,KAAK,YAAa,CAAC,OAAUvoB,EAAQ,UAAa+nB,EAAU,KAAQ,Q,oBAG9E,WACEj1B,KAAKw2B,UAAS,K,mBAGhB,WACEx2B,KAAKw2B,UAAS,K,sBAGhB,SAAS9lB,GACH1Q,KAAKm1B,SACPn1B,KAAK0Q,MAAQA,K,uBAIjB,SAAUxD,GACRlN,KAAKkN,OAASA,I,yBAGhB,SAAY+nB,GACVj1B,KAAKi1B,SAAWA,I,sBAElB,SAASE,GACPn1B,KAAKm1B,OAASA,M,KCnIGsB,E,iDAEnBJ,SAAW,a,KACV7B,OAAS,K,KACTkC,KAAO,K,KAEPC,iBAAmB,CAClB7Y,kBAAmB,GACnBC,iBAAkB,GAClB/V,OAAQ,QACR8P,WAAY,cACZ4F,mBAAqB,YACrBC,cAAe,SACf3W,OAAQ,O,+EAGT,WAAWwtB,EAAOkC,EAAKL,GAAvB,eAAAp2B,EAAA,2DACKu0B,GAAUA,EAAOL,eAAiBK,EAAOM,cAAgB4B,GAAQA,EAAKvjB,MAD3E,gCAE0BwJ,0BAAgB6X,EAAOP,OAAOr0B,QAAQ82B,EAAKvjB,KAAKqhB,EAAOP,OAAOpR,QAAQ6T,EAAK9a,UAFrG,cAESgb,EAFT,SAKQP,GACDA,EAASO,GAGb52B,KAAKmR,MAAMqjB,EAAOkC,EAAKL,GAT1B,kBAUUO,GAVV,gD,8EAcA,SAAMpC,EAAOkC,EAAKL,GAAU,IAAD,OACJ,OAAlBr2B,KAAK62B,UACNjJ,cAAc5tB,KAAK62B,UAEtB72B,KAAK62B,SAAW/zB,OAAO4qB,aAAY,kBAAM,EAAKoJ,KAAKtC,EAAOkC,EAAKL,KAAU,KACtE7B,IACDx0B,KAAKw0B,OAAQA,GAEZkC,IACD12B,KAAK02B,KAAOA,GAEXL,IACDr2B,KAAKq2B,SAAWA,K,mBAInB,WACCzI,cAAc5tB,KAAK62B,UACnB72B,KAAK62B,SAAW,O,oBAGjB,SAAOrC,EAAOkC,EAAKL,GACjBr2B,KAAKmR,MAAMqjB,EAAOkC,EAAKL,GAAYr2B,KAAKq2B,c,KCpDxB12B,E,iDACnBkgB,KAAO,CACLrD,QAAQ,OACRtP,OAAO,SACPlJ,WAAW,SACXO,uBAAuB,YACvBJ,sBAAsB,GACtBC,0BAA0B,IAC1BH,SAAS,M,+EAGX,WAAWuwB,EAAOjnB,GAAlB,eAAAtN,EAAA,2DACKu0B,GAAUA,EAAOM,cAAgBvnB,GAAUA,EAAO4F,OAASnT,KAAK6f,KAAK1M,MAD1E,gCAEuBiJ,2BAAiBoY,EAAOP,OAAOr0B,QAAQ2N,EAAO4F,KAAK5F,EAAOqL,SAASrL,EAAOqO,UAFjG,OAEU8a,EAFV,OAGI12B,KAAK+2B,QAAQL,GAHjB,gCAKS12B,KAAK6f,MALd,gD,8EAQA,SAAQA,GACN7f,KAAK6f,KAAOA,M,KCnBKmX,E,2HAElB,WAAWxC,EAAOjnB,GAAlB,eAAAtN,EAAA,2DACMu0B,GAAUA,EAAOM,cAAgBN,EAAOP,OAAOr0B,SAAW2N,GAAUA,EAAO4F,MADjF,gCAEwB8N,0BAAgBuT,EAAOP,OAAOr0B,QAAQ2N,EAAO4F,KAAKqhB,EAAOP,OAAOpR,QAAQtV,EAAOqO,UAFvG,cAEYlU,EAFZ,yBAGaA,GAHb,gCAKa,IALb,2C,kFLAGmP,EAAQ,IAEK3R,EAqBTsgB,QApBC/a,OAAOwsB,SAAQ,SAAA1sB,GACtB,IAAMwhB,EAAOxhB,EAAIsR,MAAM,KACjBqb,EAAOnL,EAAK,GACZoL,EAAOpL,EAAK,GAAGlQ,MAAM,KAAK,GAAGub,cAKnC,GAJIvgB,EAAMqgB,KACRrgB,EAAMqgB,GAAQ,IAGb,UAAUG,KAAKF,GAAM,CACtB,IAAMG,EAAUH,EAAKtb,MAAM,KAAK,GAC5BhF,EAAMqgB,GAAMI,KACdzgB,EAAMqgB,GAAMI,GAAY,IAE1BzgB,EAAMqgB,GAAMI,GAAZ,OAAkCpyB,EAAEqF,QAEpCsM,EAAMqgB,GAAMC,GAAQjyB,EAAEqF,M,IA+Cb,M,WAtCb,aAAc,yBADdolB,OAAS,KAEP7K,YAAe9kB,KAAK,CAClB2vB,OAAS5K,IACTwS,UAAYtS,IACZuS,KAAOjJ,IACPkJ,YAAalJ,MAEf,IAAMmJ,EAAWhpB,UAAUgpB,SACrBC,EAASD,GAAYA,EAAS7b,MAAM,KAAK,GACzC8T,EAASC,cACZD,GAAUnlB,OAAOC,KAAKmtB,GAAkB32B,SAAS0uB,GAClD3vB,KAAK2vB,OAASA,EACNgI,GAAUntB,OAAOC,KAAKmtB,GAAkB32B,SAAS02B,KACzD33B,KAAK2vB,OAASgI,G,6CAIlB,SAAUhI,GACLA,IACD3vB,KAAK2vB,OAASA,EACdD,YAAYC,M,iBAIhB,SAAIwH,EAAK5sB,GACP,OAAOsM,EAAM7W,KAAK2vB,QAAQwH,GAAM5sB,K,gBAGlC,WACE,OAAOsM,EAAM7W,KAAK2vB,U,uBAGpB,WACE,IAAMkI,EAAQD,EAAiB53B,KAAK2vB,QACpC,OAAOkI,EAAQA,EAAMpJ,OAAO,EAAE,GAAGiC,cAAgB,S,cMzBhCoH,E,WAgBnB,aAAc,yBAfdrkB,QAAU,KAeG,KAdb+gB,OAAS,KAcI,KAbbrP,QAAU,GAaG,KAZb5X,OAAS,KAYI,KAXbmD,MAAQ,GAWK,KAVb1J,OAAS,GAUI,KATbmuB,QAAS,EASI,KARb4C,qBAAuB,EAQV,KAPbnB,SAAW,GAOE,KANbv2B,SAAW,GAME,KALboF,YAAc,GAKD,KAJb6wB,QAAU,GAIG,KAHb0B,sBAAwB,OAGX,KAFblD,cAAe,EAGbhQ,YAAe9kB,KAAK,CAClB0Q,MAAQqU,IACR/d,OAAS+d,IACTgT,qBAAuBhT,IACvBtf,YAAcsf,IACd6R,SAAW7R,IACXuR,QAAUvR,IACV1kB,SAAW0kB,IACXiT,sBAAwBjT,IACxB+P,aAAe/P,IACfkT,UAAWhT,IACXiT,WAAajT,IACbkT,UAAYlT,IACZqQ,SAAWrQ,IACXmT,YAAcnT,IACdoT,YAAcpT,IACdqT,UAAYrT,IACZsT,yBAA2BtT,IAC3BuT,gBAAkBvT,IAClBwT,eAAiBxT,IACjByT,WAAazT,IACb0T,eAAiB1T,IACjBhf,OAASsoB,IACTqK,eAAiBrK,IACjBrO,UAAYqO,IACZsK,cAAgBtK,IAChBuK,WAAavK,IACbwK,WAAaxK,MAEfvuB,KAAKg5B,WAAa,IAAInU,IACtB7kB,KAAK6E,OAAS,IAAImwB,EAClBh1B,KAAKqd,aAAe,IAAIoZ,EACxBz2B,KAAKi5B,aAAe,IAAIt5B,EACxBK,KAAKk5B,YAAc,IAAIlC,E,+EAMzB,WAAWxC,GAAX,qBAAAv0B,EAAA,sEACoBD,KAAKg5B,WAAWlC,KAAKrjB,KADzC,UACQ/L,EADR,OAGK8sB,EAAOL,gBACRn0B,KAAKi4B,UAAUzD,GACfx0B,KAAKk4B,WAAWxwB,EAAIlB,QAAO,SAAA4G,GAAC,OAAIuhB,YAAW6F,EAAOP,OAAOr0B,QAAQwN,EAAExN,cAC/Du5B,EAAgBn5B,KAAKo5B,iBAAiBp5B,KAAKmlB,QAAQqP,MAIrDx0B,KAAKw4B,iBAAgB,GACrBW,EAAgBzxB,EAAI2F,OAAS,EAAI3F,EAAI,GAAK,IAE5C1H,KAAKm4B,UAAUgB,IAGb3E,EAAOL,eAAkBK,EAAON,cAhBtC,wBAkBIzgB,IAAQ4a,WAAW,MAlBvB,SAmBsBruB,KAAKg5B,WAAWlC,KAAKrjB,KAnB3C,OAmBU/L,EAnBV,OAoBUyxB,EAAgBzxB,EAAI8rB,MAAK,SAAApmB,GAAC,MAAiB,WAAbA,EAAEF,UACtClN,KAAKm4B,UAAUgB,GArBnB,QAuBEn5B,KAAKq5B,aAAar5B,KAAKw0B,OAAOx0B,KAAKuN,QAAO,GAC1CvN,KAAKs4B,UAAU,IAxBjB,iD,kHA2BA,WAAa5B,GAAb,iBAAAz2B,EAAA,sDACQqlB,EAAMtlB,KAAKmlB,QAAQqO,MAAK,SAAAjmB,GAAM,OAAIA,EAAO4F,OAASujB,EAAKvjB,MAAQ5F,EAAOqO,WAAa8a,EAAK9a,YAE1F0d,GAAU,EACX7lB,MACD6lB,EAAU7lB,IAAQ6a,KAAOoI,EAAKvjB,OAASnT,KAAKuN,OAAO4F,KAAOujB,EAAK9a,WAAa5b,KAAKuN,OAAOqO,UAEvF0J,IACDtlB,KAAKu5B,QACLv5B,KAAKm4B,UAAU7S,GACftlB,KAAKq5B,aAAar5B,KAAKw0B,OAAOlP,EAAIgU,GAC/BA,GACDt5B,KAAKw5B,MAAMlU,GAEbtlB,KAAKy5B,SACLz5B,KAAKs4B,UAAU,KAfnB,gD,wHAmBA,WAAmB9D,EAAOjnB,EAAOmsB,GAAjC,8BAAAz5B,EAAA,sEAE0BD,KAAKqd,aAAayZ,KAAKtC,EAAOjnB,GAAO,SAAAqpB,GACzD,EAAKyB,YAAYzB,MAHvB,cAESA,EAFT,OAOK8C,GAAiBnsB,IACZL,EAASqjB,YAAgBhjB,EAAOL,QACtClN,KAAK6E,OAAOoxB,gBAAgB/oB,GAC5BlN,KAAK6E,OAAO80B,YAAY,WAAU,SAAA/2B,GAChC,EAAK0yB,SAAS1yB,EAAKmzB,UAGlBa,GACD52B,KAAKs1B,SAASsB,EAAS5xB,OAEzBhF,KAAK6E,OAAOiyB,KAAK5pB,IAjBrB,SAoB0BlN,KAAKi5B,aAAanC,KAAKtC,EAAOjnB,GApBxD,cAoBSlN,EApBT,gBAuB6BL,KAAK45B,gBAAgBpF,EAAOjnB,GAvBzD,cAuBS9H,EAvBT,iBA0ByBzF,KAAKk5B,YAAYpC,KAAKtC,EAAOjnB,GA1BtD,QA0BS+oB,EA1BT,OA4BMj2B,GACFL,KAAKo4B,YAAY/3B,GAGfoF,GACFzF,KAAKy4B,eAAehzB,GAGlB6wB,GACFt2B,KAAK04B,WAAWpC,GArCpB,iD,yFA2CE,WAAsC,IAArBnR,EAAoB,uDAAV,GAAGqP,EAAO,uCAC/B2E,EAAgB,KACpB,GAAGhU,EAAQ9X,OAAS,EAAE,CACpB,IAAMwsB,EAAY75B,KAAK85B,eAIvB,GAHGD,GAAalL,YAAW6F,EAAOP,OAAOr0B,QAAQi6B,EAAUj6B,WACzDu5B,EAAgBU,GAEfV,EAAc,CAEf,IAAMY,EAAM5U,EAAQxU,WAAU,SAAAvD,GAAC,OAAIA,EAAE+F,OAASgmB,EAAchmB,SAChD,IAAT4mB,IACDZ,EAAgBhU,EAAQ,SAG1BgU,EAAgBhU,EAAQ,GAG5B,OAAOgU,I,mBAMX,SAAM5rB,GACJ2hB,YAAYzb,IAAQyR,QAAQ3X,K,0BAG9B,WACE,OAAO+hB,YAAmB7b,IAAQyR,W,oEAGpC,4BAAAjlB,EAAA,sEAE4BD,KAAK45B,gBAAgB55B,KAAKw0B,OAAOx0B,KAAKuN,QAFlE,QAEQ9H,EAFR,SAIIzF,KAAKy4B,eAAehzB,GAJxB,gD,kHAQA,qCAAAxF,EAAA,6DACED,KAAKu5B,QADP,SAEyBv5B,KAAKqd,aAAayZ,KAAK92B,KAAKw0B,OAAOx0B,KAAKuN,OAAxC,uCAAgD,WAAOqpB,GAAP,SAAA32B,EAAA,sDACrE,EAAKo4B,YAAYzB,GACjB,EAAKoD,kBAFgE,2CAAhD,kCAAAh6B,KAAA,gBAFzB,cAEQ42B,EAFR,SAOI52B,KAAKq4B,YAAYzB,GAEnB52B,KAAKg6B,kBACLh6B,KAAKw0B,OAAOD,kBAAkBv0B,KAAKw0B,OAAOP,OAAOr0B,QAAQI,KAAKw0B,OAAOP,OAAOpR,SAV9E,SAWwB7iB,KAAKk5B,YAAYpC,KAAK92B,KAAKw0B,OAAOx0B,KAAKuN,QAX/D,QAWQ+oB,EAXR,SAaIt2B,KAAK04B,WAAWpC,GAElBt2B,KAAKs4B,UAAU,IACft4B,KAAKy5B,SAhBP,iD,yEAsBA,WACEz5B,KAAKi6B,WAAU,GACfj6B,KAAK6E,OAAO00B,QACZv5B,KAAKqd,aAAakc,U,oBAMpB,WACEv5B,KAAKi6B,WAAU,GACfj6B,KAAK6E,OAAO40B,SACZz5B,KAAKqd,aAAaoc,OAAOz5B,KAAKw0B,OAAOx0B,KAAKuN,U,uBAG5C,SAAUinB,GACRx0B,KAAKw0B,OAASA,I,wBAGhB,SAAWrP,GACTnlB,KAAKmlB,QAAUA,I,uBAGjB,SAAU5X,GACRvN,KAAKuN,OAASA,I,sBAGhB,SAASmD,GACP1Q,KAAK0Q,MAAQA,I,yBAGf,SAAYkmB,GACPA,IACD52B,KAAK42B,SAAWA,K,yBAIpB,SAAYv2B,GACVL,KAAKK,SAAWA,I,wBAGlB,SAAWi2B,GACTt2B,KAAKs2B,QAAUA,I,4BAGjB,SAAe7wB,GACbzF,KAAKyF,YAAcA,I,uBAGrB,SAAUuB,GACRhH,KAAKgH,OAASA,I,uBAGhB,SAAUmuB,GACRn1B,KAAKm1B,OAASA,I,6BAGhB,SAAgB+E,GACdl6B,KAAK80B,aAAeoF,I,sCAGtB,SAAyBha,GACvBlgB,KAAKg4B,sBAAwB9X,I,4BAG/B,SAAe6X,GACb,GAA4B,KAAzBA,EAA4B,CAC7B/3B,KAAK+3B,qBAAwBA,EAC7B,IAAMnB,EAAW52B,KAAK42B,SAChB5xB,EAAQ4xB,EAAS5xB,OAAShF,KAAK0Q,MAE/B1J,GADY+wB,EAAuBnB,EAAS9e,aACtB9S,EAAQhF,KAAKK,SAAS2D,WAAahE,KAAKK,SAAS8D,uBAC7EnE,KAAKs4B,UAAUtxB,EAAOsH,QAAQ,O,yBAKlC,WACE,OAA6B,IAA1BiB,KAAKtI,IAAIjH,KAAKgH,SAAiC,KAAhBhH,KAAKgH,QAAiC,MAAhBhH,KAAKgH,QAAkC,MAAhBhH,KAAKgH,QAAkBwO,MAAMxV,KAAKgH,QACxG,GAEAuI,KAAKtI,IAAIjH,KAAKgH,U,kBAKzB,WACE,IAAM4vB,EAAW52B,KAAK42B,SAChBv2B,EAAWL,KAAKK,SAChB2G,EAAyB,KAAhBhH,KAAKgH,QAAiBwO,MAAMxV,KAAKgH,QAAU,EAAIuI,KAAKtI,IAAIjH,KAAKgH,QACvEgB,EAAgF4uB,EAAhF5uB,OAA2BmyB,EAAqDvD,EAAxElZ,mBAA4C5F,EAA4B8e,EAA5B9e,WAAW6F,EAAiBiZ,EAAjBjZ,cAC9D3Y,EAAQ4xB,EAAS5xB,OAAShF,KAAK0Q,MAEjC0pB,EAAkB52B,aAAGsU,GAAYH,MAAMwiB,GAC3CC,EAAkBA,EAAgB5kB,QAAUhS,aAAG,GAAK42B,EACpD,IACMC,EADgBrzB,EAAShC,EAAQ3E,EAAS2D,WACJ3D,EAAS8D,sBACjDm2B,EAAkB92B,aAAGsU,GAGrB9X,KAAK+4B,YAA6C,UAA/B/4B,KAAKg4B,uBAAuCh4B,KAAK84B,YAA6C,SAA/B94B,KAAKg4B,wBACzFsC,EAAkBA,EAAgB3iB,MAAM0iB,IACrBthB,GAAGqhB,KACpBE,EAAmBF,EAAgBxiB,KAAKwiB,EAAgBziB,MAAM2iB,GAAiBrzB,QAEjFkzB,EAA0B32B,aAAG22B,GAAyBxiB,MAAM0iB,GAAqBpzB,MAAMqH,QAAQ,KAE/FgsB,EAAkB92B,aAAGsU,GAAYF,KAAKyiB,GACnCF,IACDA,EAA0B32B,aAAG22B,GAAyBviB,KAAKyiB,GAAqB/rB,QAAQ,KAI5F,IAAMisB,EAAavyB,GAAUxE,aAAGwE,GAAQ4P,KAAK+F,GAAerP,QAAQ,GAEpEgsB,EAAkBA,EAAgBhzB,GAAGizB,GAAcA,EAAaD,EAAgBhsB,QAAQ,GACrF6rB,IACDA,GAA4BA,GAA6BI,EAAcA,IAAeJ,GAAyB7rB,QAAQ,IAEzH,IAAIksB,EAAYh3B,aAAG+2B,GAAY5iB,MAAM2iB,GAAiBhsB,QAAQ,GACxDmsB,EAAYj3B,aAAGwD,GAAQ0zB,aAAar6B,EAAS2D,YAAYsK,QAAQ,GAEjEqsB,GAD6C,UAA/B36B,KAAKg4B,uBAAsCh4B,KAAK64B,gBAAkBjC,EAAS5vB,QAAchH,KAAK64B,gBAAoBjC,EAAS5vB,QACtGhC,EAAQ3E,EAAS2D,WACpDua,EAAWhP,KAAKtI,IAAI0zB,GAAuBJ,GAAajsB,QAAQ,GAEtE,OADAksB,GAAcA,EAAa,EAAI,EAAIA,EAC5B,CACLxzB,OAAShH,KAAKgH,OACduzB,WAAaA,EACbvyB,OAASsyB,EACTE,UAAYA,EACZC,UAAYA,EACZN,wBAA0BA,EAC1B5b,SAAWA,K,qBAIf,WAEE,GAAmB,KAAhBve,KAAKgI,OAAc,CACpB,IAAKhI,KAAK42B,SAAS5vB,OAAU,EAC3B,OAAGuI,KAAKtI,IAAIjH,KAAKgH,QAAUuI,KAAKtI,IAAIjH,KAAK42B,SAAS5vB,QACzC,OAEA,QAEJ,IAAKhH,KAAK42B,SAAS5vB,OAAU,EAElC,OAAKhH,KAAKgH,OAAUuI,KAAKtI,KAAKjH,KAAK42B,SAAS5vB,QACnC,QAEA,OAIb,OAAO,I,sBAIT,WACE,OAAOxD,aAAGxD,KAAK42B,SAAS5vB,QAAQM,GAAG,K,sBAIrC,WACE,OAAO9D,aAAGxD,KAAK42B,SAAS5vB,QAAQ8xB,e,oEAIlC,WAAsBtE,EAAOjnB,GAA7B,iBAAAtN,EAAA,0DACKsN,EADL,mBAEU3N,EAAU40B,GAAUA,EAAOL,eAAiBK,EAAOM,aAAeN,EAAOP,OAAOr0B,QAAU2N,EAAO3N,SACpG2N,EAHP,gCAIwBqR,yBAAehf,EAAQ2N,EAAO4F,KAAK5F,EAAOqO,UAAUhB,OAAM,SAAA9T,GAAC,OAAI5F,QAAQc,MAAM,sDAJrG,cAIYjB,EAJZ,yBAKaA,GALb,2C,mFAUA,WACE,GAAG0S,KAAWA,IAAQ2R,MACpB,GAAGplB,KAAKyF,aAAezF,KAAKyF,YAAYC,qBAAuB1F,KAAKuN,OAClE,MAAmB,OAAhBqtB,EAAKjL,OACC,UAAGiL,EAAKtwB,IAAI,OAAO,0BAAnB,cAAkDtK,KAAKyF,YAAYC,qBAAnE,aACHk1B,EAAKtwB,IAAI,OAAO,aADb,YAC6BswB,EAAKtwB,IAAI,OAAO,yCAD7C,aAC0FtK,KAAKyF,YAAYC,oBAD3G,cACoIk1B,EAAKtwB,IAAI,OAAO,wBADpJ,cACiLtK,KAAKK,SAAS2D,WAD/L,cAC+MhE,KAAKuN,OAAOgG,cAE3N,UAAGqnB,EAAKtwB,IAAI,OAAO,0BAAnB,cAAkDtK,KAAKyF,YAAYC,qBAAnE,YACJk1B,EAAKtwB,IAAI,OAAO,yCADZ,aACyDtK,KAAKyF,YAAYC,oBAD1E,cACmGk1B,EAAKtwB,IAAI,OAAO,wBADnH,cACgJtK,KAAKK,SAAS2D,WAD9J,cAC8KhE,KAAKuN,OAAOgG,aAD1L,YAC0MqnB,EAAKtwB,IAAI,OAAO,mBAKrO,GAAGtK,KAAKyF,aAAezF,KAAKyF,YAAYC,qBAAuB1F,KAAKuN,OAClE,MAAmB,OAAhBqtB,EAAKjL,OACC,UAAGiL,EAAKtwB,IAAI,OAAO,0BAAnB,cAAkDtK,KAAKyF,YAAYC,qBAAnE,YACJk1B,EAAKtwB,IAAI,OAAO,aADZ,YAC4BswB,EAAKtwB,IAAI,OAAO,yCAD5C,YACwFtK,KAAKyF,YAAYC,oBADzG,YACgI1F,KAAKuN,OAAOgG,aAD5I,KAGA,UAAGqnB,EAAKtwB,IAAI,OAAO,0BAAnB,cAAkDtK,KAAKyF,YAAYC,qBAAnE,YACJk1B,EAAKtwB,IAAI,OAAO,yCADZ,YACwDtK,KAAKyF,YAAYC,oBADzE,YACgG1F,KAAKuN,OAAOgG,aAD5G,YAC4HqnB,EAAKtwB,IAAI,OAAO,aAD5I,KAMb,MAAO,O,KCrbLkqB,EAAS,IAAIR,EACb6G,EAAU,IAAI/C,EAIlBztB,UAAQyR,IAAI,QAEdzR,UAAQyR,IAAI,QACZgf,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUxG,OAAQA,EAASqG,QAASA,EAASpnB,QAASA,IAASqgB,KAAMA,EAArE,SACE,cAAC,EAAD,UAINtlB,SAASysB,eAAe,U,gCC5B1B,0KACO,IAAMnoB,EAAc,WACzB,MAAO,CAAC,IAAK,IAAK,KAAM,KAAM,MAAO,MAAO,MAAO,UAGxChC,EAAuB,SAAClR,GACnC,IAoEMmB,EApEoB,CACxB,CACEiS,cAAe,CACb,iEAEFpT,QAAS,KAEX,CACEoT,cAAe,CACb,mCACA,oCACA,sCAEFpT,QAAS,MAEX,CACEoT,cAAe,CAAC,sCAChBpT,QAAS,OAEX,CACEoT,cAAe,CACb,oCACA,qCACA,yCACA,2CACA,+CACA,mDAEFpT,QAAS,OAEX,CACEoT,cAAe,CACb,iEAEFpT,QAAS,KAEX,CACEoT,cAAe,CACb,+DAEFpT,QAAS,MAEX,CACEoT,cAAe,CAEb,kDACA,kDACA,kDACA,kDACA,mDAEFpT,QAAS,MAEX,CACEoT,cAAe,CAAC,sCAChBpT,QAAS,OAEX,CACEoT,cAAe,CACb,iCACA,oCACA,0CACA,mDAEFpT,QAAS,UAIiB4G,QAAO,SAAClF,GAAD,OAAOA,EAAE1B,UAAaA,KAE3D,GAAImB,EAAIsM,OAAS,EACf,OAAOtM,EAAI,GAAGiS,cAEd,MAAM,IAAI5R,MAAJ,oDAAuDxB,KAIpDoR,EAA4B,WAavC,IAAIyD,EAAuB,CACzB,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SAEF,OAAO3B,IAAcrC,QAAO,SAACiE,EAAOpT,EAAGoP,GAErC,OADAgE,EAAMpT,GAAKmT,EAAqB/D,GACzBgE,IACN,KAKQ4d,EACX,qEAEWH,EACX,uD,8RCvGW7O,EAAmB,uCAAG,WACjC1jB,EACAY,EACAD,GAHiC,+BAAAN,EAAA,2DAKPmW,YAAsBxW,EAASY,KAAjDqV,EALyB,EAKzBA,eALyB,wBAQzB5J,EAAUF,YAAenM,EAASY,GAElC6K,EAASF,YAAcvL,EAASiW,EAAerV,GAVtB,SAYkB0C,QAAQwE,IAAI,CAC3D2D,EAAO6S,QAAQ1d,GACf6K,EAAO6S,QAAQ3d,GACf0L,EAAQivB,aAAa36B,KAfQ,0CAYxBsD,EAZwB,KAYbs3B,EAZa,KAYE3gB,EAZF,uBAkBxB,CACLL,cAAetW,EAAU7C,WACzBm6B,cAAeA,EAAcn6B,WAC7BwZ,OAAQA,EAAOxZ,WACf0nB,WAAY,MAtBiB,eAyBjCxnB,QAAQC,IAAI,oCAzBqB,kBA0B1B,IA1B0B,4CAAH,0DA0CnBuiB,EAAe,uCAAG,WAC7B9jB,EACAY,EACAD,EACA0F,GAJ6B,qBAAAhG,EAAA,2DAOHmW,YAAsBxW,EAASY,IAP5B,EAOrBqV,cAPqB,wBAUrB5J,EAAUF,YAAenM,EAASY,GAVb,kBAeRyL,EAAQiP,aAAa3a,EAAgB0F,GAf7B,OAenBvE,EAfmB,OAgBzBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAhBX,kDAkBzBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAlBJ,gCAqB3BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,4CArBJ,iCAuBtBjB,GAvBsB,0DAAH,4DAuCf+iB,EAAkB,uCAAG,WAChClkB,EACAY,EACAD,EACA0F,GAJgC,qBAAAhG,EAAA,2DAONmW,YAAsBxW,EAASY,IAPzB,EAOxBqV,cAPwB,wBAUxB5J,EAAUF,YAAenM,EAASY,GAVV,kBAeXyL,EAAQuP,gBAAgBjb,EAAgB0F,GAf7B,OAetBvE,EAfsB,OAgB5BX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAhBR,kDAkB5BX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAlBD,gCAqB9BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,4CArBD,iCAuBzBjB,GAvByB,0DAAH,4DAmClBmjB,EAAa,uCAAG,WAAOtkB,EAASY,EAAaD,GAA7B,mBAAAN,EAAA,+DACDmW,YAAsBxW,EAASY,GAAjDqV,EADmB,EACnBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAF1B,SAId6K,EAAO8S,WAAW5d,GAJJ,mFAAH,0DAmBb+jB,EAAS,uCAAG,WAAO1kB,EAASY,EAAaD,GAA7B,uBAAAN,EAAA,+DACGmW,YAAsBxW,EAASY,GAAjDqV,EADe,EACfA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAF9B,kBAOJ6K,EAAOqW,OAAOnhB,GAPV,OAOfmB,EAPe,OAQrBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GARf,gDAUrBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAVR,iCAYhBjB,GAZgB,yDAAH,0DAuBT2jB,EAAmB,uCAAG,WACjC9kB,EACAY,EACAD,GAHiC,qBAAAN,EAAA,+DAKPmW,YAAsBxW,EAASY,GAAjDqV,EALyB,EAKzBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GANpB,SAQX6K,EAAO6S,QAAQ3d,GARJ,cAQ3B2d,EAR2B,yBAS1BA,EAAQld,YATkB,2CAAH,2D,8RC1KnBwiB,EAAoB,uCAAG,WAClC5jB,EACAY,EACAD,GAHkC,+BAAAN,EAAA,2DAKRoW,YAAuBzW,EAASY,KAAlDqV,EAL0B,EAK1BA,eAL0B,wBAO1BtJ,EAAWF,YAAgBzM,EAASY,GACpC6K,EAASF,YAAcvL,EAASiW,EAAerV,GARrB,SASiB0C,QAAQwE,IAAI,CAC3D2D,EAAO6S,QAAQ1d,GACf6K,EAAO6S,QAAQ3d,GACfgM,EAAS2uB,aAAa36B,KAZQ,0CASzBsD,EATyB,KASds3B,EATc,KASC3gB,EATD,uBAezB,CACLL,cAAetW,EAAU7C,WACzBm6B,cAAeA,EAAcn6B,WAC7BwZ,OAAQA,EAAOxZ,WACf0nB,WAAY,MAnBkB,eAsBlCxnB,QAAQC,IAAI,qCAtBsB,kBAuB3B,IAvB2B,4CAAH,0DA0BpByiB,EAAgB,uCAAG,WAC9BhkB,EACAY,EACAD,EACA0F,GAJ8B,qBAAAhG,EAAA,2DAOJoW,YAAuBzW,EAASY,IAP5B,EAOtBqV,cAPsB,wBAStBtJ,EAAWF,YAAgBzM,EAASY,GATd,kBAYT+L,EAAS2O,aAAa3a,EAAgB0F,GAZ7B,OAYpBvE,EAZoB,OAa1BX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAbV,kDAe1BX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAfH,gCAkB5BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,6CAlBH,iCAoBvBjB,GApBuB,0DAAH,4DAuBhBijB,EAAmB,uCAAG,WACjCpkB,EACAY,EACAD,EACA0F,GAJiC,qBAAAhG,EAAA,2DAOPoW,YAAuBzW,EAASY,IAPzB,EAOzBqV,cAPyB,wBASzBtJ,EAAWF,YAAgBzM,EAASY,GATX,kBAYZ+L,EAASiP,gBAAgBjb,EAAgB0F,GAZ7B,OAYvBvE,EAZuB,OAa7BX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAbP,kDAe7BX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAfA,gCAkB/BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,6CAlBA,iCAoB1BjB,GApB0B,0DAAH,4DAuBnBqjB,EAAc,uCAAG,WAAOxkB,EAASY,EAAaD,GAA7B,mBAAAN,EAAA,+DACFoW,YAAuBzW,EAASY,GAAlDqV,EADoB,EACpBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAFzB,SAGf6K,EAAO8S,WAAW5d,GAHH,mFAAH,0DAMdikB,EAAU,uCAAG,WAAO5kB,EAASY,EAAaD,GAA7B,uBAAAN,EAAA,+DACEoW,YAAuBzW,EAASY,GAAlDqV,EADgB,EAChBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAF7B,kBAML6K,EAAOqW,OAAOnhB,GANT,OAMhBmB,EANgB,OAOtBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAPd,gDAStBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IATP,iCAWjBjB,GAXiB,yDAAH,0DAcV6jB,EAAoB,uCAAG,WAClChlB,EACAY,EACAD,GAHkC,qBAAAN,EAAA,+DAKRoW,YAAuBzW,EAASY,GAAlDqV,EAL0B,EAK1BA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GANnB,SAOZ6K,EAAO6S,QAAQ3d,GAPH,cAO5B2d,EAP4B,yBAQ3BA,EAAQld,YARmB,2CAAH,2D,sSC1EpBuiB,EAAmB,uCAAG,WACjC3jB,EACAY,EACAD,GAHiC,iCAAAN,EAAA,+DAKPqW,YAAsB1W,EAASY,GAAjDuV,EALyB,EAKzBA,cACF3J,EAAUF,YAAetM,EAASY,GAElCmL,EAASF,YAAc7L,EAASmW,EAAevV,GARpB,SAWgB0C,QAAQwE,IAAI,CAC3DiE,EAAOuS,QAAQ3d,GACfoL,EAAOyd,gBAbwB,0CAW1BX,EAX0B,KAWXF,EAXW,eAeLnc,EAAQ/G,iBAfH,wBAezBxB,EAfyB,EAezBA,UAfyB,kBAkB1B,CACLulB,YAAab,EAAkBvnB,WAC/BmZ,cAAetW,EAAU7C,WACzBwZ,OAAQiO,EAAcznB,WACtB0nB,YAAaH,EAAkBhR,GAAG,GAC9B/T,YAAG,GACHK,EAAUiK,IAAIya,IAChBvnB,WACFqZ,mBAAoBoO,EAAcznB,aA1BH,4CAAH,0DA2CnB2iB,EAAe,uCAAG,WAC7B/jB,EACAY,EACAD,EACA0F,GAJ6B,qBAAAhG,EAAA,2DAOHqW,YAAsB1W,EAASY,IAP5B,EAOrBqV,cAPqB,wBASrBzJ,EAAUF,YAAetM,EAASY,GATb,kBAYR4L,EAAQ8O,aAAa3a,EAAgB0F,GAZ7B,OAYnBvE,EAZmB,OAazBR,QAAQC,IAAIO,EAAZ,YAAuBA,IACvBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAdX,kDAgBzBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAhBJ,gCAmB3BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,4CAnBJ,iCAqBtBjB,GArBsB,0DAAH,4DAqCfgjB,EAAkB,uCAAG,WAChCnkB,EACAY,EACAD,EACA0F,GAJgC,qBAAAhG,EAAA,2DAONqW,YAAsB1W,EAASY,IAPzB,EAOxBqV,cAPwB,wBASxBzJ,EAAUF,YAAetM,EAASY,GATV,kBAWX4L,EAAQoP,gBAAgBjb,EAAgB0F,GAX7B,OAWtBvE,EAXsB,OAY5BX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GAZR,kDAc5BX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAdD,gCAiB9BjB,EAAM,CAAEoF,SAAS,EAAOnE,MAAO,4CAjBD,iCAmBzBjB,GAnByB,0DAAH,4DA+BlBojB,EAAa,uCAAG,WAAOvkB,EAASY,EAAaD,GAA7B,mBAAAN,EAAA,+DACDqW,YAAsB1W,EAASY,GAAjDqV,EADmB,EACnBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAF1B,SAId6K,EAAO8S,WAAW5d,GAJJ,mFAAH,0DAmBbgkB,EAAS,uCAAG,WAAO3kB,EAASY,EAAaD,GAA7B,uBAAAN,EAAA,+DACGqW,YAAsB1W,EAASY,GAAjDqV,EADe,EACfA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GAF9B,kBAOJ6K,EAAOqW,OAAOnhB,GAPV,OAOfmB,EAPe,OAQrBX,EAAM,CAAEoF,SAAS,EAAMC,YAAa1E,GARf,gDAUrBX,EAAM,CAAEoF,SAAS,EAAOnE,MAAM,EAAD,IAVR,iCAYhBjB,GAZgB,yDAAH,0DAuBT4jB,EAAmB,uCAAG,WACjC/kB,EACAY,EACAD,GAHiC,qBAAAN,EAAA,+DAKPqW,YAAsB1W,EAASY,GAAjDqV,EALyB,EAKzBA,cACFxK,EAASF,YAAcvL,EAASiW,EAAerV,GANpB,SAQX6K,EAAO6S,QAAQ3d,GARJ,cAQ3B2d,EAR2B,yBAS1BA,EAAQld,YATkB,2CAAH,2D,sGC7I1Bo6B,EAAgB,SAAC7tB,GAErBA,EAAM,YAAkBA,EAAM,QAAYF,OAC1CE,EAAM,YAAkBA,EAAM,QAAYF,QA8B/BL,EAAY,WACvB,OA5BoB,WACpB,IApCsBO,EAoChB4B,EAAM9E,UAAQC,MACd6a,EAAgC,WAAtB,YAAOkW,GAA0BA,EAAa9O,KAAKC,MAAM6O,GACzE,GAAI,CAAC,OAAQ,OAAOp6B,SAASkO,IAEvBgW,EAAQhW,GAAM,CAGhB,IAAMgH,EAAQgP,EAAQhW,GAAKgH,MAC3B,GAAIA,GAASkL,MAAMC,QAAQnL,GACzB,IAAK,IAAI7U,EAAI,EAAGA,EAAI6U,EAAM9I,OAAQ/L,IA7ClBiM,EA8CC4I,EAAM7U,GA7C7Bg6B,YACE,CACE,OACA,SACA,SACA,SACA,eACA,UACA,UACA,WAEF/tB,EACA,IAEFguB,YAAgBhuB,EAAM,QAAa,WACnCA,EAAM,QAAY0pB,SAAQ,SAACuE,GACzBF,YACE,CAAC,WAAY,eAAgB,UAC7BE,EACA,aAGJD,YAAgBhuB,EAAM,QAAa,WACnCA,EAAM,QAAY0pB,SAAQ,SAACuE,GACzBF,YAAuB,CAAC,WAAY,UAAWE,EAAM,aAsB/CJ,EAAcjlB,EAAM7U,IAMxB,OAFAg6B,YAAuB,CAAC,UAAWnW,EAAQhW,GAAM,UACjDmsB,YAAuB,CAAC,iBAAkBnW,EAAQhW,GAAM,iBACjDgW,EAAQhW,GAGnB,MAAM,IAAI/N,MAAJ,kDACuC+N,EADvC,KAEJgW,EAAQhW,IAKHssB,K,gCCnET,uMAIa5qB,EAAmB,SAACjR,GAC/B,IAAMyX,EAAWvE,cACb/R,EAAMnB,EAAUA,EAAQoB,WAAapB,EACzC,GAAIA,GAAWyX,EAASpW,SAASF,GAC/B,OAAOA,EAEP,MAAM,IAAIK,MAAJ,2BAA8BxB,KAI3B2iB,EAAmB,SAAC9a,GAC/B,GAAIA,GAA8B,kBAAZA,GAAwBA,EAAQmJ,WAAW,MAC/D,OAAOpO,IAAKC,MAAMqS,kBAAkBrN,GAEpC,MAAM,IAAIrG,MAAJ,2BAA8BqG,KAI3BuQ,EAAe,sCAAItX,EAAJ,yBAAIA,EAAJ,uBAC1BA,EAAKg7B,OAAM,SAACp6B,GAAD,OAAQkU,MAAMwG,WAAW1a,QAEzBg6B,EAAyB,SAACK,EAAS5f,EAAK6f,GACnD,IAAMnxB,EAAOD,OAAOC,KAAKsR,GACzB4f,EAAQ1E,SAAQ,SAACuE,GACf,IAAK/wB,EAAKxJ,SAASu6B,GACjB,MAAM,IAAIp6B,MAAJ,qCAC0Bo6B,EAD1B,gCACsDI,EADtD,iBAMCL,EAAkB,SAACxf,EAAK6f,GACnC,IAAKva,MAAMC,QAAQvF,GACjB,MAAM,IAAI3a,MAAJ,qCAC0Bw6B,EAD1B,kC,gCCrCV,kCACO,IAAMvxB,EAAW,WACtB,IAAIwxB,EAAW,MACf,MAAO,CACLvxB,IAAK,kBAAMuxB,GACX/f,IAAK,SAACnZ,GACJ,GAAc,QAAVA,GAA6B,SAAVA,GAA8B,eAAVA,EAGzC,MAAM,IAAIvB,MAAM,0CAFhBy6B,EAAWl5B,IANK,K","file":"static/js/main.1cbb62b0.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\r\n\r\nconst MAX_GAS_AMOUNT = 532731;\r\n\r\nexport class Contract {\r\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n    this.isProvider = isProvider;\r\n  }\r\n  async _init() {\r\n    if (!this.web3) {\r\n      if (this.isProvider) {\r\n        this.web3 = await web3Factory(this.chainId);\r\n      } else {\r\n        this.web3 = metaMaskWeb3();\r\n      }\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  setAccount(accountAddress) {\r\n    this.accountAddress = accountAddress;\r\n    return this;\r\n  }\r\n  setPool(poolAddress) {\r\n    this.poolAddress = poolAddress;\r\n    return this;\r\n  }\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while(retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args, accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n      //this.web3.eth.getGasPrice(),\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\nimport {\r\n  hasInvalidArgsValue,\r\n  getBTCUSDPrice,\r\n  getOracleInfo,\r\n  deriToNatural,\r\n  bg,\r\n} from '../utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    let gas = 0;\r\n    for (let i = 0; i < 20; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = 532731;\r\n    if (gas > 532731) gas = 532731;\r\n    return gas;\r\n  }\r\n\r\n  async _transactPool(method, args = [], accountAddress) {\r\n    await this._init()\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\r\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\r\n\r\n    // const [gas, gasPrice] = await Promise.all([\r\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\r\n    //   this.web3.eth.getGasPrice(),\r\n    // ]);\r\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\r\n    try {\r\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = await this.getParameters();\r\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (hasInvalidArgsValue(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (hasInvalidArgsValue(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    //await this.web3.eth.getAccounts(console.log)\r\n    //console.log('depositMargin');\r\n    let res;\r\n    try {\r\n      let tx = await this._transactPool(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { Contract } from './contract';\r\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\r\n/* eslint-enable */\r\n\r\nexport class BTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async isUnlocked(accountAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      this.poolAddress,\r\n    ]);\r\n    allowance = deriToNatural(allowance);\r\n    return allowance.gt(0);\r\n  }\r\n\r\n  async unlock(accountAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [this.poolAddress, MAX_VALUE],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balance(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balance(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balance(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { deriToNatural, bg } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { deriToNatural } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { getDBProviderUrlsConfig } from '../config/database';\r\nimport { getLatestRPCServer } from '../utils';\r\n\r\nexport class DatabaseBaseContract {\r\n  constructor(contractAddress, contractAbi) {\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n  _init() {\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\r\n    this.contract = new this.web3.eth.Contract(\r\n      this.contractAbi,\r\n      this.contractAddress\r\n    );\r\n  }\r\n\r\n  async updateProviderUrl() {\r\n    if (!this.providerUrl) {\r\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  async _call(method, args) {\r\n    let res\r\n    let retry = 3\r\n    while(retry > 0) {\r\n      try {\r\n        await this.updateProviderUrl();\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch (err) {\r\n        this.providerUrl = null\r\n        console.log(err.toString())\r\n      }\r\n      retry -= 1\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\r\n    }\r\n    return res\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base';\r\n\r\n/* eslint-disable */\r\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, DB_CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolDataBSC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishLine\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishRank\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolDataETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishLine\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishRank\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolDataHECO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishLine\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishRank\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct DeriDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setClaims\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setDeriClaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setDeriHarvested\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setPoolAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"setPoolBTokenSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setPoolFinishBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setPoolFinishLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setPoolFinishRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setPoolLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deadlines\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"vs\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"rs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"ss\",\"type\":\"bytes32[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"unsetClaims\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deriHarvested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deriClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabasePreminingContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getLiquidityInfo(chainId, poolAddress) {\r\n    let methodName = ''\r\n    if (chainId === '1') {\r\n      methodName = 'poolDataETH';\r\n    } else if (chainId === '56') {\r\n      methodName = 'poolDataBSC';\r\n    } else if (chainId === '128') {\r\n      methodName = 'poolDataHECO';\r\n    }\r\n    if (methodName !== '') {\r\n      return await this._call(methodName, [poolAddress])\r\n    }\r\n  }\r\n}","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI['abi'],\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async isUnlocked(accountAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      this.poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [this.poolAddress, MAX_VALUE],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balance(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balance(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balance(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends Contract {\r\n  constructor(chainId, contractAddress, useProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { PerpetualPool } from '../contract/perpetual_pool';\r\nimport { BTokenContract } from '../contract/bToken';\r\nimport { PTokenContract } from '../contract/pToken';\r\nimport { LTokenContract } from '../contract/lToken';\r\nimport { DatabaseContract } from '../contract/database';\r\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\r\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\r\nimport { DatabasePreminingContract } from '../contract/database_premining';\r\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\r\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\r\n\r\nimport { DeriEnv } from '../config/env';\r\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\r\nimport { SlpPool } from '../contract/slp_pool';\r\nimport { ClpPool } from '../contract/clp_pool';\r\nimport { Clp2Pool } from '../contract/clp2_pool';\r\nimport { DeriContract } from '../contract/deri';\r\nimport { WormholeContract } from '../contract/wormhole';\r\n//import { getLpContractAddress } from '../utils';\r\n// import { getPoolBaseSymbolList } from '../utils'\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databasePreminingFactory = (function () {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address = '0x5BFf39dD156959B7852370F20eE30A24d416281d'\r\n    if (Object.keys(databaseInstanceMap).includes(address)) {\r\n      return databaseInstanceMap[address];\r\n    }\r\n    const database = new DatabasePreminingContract(address);\r\n    databaseInstanceMap[address] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const bTokenFactory = (function () {\r\n  const bTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\r\n      return bTokenInstanceMap[key];\r\n    }\r\n    const bToken = new BTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new BTokenContract\")\r\n    bTokenInstanceMap[key] = bToken;\r\n    return bToken;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new LTokenContract\")\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\nexport const miningVaultPoolFactory = (function () {\r\n  const mVaultInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\r\n      return mVaultInstanceMap[key];\r\n    }\r\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\r\n    // console.log(\"new MiningValutPool\")\r\n    mVaultInstanceMap[key] = mVault;\r\n    return mVault;\r\n  };\r\n})();\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();\r\n\r\nexport const deriFactory = (function () {\r\n  const deriInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(deriInstanceMap).includes(key)) {\r\n      return deriInstanceMap[key];\r\n    }\r\n    const deri = new DeriContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    deriInstanceMap[key] = deri;\r\n    return deri;\r\n  };\r\n})();\r\n\r\nexport const wormholeFactory = (function () {\r\n  const wormholeInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\r\n      return wormholeInstanceMap[key];\r\n    }\r\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\r\n    wormholeInstanceMap[key] = wormhole;\r\n    return wormhole;\r\n  };\r\n})();\r\n\r\nexport const miningVaultRouterFactory = (function () {\r\n  const mVaultInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\r\n      return mVaultInstanceMap[key];\r\n    }\r\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\r\n    mVaultInstanceMap[key] = mVault;\r\n    return mVault;\r\n  };\r\n})();\r\n","import { getConfig } from './config';\r\n\r\nexport const getOracleConfigList = () => {\r\n  const config = getConfig()\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (chainId, symbol) => {\r\n  const filteredByChainId = getOracleConfigList().filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  throw new Error(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n","import Web3 from 'web3';\r\nimport { getChainProviderUrl } from '../utils';\r\n\r\nexport const metaMaskWeb3 = (function () {\r\n  let web3Instance = null;\r\n  return () => {\r\n    if (web3Instance !== null) {\r\n      return web3Instance;\r\n    }\r\n    let web3;\r\n    if (typeof window.ethereum !== undefined) {\r\n      web3 = new Web3(window.ethereum);\r\n    } else {\r\n      // console.log(\"Please install MetaMask first\")\r\n      throw new Error('Please install MetaMask first');\r\n    }\r\n    web3Instance = web3;\r\n    return web3;\r\n  };\r\n})();\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return async(chainId) => {\r\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n      return web3InstanceMap[chainId];\r\n    }\r\n    if (['1', '3', '42'].includes(chainId)) {\r\n      console.log(\r\n        `==== web3Factory(${chainId}), please caution the access limits ===`\r\n      );\r\n    }\r\n    const providerUrl = await getChainProviderUrl(chainId);\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\r\n    web3InstanceMap[chainId] = web3;\r\n    return web3;\r\n  };\r\n})();\r\n","import { getConfig } from './config';\r\n\r\nexport const getBrokerConfigList = () => {\r\n  const config = getConfig()\r\n  return config.brokerManager\r\n};\r\n\r\nexport const getBrokerConfig = (chainId) => {\r\n  const filteredByChainId = getBrokerConfigList().filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","export const getDBProviderUrlsConfig = () => [\r\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const fetchWithTimeout = (url, options = {}) => {\r\n  const { timeout = 1200, ...fetchOptions } = options\r\n\r\n  return Promise.race([\r\n    fetch(url, fetchOptions),\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // reject(\r\n        //   new Error(\r\n        //     `Request for ${url} timed out after ${timeout} ms`,\r\n        //   ),\r\n        // )\r\n        resolve({timeout:true})\r\n      }, timeout)\r\n    }),\r\n  ])\r\n}\r\n\r\nexport const checkHttpServerIsAlive = async (url) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    if (!err.toString().includes('FetchError')) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getAliveHttpServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n    //console.log(url)\r\n    if (await checkHttpServerIsAlive(url)) {\r\n      return url;\r\n    }\r\n  }\r\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\r\n};\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","import Web3 from 'web3';\r\nimport {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  BToken,\r\n  LToken,\r\n  PToken,\r\n  WooOracle,\r\n  ChainlinkOracle,\r\n  WrappedOracle,\r\n  BrokerManager,\r\n  PTokenAirdrop,\r\n} from './contract';\r\nimport { getChainProviderUrl } from './utils/chain';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const metaMaskWeb3 = (function () {\r\n  let web3Instance = null;\r\n  return () => {\r\n    if (web3Instance !== null) {\r\n      return web3Instance;\r\n    }\r\n    if (typeof window.ethereum !== undefined) {\r\n      web3Instance = new Web3(window.ethereum);\r\n      return web3Instance;\r\n    } else {\r\n      // console.log(\"Please install MetaMask first\")\r\n      throw new Error('Please install MetaMask first');\r\n    }\r\n  };\r\n})();\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return {\r\n    async get(chainId) {\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      if (['1', '3', '42'].includes(chainId)) {\r\n        console.log(\r\n          `==== web3Factory(${chainId}), please caution the access limits ===`\r\n        );\r\n      }\r\n      const providerUrl = await getChainProviderUrl(chainId);\r\n      web3InstanceMap[chainId] = new Web3(\r\n        new Web3.providers.HttpProvider(providerUrl)\r\n      );\r\n      return web3InstanceMap[chainId];\r\n    },\r\n  };\r\n})();\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const bTokenFactory = factory(BToken)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal) => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (['80001'].includes(chainId)) {\r\n        instanceMap[key] = new ChainlinkOracle(\r\n          chainId,\r\n          address,\r\n          symbol,\r\n          decimal\r\n        );\r\n      } else if (['137'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)","export const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\nexport const ChainProviderUrls = [\r\n  {\r\n    provider_urls: [\r\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '1',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://bsc-dataseed.binance.org',\r\n      'https://bsc-dataseed1.defibit.io/',\r\n      'https://bsc-dataseed1.ninicoin.io/',\r\n    ],\r\n    chainId: '56',\r\n  },\r\n  {\r\n    provider_urls: ['https://http-mainnet.hecochain.com'],\r\n    chainId: '128',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '3',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '42',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n    ],\r\n    chainId: '97',\r\n  },\r\n  {\r\n    provider_urls: ['https://http-testnet.hecochain.com'],\r\n    chainId: '256',\r\n  },\r\n];\r\n\r\nexport const getChainProviderUrlsConfig = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n  ];\r\n  \r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n","import { getChainIds } from './chain';\r\n\r\n/** @module config */\r\n\r\n/**\r\n * Get the contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].pToken - position token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].symbol - symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getContractAddressConfig = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    // console.log('!!! production !!!')\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n/**\r\n * Get the Slp contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].pToken - position token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].symbol - symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getSlpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n      },\r\n    ];\r\n  }\r\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n  return [];\r\n};\r\n\r\n/**\r\n * Get the Clp contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getClpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getLpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterContractAddress = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Get the Deri contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].Deri - deri address\r\n * @returns {string} response[].Wormhole - wormhole token address\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getDeriContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingContractConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  const chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return 'https://testnetapi.deri.finance';\r\n    //return 'http://localhost:8082';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\nimport {\r\n  DeriEnv,\r\n  getChainProviderUrlsConfig,\r\n  getContractAddressConfig,\r\n  getSlpContractAddressConfig,\r\n  getClpContractAddressConfig,\r\n  getClp2ContractAddressConfig,\r\n  getLpContractAddressConfig,\r\n  getDailyBlockNumberConfig,\r\n  getDeriContractAddressConfig,\r\n  getChainIds,\r\n} from './config';\r\n\r\n/** @module utils */\r\n\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport { BigNumber };\r\n\r\n/**\r\n * Change the value to BigNumber type\r\n * @func\r\n * @param {string|number} value - the number that need to changed to BigNumber type\r\n * @param {string} base - base of the number\r\n * @returns {BigNumber}\r\n */\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\n/**\r\n * Get the max value\r\n * @func\r\n * @param {BigNumber} value1\r\n * @param {BigNumber} value2\r\n * @returns {BigNumber}\r\n */\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\n/**\r\n * Get the min value\r\n * @func\r\n * @param {BigNumber} value1\r\n * @param {BigNumber} value2\r\n * @returns {BigNumber}\r\n */\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\n/**\r\n * Convert the number to a fixed precision\r\n * @func\r\n * @param {string} value - the number that need to convert\r\n * @param {number} num - the number for method toFixed()\r\n * @returns {string}\r\n */\r\nexport const toNatural = (value, num = 0) =>\r\n  BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\nexport const hexToNaturalWithPercentage = (value) =>\r\n  `${bg(hexToNumberString(value), -18)\r\n    .sd(4)\r\n    .times(100)\r\n    .toFixed(4)\r\n    .toString()}%`;\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const deriToNaturalWithPercentage = (value) =>\r\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const hasInvalidArgsValue = (...args) =>\r\n  args.some(\r\n    (i) =>\r\n      // console.log(bg(i))\r\n      isNaN(i.toString()) || i.toString() === '0'\r\n  );\r\n\r\n// language\r\nexport const isObject = (obj) => typeof obj === 'object';\r\n\r\n//const np = () => {}\r\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// http\r\nexport const checkHttpServerIsAlive = async (url) => {\r\n  try {\r\n    //const response = await fetch(url);\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    //console.log(err);\r\n  }\r\n  return false;\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getAliveHttpServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n    if (await checkHttpServerIsAlive(url)) {\r\n      //console.log(url)\r\n      return url;\r\n    }\r\n  }\r\n  throw new Error('No alive http server in urls', urls);\r\n};\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  //console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index].url\r\n  //console.log(res)\r\n  if (res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\r\n  }\r\n};\r\n\r\n// ethereum chain\r\nexport const MAX_VALUE =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};\r\n\r\nexport const getWalletBalanceUnit = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let index;\r\n  const unitNetworkIdsMap = {\r\n    ETH: ['1', '3', '42'],\r\n    BNB: ['56', '97'],\r\n    HT: ['128', '256'],\r\n  };\r\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\r\n  for (let i = 0; i < networkIdsArray.length; i++) {\r\n    if (networkIdsArray[i].includes(chainId)) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  if (index !== undefined) {\r\n    return Object.keys(unitNetworkIdsMap)[index];\r\n  }\r\n  if (chainId === '') {\r\n    return '';\r\n  }\r\n  throw new Error('Invalid Network:', chainId);\r\n};\r\n\r\nexport const getPoolBaseSymbolList = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let result = [];\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const { bTokenSymbol, symbol } = pools[i];\r\n    if (bTokenSymbol && symbol) {\r\n      result.push(`${symbol}/${bTokenSymbol}`);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getPoolBaseTokenAddressObject = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let result = {};\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const { bTokenSymbol, symbol, pool } = pools[i];\r\n    const key = `${symbol}/${bTokenSymbol}`;\r\n    if (bTokenSymbol && symbol) {\r\n      result[key] = pool;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\r\n//   if (pool.length > 0) {\r\n//     return [\r\n//       pool[0].pool,\r\n//       pool[0].bToken,\r\n//       pool[0].pToken,\r\n//       pool[0].lToken,\r\n//       pool[0].dToken,\r\n//       pool[0].MiningVault,\r\n//       pool[0].initialBlock,\r\n//     ];\r\n//   }\r\n//   console.log(\r\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\r\n//   );\r\n//   return [];\r\n// };\r\n\r\n// get config by poolAddress\r\nexport const getPoolContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  }\r\n  // console.log(\r\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  // );\r\n  return [];\r\n};\r\n\r\nexport const getMiningVaultContractAddress = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\n// export const getMiningVaultRouterContractAddress = (chainId) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   if (pools.length > 0) {\r\n//     if (pools[0].MiningVaultRouter) {\r\n//       return pools[0].MiningVaultRouter;\r\n//     }\r\n//   }\r\n// };\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  }\r\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\r\n};\r\n\r\nexport const getSlpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n    };\r\n  }\r\n  console.log(\r\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n    };\r\n  }\r\n  console.log(\r\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getClpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n    };\r\n  }\r\n  console.log(\r\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getLpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriContractAddress = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getOracleUrl = (chainId, poolAddress) => {\r\n  const env = DeriEnv.get()\r\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\r\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\r\n    }\r\n    return 'https://oracle4.deri.finance/price';\r\n  } else {\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\r\n    }\r\n    // for test\r\n    return 'https://oracle2.deri.finance/price';\r\n  }\r\n};\r\n\r\nexport const getOracleInfo = async (chainId, poolAddress) => {\r\n  let url = getOracleUrl(chainId, poolAddress);\r\n  //console.log('oracle url', url);\r\n  let retry = 2;\r\n  //let timeout = 1000;\r\n  let res;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    //if (res && !res.timeout) {\r\n    if (res.ok) {\r\n      break;\r\n    }\r\n    //console.log('get oracle info timeout')\r\n    retry -= 1;\r\n    //timeout += 800;\r\n  }\r\n  if (retry === 0 && !res) {\r\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\r\n  const responseJson = await getOracleInfo(chainId, poolAddress);\r\n  let price = responseJson.price;\r\n  if (!price) {\r\n    price = '0';\r\n  }\r\n  return deriToNatural(responseJson.price).toString();\r\n};\r\nexport const getOraclePrice = getBTCUSDPrice;\r\n\r\nexport const getChainProviderUrl = async(chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrlsConfig(chainId)\r\n  if (urls.length > 0) {\r\n    return await getLatestRPCServer(urls)\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const format = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`)\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`)\r\n  }\r\n};","import { bg, max } from '../utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};","import { lTokenFactory, perpetualPoolFactory } from '../factory'\r\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../config'\r\nimport { bg, deriToNatural } from '../utils'\r\nimport { getNetworkName } from '../../utils'\r\nimport { calculateMaxRemovableLiquidity } from '../calculation'\r\nimport { databaseFactory } from '../../factory/contracts';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ])\r\n    const { minPoolMarginRatio } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\r\n    }, bg(0))\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n    }, bg(0))\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl)\r\n      } else {\r\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n      }\r\n    }, bg(0))\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\r\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\r\n    //console.log(\"approximatePnl\", approximatePnl.toString())\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString()\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList } from '../config'\r\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../factory'\r\nimport { getOracleInfo } from '../utils'\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\r\n   let res\r\n   if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err};\r\n    }\r\n   } else {\r\n      res = { success: false, error: validation.error};\r\n   }\r\n   return res\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum=false,\r\n) => {\r\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n     poolAddress,\r\n   );\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n   const lToken = lTokenFactory(chainId, lTokenAddress);\r\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\r\n   const { liquidity:userLiquidity } = lTokenAsset\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   promises = []\r\n   for (let i=0; i<symbolIdList.length; i++) {\r\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n   }\r\n   const symbols = await Promise.all(promises)\r\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\r\n   let res\r\n   if (validation.success) {\r\n     try {\r\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\r\n       res = { success: true, transaction: tx };\r\n     } catch (err) {\r\n       res = { success: false, error: err};\r\n     }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\r\n   let res\r\n   if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async(s) => {\r\n        return await getOracleInfo(poolAddress, s)\r\n      })\r\n      const prices = await Promise.all(promises)\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n      })\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err};\r\n    }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n\r\n   const lToken = lTokenFactory(chainId, lTokenAddress);\r\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\r\n   const { liquidity:userLiquidity } = lTokenAsset\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   promises = []\r\n\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   for (let i=0; i<symbolIdList.length; i++) {\r\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n   }\r\n   const symbols = await Promise.all(promises)\r\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\r\n   let res\r\n   if (validation.success) {\r\n     try {\r\n       promises = symbolIdList.map(async(s) => {\r\n         return await getOracleInfo(poolAddress, s)\r\n       })\r\n       const prices = await Promise.all(promises)\r\n       const priceInfos = prices.map((p, index) => {\r\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n       })\r\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\r\n       res = { success: true, transaction: tx };\r\n     } catch (err) {\r\n       res = { success: false, error: err};\r\n     }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../factory';\r\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../config'\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { getOraclePrice, bg, min, max } from '../utils'\r\nimport { fundingRateCache, priceCache } from '../api/api_globals';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol, bTokenSymbol } = getPoolConfig2(poolAddress, bTokenId, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bSymbol: bTokens.map((b) => b.bTokenSymbol).join(','),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = await bTokenFactory(chainId, bTokenAddress)\r\n    return bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import { deriToNatural } from '../utils';\r\nimport { perpetualPoolFactory } from '../factory';\r\nimport { getPoolConfig2, getPoolSymbolIdList} from '../config'\r\n\r\nimport { getRestServerConfig, DeriEnv } from '../../config';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { isOrderValid } from '../calculation';\r\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolBTokenIdList } from '../config'\r\nimport {\r\n  bTokenFactory,\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getOracleInfo, bg } from '../utils';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const pToken = pTokenFactory(chainId, pTokenAddress);\r\n   const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n     perpetualPool.getParameters(),\r\n     pToken.getPositions(accountAddress),\r\n     //pToken.getMargin(accountAddress, symbolId),\r\n   ]);\r\n\r\n   //const { multiplier } = symbolInfo;\r\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\r\n\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const margins = await pToken.getMargins(accountAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, i, index) => {\r\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let marginHeld = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\r\n      } else {\r\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n    //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n   const orderValidation = isOrderValid(\r\n     //price,\r\n     margin,\r\n     marginHeld,\r\n     liquidity,\r\n     liquidityUsed,\r\n     //multiplier,\r\n     //minPoolMarginRatio,\r\n     //bg(newVolume),\r\n   )\r\n   let res;\r\n   if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n   } else {\r\n     res = { success: false, error: orderValidation.error};\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const pToken = pTokenFactory(chainId, pTokenAddress)\r\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\r\n   const newVolume = volume.negated()\r\n   let res;\r\n   if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const promises = symbolIdList.map(async(s) => {\r\n       return await getOracleInfo(poolAddress, s)\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const promises = symbolIdList.map(async(s) => {\r\n       return await getOracleInfo(poolAddress, s)\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const pToken = pTokenFactory(chainId, pTokenAddress);\r\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n   const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n     perpetualPool.getParameters(),\r\n     pToken.getPositions(accountAddress),\r\n     //pToken.getMargin(accountAddress, symbolId),\r\n   ]);\r\n\r\n   //const { multiplier } = symbolInfo;\r\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\r\n\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const margins = await pToken.getMargins(accountAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, i, index) => {\r\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    //console.log('liquidity', liquidity.toString())\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let marginHeld = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\r\n      } else {\r\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n    //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n    // console.log('pnl', pnl.toString())\r\n\r\n   const orderValidation = isOrderValid(\r\n     //price,\r\n     margin,\r\n     marginHeld,\r\n     liquidity,\r\n     liquidityUsed,\r\n     //multiplier,\r\n     //minPoolMarginRatio,\r\n     //bg(newVolume),\r\n   )\r\n   let res;\r\n   if (orderValidation.success) {\r\n    try {\r\n     promises = symbolIdList.map(async(s) => {\r\n       return await getOracleInfo(poolAddress, s)\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n   } else {\r\n     res = { success: false, error: orderValidation.error};\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const pToken = pTokenFactory(chainId, pTokenAddress)\r\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\r\n   const newVolume = volume.negated()\r\n   let res;\r\n   if (!volume.eq(0)) {\r\n    try {\r\n     const promises = symbolIdList.map(async(s) => {\r\n       return await getOracleInfo(poolAddress, s)\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res\r\n}","import { brokerManagerFactory } from \"../factory\"\r\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { getBrokerConfig } from \"../config\"\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig(chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}","export {\r\n  DeriEnv,\r\n  //getContractAddressConfig,\r\n  getLpContractAddressConfig,\r\n  getSlpContractAddressConfig,\r\n  getPreminingContractConfig,\r\n} from './config';\r\nexport * from './utils';\r\nexport * from './calculation';\r\n\r\nexport * from './api/apiGlobals';\r\nexport * from './api/factoryApi';\r\nexport * from './api/walletApi';\r\nexport {\r\n  // isUnlocked,\r\n  // getEstimatedMargin,\r\n  // getEstimatedFee,\r\n  // getEstimatedFundingRate,\r\n  // getEstimatedLiquidityUsed,\r\n  isDeriUnlocked,\r\n  getUserWormholeSignature,\r\n  // getFundingRate,\r\n  //getPositionInfo,\r\n  getDeriBalance,\r\n} from './api/contractQueryApi';\r\nexport {\r\n  //unlock,\r\n  //depositMargin,\r\n  //withdrawMargin,\r\n  //addLiquidity,\r\n  //removeLiquidity,\r\n  //tradeWithMargin,\r\n  //closePosition,\r\n  mint,\r\n  mintDToken,\r\n  freeze,\r\n  mintDeri,\r\n  unlockDeri,\r\n  mintAirdrop,\r\n} from './api/contractTransactionApi';\r\nexport {\r\n  getUserInfo,\r\n  getUserInfoHarvest,\r\n  getUserInfoTotal,\r\n  getUserInfoAll,\r\n  //getPoolInfoApy,\r\n  getLpPoolInfoApy,\r\n  getUserInfoInPool,\r\n  getUserInfoAllForAirDrop,\r\n} from './api/databaseApi';\r\n\r\n// export * from './api/slpPoolApi';\r\n// export * from './api/clpPoolApi';\r\n\r\n// export * from './api/tradeHistoryApi';\r\nexport {\r\n//getSpecification2 as getSpecification,\r\n// getPositionInfo2 as getPositionInfo,\r\n//getLiquidityInfo2 as getLiquidityInfo,\r\n//getWalletBalance2 as getWalletBalance,\r\n//getFundingRate2 as getFundingRate,\r\n//getLiquidityUsed2 as getLiquidityUsed,\r\ngetFundingRateCache2 as getFundingRateCache,\r\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\r\ngetSlpWalletBalance2 as getSlpWalletBalance,\r\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\r\ngetClpWalletBalance2 as getClpWalletBalance,\r\n//getDeriBalance2 as getDeriBalance,\r\n//getTradeHistory2 as getTradeHistory,\r\nfetchRestApi,\r\n} from './api/restApi';\r\n\r\n// export {\r\n  //tradeWithMargin2 as tradeWithMargin,\r\n  //closePosition2 as closePosition,\r\n  //depositMargin2 as depositMargin,\r\n  //withdrawMargin2 as withdrawMargin,\r\n  //addLiquidity2 as addLiquidity,\r\n  //removeLiquidity2 as removeLiquidity,\r\n// } from './api/contractTransactionApiV2'\r\n\r\nexport * from './api/lpPoolApi';\r\n\r\nexport * from './api_wrapper';\r\n\r\nexport {\r\n  getPoolConfigList,\r\n  getFilteredPoolConfigList,\r\n  getPoolBTokensBySymbolId,\r\n  setBroker,\r\n  airdropPToken,\r\n  isUserPTokenExist,\r\n  getAirdropPTokenWhitelistCount,\r\n} from './v2';\r\n","import Web3 from 'web3';\r\nimport { metaMaskWeb3 } from '../factory/web3';\r\nimport { hexToNumber } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window.ethereum !== undefined) {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\n/**\r\n * Get balance of the connected account\r\n * @async\r\n * @method\r\n * @param {string} chainId - Id of the chain\r\n * @param {string} accountAddress - Address of the connected account\r\n * @returns {string} Account balance\r\n */\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  const web3 = metaMaskWeb3();\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  const res = Web3.utils.fromWei(balance);\r\n  return res;\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n  unlockSlp,\r\n  // addSlpLiquidity,\r\n  // removeSlpLiquidity,\r\n} from './slpPoolApi';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n  unlockClp2,\r\n  // addSlpLiquidity,\r\n  // removeSlpLiquidity,\r\n} from './clp2PoolApi';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n  unlockClp,\r\n  // addClpLiquidity,\r\n  // removeClpLiquidity,\r\n} from './clpPoolApi';\r\n\r\nimport {\r\n  addSlpLiquidity2 as addSlpLiquidity,\r\n  removeSlpLiquidity2 as removeSlpLiquidity,\r\n  addClpLiquidity2 as addClpLiquidity,\r\n  removeClpLiquidity2 as removeClpLiquidity,\r\n  addClp2Liquidity2 as addClp2Liquidity,\r\n  removeClp2Liquidity2 as removeClp2Liquidity,\r\n} from './contractTransactionApiV2'\r\nimport { getLpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  load(version){\r\n    const current = version && version.current;\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(version){\r\n      configs = configs.filter(c => c.version === version.current)\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","const { getContractAddressConfig:getContractAddressConfig2} = require(\"../config\");\r\nconst { getPoolConfigList:getPoolConfigListV2} = require(\"../v2/config\")\r\n\r\nexport const getContractAddressConfig = (env = 'dev', version) => {\r\n  if (!version || version === '1' || version === 'v1') {\r\n    return getContractAddressConfig2(env)\r\n  } else if (version === '2' || version === 'v2') {\r\n    return getPoolConfigListV2(env).concat(getContractAddressConfig2(env))\r\n  } else {\r\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\r\n  }\r\n}","import { getLiquidityInfo2 } from '../api/restApi';\r\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\r\nimport { \r\n  getLiquidityInfo as getLiquidityInfoV2,\r\n  getPoolLiquidity as getPoolLiquidityV2,\r\n  getPoolInfoApy as getPoolInfoApyV2,\r\n } from '../v2';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\r\nimport {\r\n  addLiquidity as addLiquidityV2,\r\n  removeLiquidity as removeLiquidityV2\r\n  // addLiquidityWithPrices as addLiquidityV2,\r\n  // removeLiquidityWithPrices as removeLiquidityV2,\r\n} from '../v2';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getPositionInfo as getPositionInfo2,\r\n  isUnlocked as isUnlocked2,\r\n  isDeriUnlocked,\r\n  getEstimatedMargin as getEstimatedMargin2,\r\n  getEstimatedFee as getEstimatedFee2,\r\n  getEstimatedFundingRate as getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\r\n  getWalletBalance as getWalletBalance2,\r\n} from '../api/contractQueryApi'\r\n\r\nimport {\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../api/restApi'\r\n//import { bTokenFactory } from '../factory/contracts'\r\n\r\nimport {\r\n  getPositionInfo as getPositionInfoV2,\r\n  isUnlocked as isUnlockedV2,\r\n  getEstimatedMargin as getEstimatedMarginV2,\r\n  getEstimatedFee as getEstimatedFeeV2,\r\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\r\n  getSpecification as getSpecificationV2,\r\n  getWalletBalance as getWalletBalanceV2,\r\n  getFundingRate as getFundingRateV2,\r\n  getLiquidityUsed as getLiquidityUsedV2,\r\n  getFundingRateCache as getFundingRateCacheV2,\r\n} from '../v2'\r\n\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n  symbolId,\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress)\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, bTokenId, symbolId)\r\n  }\r\n}\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress)\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume)\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\r\n  } else {\r\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\r\n  }\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress)\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\r\n  } else {\r\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress)\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress)\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\r\nimport {\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../api/contractTransactionApiV2';\r\nimport {\r\n  unlock as unlockV2,\r\n  tradeWithMargin as tradeWithMarginV2,\r\n  closePosition as closePositionV2,\r\n  depositMargin as depositMarginV2,\r\n  withdrawMargin as withdrawMarginV2,\r\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\r\n  // depositMarginWithPrices as depositMarginV2,\r\n  // withdrawMarginWithPrices as withdrawMarginV2,\r\n  // closePositionWithPrices as closePositionV2,\r\n} from '../v2';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","\r\nimport {getTradeHistory2} from '../api/restApi';\r\nimport { \r\n  getTradeHistory as getTradeHistoryV2\r\n } from '../v2';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n) => {\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n}","import { getOracleConfig } from '../config/oracle';\r\nimport { getPoolConfig2 } from '../config/pool';\r\nimport { oracleFactory } from '../factory';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../../config';\r\n\r\nexport const getOracleUrl = (poolAddress, symbolId) => {\r\n  const env = DeriEnv.get();\r\n  const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\r\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol}`;\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\r\n    }\r\n    return 'https://oracle4.deri.finance/price';\r\n  } else {\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\r\n    }\r\n    // for test\r\n    return 'https://oracle4.deri.finance/price';\r\n  }\r\n};\r\n\r\nexport const getOracleInfo = async (poolAddress, symbolId) => {\r\n  let url = getOracleUrl(poolAddress, symbolId);\r\n  //console.log('oracle url', url);\r\n  let retry = 2;\r\n  let res;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      break;\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0 && !res) {\r\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\n// export const getOraclePrice = async (poolAddress, symbolId) => {\r\n//   const responseJson = await getOracleInfo(poolAddress, symbolId);\r\n//   let price = responseJson.price;\r\n//   if (!price) {\r\n//     price = '0';\r\n//   }\r\n//   return deriToNatural(responseJson.price).toString();\r\n// };\r\n\r\nexport const getOraclePrice = async (chainId, symbol) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const config = getOracleConfig(chainId, symbol);\r\n  if (config && config.address) {\r\n    if (!config.decimal) {\r\n      throw new Error('getOraclePrice: decimal is empty', config.decimal);\r\n    }\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  }\r\n};\r\n","import { bg, getDailyBlockNumber } from '../utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = tradersNetVolume.times(price).times(multiplier);\r\n  const removable = liquidity\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = volume\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = liquidity\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (margin.plus(amount).gte(minMargin)) {\r\n    if (\r\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory/contracts';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\r\nimport {\r\n  getPoolContractAddress,\r\n  getMiningVaultContractAddress,\r\n  getBTCUSDPrice,\r\n  bg,\r\n  naturalToDeri,\r\n  BigNumber,\r\n  format,\r\n  getDeriContractAddress,\r\n} from '../utils';\r\nimport {\r\n  getMiningVaultRouterContractAddress\r\n} from '../config'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transactPool(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriContractAddress(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n","import { databaseFactory, databaseAirdropFactory, databasePreminingFactory } from '../factory/contracts';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  getPoolContractAddress,\r\n} from '../utils';\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const userInfo = await getUserInfo(userAddress);\r\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\r\n  const userInfoTotal = await getUserInfoTotal(userAddress);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const [poolAddress] = getPoolContractAddress(chainId, bSymbol);\r\n  //console.log('getPoolInfoApy', chainId, poolAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getPreminingPoolInfo = async(chainId, poolAddress) => {\r\n  const preminingDatabase = databasePreminingFactory()\r\n  return await preminingDatabase.getLiquidityInfo(chainId, poolAddress)\r\n}","import {\r\n  getPoolContractAddress,\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../utils';\r\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getRestServerConfig, DeriEnv } from '../config';\r\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './tradeHistoryApi';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url, opts) => {\r\n  const resp = await fetch(url, opts);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n} from './contractTransactionApi';\r\nimport {\r\n  addSlpLiquidity,\r\n  removeSlpLiquidity,\r\n} from './slpPoolApi'\r\nimport {\r\n  addClpLiquidity,\r\n  removeClpLiquidity,\r\n} from './clpPoolApi'\r\nimport {\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2PoolApi'\r\nimport { wsInstance } from './apiGlobals'\r\nimport { getRestServerConfig, DeriEnv } from '../config'\r\n\r\nconst wsOnPromise = (ws, event) => {\r\n  return new Promise((resolve) => {\r\n    ws.on(event, function(data){\r\n      resolve(JSON.parse(data))\r\n    })\r\n  })\r\n}\r\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\r\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\r\n  await ws.send(methodCall)\r\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\r\n  //console.log('res', res)\r\n  return res\r\n}\r\n\r\nexport const tradeWithMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const closePosition2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const depositMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const withdrawMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\nexport const addClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};","import { perpetualPoolFactory } from '../factory/contracts';\r\nimport { getBTCUSDPrice } from '../utils';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(chainId, poolAddress) {\r\n      try {\r\n        const res = await getBTCUSDPrice(chainId, poolAddress);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(chainId, poolAddress) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(chainId, poolAddress);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n}\r\nexport default new Version()","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  return version.current === 'v2' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\n","import {\r\n  bTokenFactory,\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory/contracts';\r\nimport { getPoolInfoApy } from './databaseApi';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './apiGlobals';\r\nimport {\r\n  hasInvalidArgsValue,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  getPoolContractAddress,\r\n  getBTCUSDPrice,\r\n  bg,\r\n  BigNumber,\r\n  getDeriContractAddress,\r\n} from '../utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bSymbolRaw = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bSymbol: bSymbolRaw,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  let price = ''\r\n  try {\r\n    price = await getBTCUSDPrice(chainId, poolAddress);\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    await priceCache.update(chainId, poolAddress);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (hasInvalidArgsValue(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (hasInvalidArgsValue(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  return (await deri.balance(accountAddress)).toString();\r\n};\r\n","import { metaMaskWeb3, web3Factory } from '../factory';\r\nimport { numberToHex } from '../utils';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      if (isBrowser() && !isJsDom()) {\r\n        this.web3 = metaMaskWeb3();\r\n      } else {\r\n        this.web3 = await web3Factory.get(this.chainId);\r\n      }\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        // ignore the metamask error\r\n      }\r\n    }\r\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args, accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from './contract_base'\r\nimport { perpetualPoolAbi } from './abis';\r\nimport { deriToNatural, hexToNumber, bg } from '../utils'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from './contract_base'\r\nimport { perpetualPoolRouterAbi} from './abis';\r\nimport { naturalToDeri } from '../utils'\r\nimport { MAX_INT256 } from '../config';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\nimport { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async transfer() {\r\n  // call transfer\r\n  // }\r\n}","import { ContractBase } from './contract_base'\r\nimport { lTokenAbi } from './abis';\r\nimport { deriToNatural } from '../utils'\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from './contract_base'\r\nimport { pTokenAbi } from './abis';\r\nimport { deriToNatural } from '../utils'\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, symbolId) {\r\n    const res = await this._call('getMargin', [accountAddress, symbolId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from \"./contract_base\";\r\nimport { wooOracleAbi } from './abis';\r\nimport { bg } from '../utils';\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal) {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    const res = await this._call('_I_')\r\n    return bg(res, `-${this.decimal}`).toString();\r\n  }\r\n}","import { ContractBase } from \"./contract_base\";\r\nimport { chainlinkOracleAbi } from './abis';\r\nimport { bg } from \"../utils\";\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal) {\r\n    super(chainId, address, chainlinkOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('latestRoundData');\r\n    if (res && res.answer) {\r\n      return bg(res.answer, `-${this.decimal}`).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from \"./contract_base\";\r\nimport { wrappedOracleAbi } from './abis';\r\nimport { deriToNatural } from \"../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal) {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from \"./contract_base\";\r\nimport { brokerManagerAbi } from './abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from './contract_base'\r\nimport { pTokenAirdropAbi } from './abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","var map = {\n\t\"./de/bridge.json\": 580,\n\t\"./de/broker.json\": 581,\n\t\"./de/dip-history.json\": 582,\n\t\"./de/footer.json\": 583,\n\t\"./de/governance.json\": 584,\n\t\"./de/header.json\": 585,\n\t\"./de/home.json\": 586,\n\t\"./de/lite.json\": 587,\n\t\"./de/mining.json\": 588,\n\t\"./de/mobile-lite.json\": 589,\n\t\"./de/pro.json\": 590,\n\t\"./de/team.json\": 591,\n\t\"./en/bridge.json\": 592,\n\t\"./en/broker.json\": 593,\n\t\"./en/dip-history.json\": 594,\n\t\"./en/footer.json\": 595,\n\t\"./en/governance.json\": 596,\n\t\"./en/header.json\": 597,\n\t\"./en/home.json\": 598,\n\t\"./en/lite.json\": 599,\n\t\"./en/mining.json\": 600,\n\t\"./en/mobile-lite.json\": 601,\n\t\"./en/pro.json\": 602,\n\t\"./en/team.json\": 603,\n\t\"./zh/bridge.json\": 604,\n\t\"./zh/broker.json\": 605,\n\t\"./zh/dip-history.json\": 606,\n\t\"./zh/footer.json\": 607,\n\t\"./zh/governance.json\": 608,\n\t\"./zh/header.json\": 609,\n\t\"./zh/home.json\": 610,\n\t\"./zh/lite.json\": 611,\n\t\"./zh/mining.json\": 612,\n\t\"./zh/mobile-lite.json\": 613,\n\t\"./zh/pro.json\": 614,\n\t\"./zh/team.json\": 615\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 579;","import { getConfig } from './config';\r\n\r\nconst expendPoolConfig = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getPoolConfigList = () => {\r\n  const config = getConfig()\r\n  return expendPoolConfig(config)\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId) => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList()\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`Cannot find the pool config by poolAddress(${poolAddress}) bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId)\r\n  return res[0]\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const config = getConfig()\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool\r\n  }\r\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    broker: pool.broker,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction App({intl}) {\r\n  if(isBrowser){\r\n    return <DesktopApp locale={intl.locale}/>\r\n  }\r\n  if(isMobile){\r\n    return <MobileApp locale={intl.locale}/>\r\n  }\r\n}\r\n\r\nexport default inject('intl')(observer(App)) ;\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    const balance = await getUserWalletBalance(chainId,account)\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport WebSocket from \"socket.io-client\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n\r\n  initWebSocket(){\r\n    if(this.ws === null) {\r\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \r\n        transports: ['websocket'],\r\n        withCredentials: true\r\n      })\r\n      this.ws.on('connect',() => {\r\n        if(this.already){\r\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n          console.log('ws is reconnected already')\r\n        }\r\n        console.log('ws is already connected');\r\n      });\r\n    }    \r\n  }\r\n\r\n\r\n  load(symbol,timeType = 'min'){\r\n    // symbol = symbol+'_V2'\r\n    this.initWebSocket()\r\n    this.ws.on('kline_update',data => {\r\n      const obj = {}\r\n      let time = data.time\r\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\r\n        obj.time = time \r\n        obj.low = Number(data.low)\r\n        obj.high = Number(data.high)\r\n        obj.open = Number(data.open)\r\n        obj.close = Number(data.close)\r\n        obj.volume = Number(data.volume)\r\n        obj.time_type = data.time_type\r\n        obj.symbol = data.symbol\r\n        if(!this.paused) {\r\n          this.setIndex(obj.close)\r\n          for(const key of Object.keys(this.listeners)){\r\n            if(typeof this.listeners[key] === 'function'){\r\n              this.listeners[key](obj)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol);\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  unsubscribeBars(symbol){\r\n    if(this.ws){\r\n      this.ws.emit('un_get_kline_update', {\r\n        symbol : symbol, 'time_type' : 'min'\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //暂不用\r\n  loadHistory(symbol,timeType,callback){\r\n    this.ws.on('kline_history', data => {\r\n      const history = data.map(el => {\r\n        return {\r\n          time: el.time,\r\n          low: Number(el.low),\r\n          high: Number(el.high),\r\n          open: Number(el.open),\r\n          close: Number(el.close),\r\n          volume: Number(el.volume)\r\n        }\r\n      })\r\n      if(callback){\r\n        console.log('history ->',history[history.length-1].time)\r\n        callback(history)\r\n      }\r\n    })\r\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\r\n  }\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\r\n\r\nexport default class Position {\r\n\r\n  callback = () => {}\r\n   wallet = null;\r\n   spec = null\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      // const fundingFee = await getFun\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n\r\n   \r\n\r\n\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bSymbol:'BUSD',\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    minInitialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n  }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.bTokenId,config.symbolId);\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config){\r\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   */\r\n  async init(wallet){    \r\n    const all = await this.configInfo.load(version);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        //没有默认的配置，\r\n        this.setSupportChain(false);\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n    } \r\n    //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    if(!wallet.isConnected() && !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async switch(spec){\r\n    const cur = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    let changed = false\r\n    if(version){\r\n      changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    }\r\n    if(cur){\r\n      this.pause();\r\n      this.setConfig(cur)\r\n      this.loadByConfig(this.wallet,cur,changed);  \r\n      if(changed){\r\n        this.store(cur)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged){\r\n     //position\r\n     const position = await this.positionInfo.load(wallet,config,position => {       \r\n        this.setPosition(position);\r\n     })\r\n\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      const symbol = getFormatSymbol(config.symbol)\r\n      this.oracle.unsubscribeBars(symbol);\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      \r\n      if(position){\r\n        this.setIndex(position.price);\r\n      }\r\n      this.oracle.load(symbol)\r\n    }\r\n     //contract\r\n     const contract = await this.contractInfo.load(wallet,config)    \r\n\r\n     //funding rate\r\n     const fundingRate = await this.loadFundingRate(wallet,config)\r\n     \r\n     //history\r\n     const history = await this.historyInfo.load(wallet,config);\r\n\r\n     if(contract){\r\n      this.setContract(contract)\r\n     }\r\n\r\n     if(fundingRate){\r\n      this.setFundingRate(fundingRate)\r\n     }\r\n\r\n     if(history){\r\n      this.setHistory(history);\r\n     }\r\n  }\r\n\r\n\r\n    //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n    getDefaultConfig(configs = [],wallet){\r\n      let defaultConfig = null;\r\n      if(configs.length > 0){    \r\n        const fromStore = this.getFromStore();\r\n        if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n          defaultConfig = fromStore;\r\n        }\r\n        if(defaultConfig){\r\n          //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n          const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n          if(pos === -1){\r\n            defaultConfig = configs[0];\r\n          }\r\n        } else {\r\n          defaultConfig = configs[0]\r\n        }   \r\n      }\r\n      return defaultConfig;    \r\n    }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    this.configs = configs\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setSupportChain(support){\r\n    this.supportChain = support;\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\r\n      this.setVolume(volume.toFixed(0))\r\n    }\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    \r\n    return ''\r\n  }\r\n\r\n\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n// const version = new Version();\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\r\nimport { getSlpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balance(poolAddress),\r\n      bToken.balance(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\r\nimport { getClp2ContractAddress } from '../utils';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balance(poolAddress),\r\n      bToken.balance(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory/contracts';\r\nimport { bg, getClpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { DeriEnv } from '../../config';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\r\n\r\nconst validateConfig = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['bTokens'], 'bTokens');\r\n  config['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processConfig = (config) => {\r\n  // process config\r\n  config['bTokenCount'] = config['bTokens'].length;\r\n  config['symbolCount'] = config['symbols'].length;\r\n};\r\n\r\nconst getJsonConfig = () => {\r\n  const env = DeriEnv.get();\r\n  const configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (['prod', 'dev'].includes(env)) {\r\n    //console.log(env)\r\n    if (configs[env]) {\r\n      //console.log(configs[env])\r\n      // pools\r\n      const pools = configs[env].pools;\r\n      if (pools && Array.isArray(pools)) {\r\n        for (let i = 0; i < pools.length; i++) {\r\n          validateConfig(pools[i]);\r\n          processConfig(pools[i]);\r\n        }\r\n      }\r\n      //console.log(configs[env])\r\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\r\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n      return configs[env];\r\n    }\r\n  }\r\n  throw new Error(\r\n    `getJsonConfig(): invalid config of env '${env}'`,\r\n    configs[env]\r\n  );\r\n};\r\n\r\nexport const getConfig = () => {\r\n  return getJsonConfig();\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n"],"sourceRoot":""}