{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","components/hoc/withModal.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/contract/database/database_base.js","lib/web3js/shared/config/database.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api_v2.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","components/Loading/LoadingMask.js","model/Intl.js","model/Config.js","lib/web3js/shared/utils/convert.js","model/Version.js","utils/utils.js","../lang).)*/.json$","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","withModal","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","WithModal","props","state","modalIsOpen","this","className","overlayMerged","Object","assign","mergedStyle","isOpen","style","portalClassName","intl","locale","onClose","inject","observer","DeriEnv","_deriEnv","get","set","value","Error","MAX_UINT256","MAX_INT256","factory","klass","instances","chainId","address","key","keys","includes","deepClone","obj","clone","forEach","Array","isArray","length","from","getBlockNumber","async","res","url","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","Web3","providers","HttpProvider","startTime","Date","now","eth","err","getLatestRPCServer","urls","newUrls","i","index","Math","floor","random","concat","splice","shuffleArray","promises","push","blockNumbers","Promise","all","sort","a","b","latestBlockNumber","reduce","findIndex","startsWith","normalizeChainId","chainIds","toString","normalizeAddress","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","prop","validateIsArray","getChainProviderUrl","provider_urls","filter","getChainProviderUrls","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","web3Factory","web3InstanceMap","isBrowser","isJsDom","window","ethereum","providerUrl","getLastUpdatedBlockNumber","contractAddress","getStorageAt","hexToNumber","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","amount","events","es","toBlock","e","catchApiError","func","methodName","defaultValue","console","log","catchTxApiError","success","transaction","error","getOracleConfigList","version","config","getConfig","oracle","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","isUsedRestOracle","symbol","mapToSymbol","mapToSymbolInternal","values","indexOf","getOracleConfig","oracles","filteredByChainId","c","processConfigV2","bToken","s","validateConfigV2Lite","processConfigV2Lite","map","symbolId","configs","jsonConfig","JSON","parse","pools","getJsonConfig","expendPoolConfigV2","pool","result","bTokens","symbols","pToken","lToken","router","initialBlock","bTokenId","bTokenSymbol","unit","flat","expendPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","getPoolConfigList","getFilteredPoolConfigList","poolAddress","poolConfigList","check","getPoolConfig","undefined","getPoolVersion","acc","v","_getPoolConfig","find","p","getPoolConfig2","bTokenCount","symbolCount","getPoolBTokenList","bTokenAddress","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolV1ConfigList","dToken","MiningVault","retired","getLpConfigList","type","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","lTokenAddress","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getPoolV1Config","pTokenAddress","dTokenAdress","MinningVaultAddress","getBrokerConfig","brokerManager","getBrokerConfigList","getOracleUrl","baseUrl","toLowerCase","addSymbolParam","getPriceFromRest","getPriceInfo","price","deriToNatural","stringify","retry","fetch","mode","cache","ok","json","priceInfo","status","data","getPriceInfos","symbolList","method","headers","body","getOraclePrice","oracleFactory","decimal","getPrice","ContractBase","constructor","contractAbi","Contract","_init","methods","call","join","accountAddress","gas","estimateGas","_getTransactionReceipt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","errorMessage","_estimatedGas","txRaw","numberToHex","encodeABI","request","params","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","WrappedOracle","super","_call","instanceMap","RestOracle","DatabaseBaseContract","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","CONTRACT_ABI","DatabaseWormholeContract","DatabaseAirdropContract","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","databaseWormholeFactory","getDBWormholeAddress","databaseAirdropFactory","getDBAirdropAddress","bTokenFactory","decimals","_balanceOf","bg","allowance","gt","_transact","deriFactory","wormholeFactory","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","r","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","brokerAddress","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","balance","getBalance","fromWei","getUserInfoAll","userInfo","db","userAddress","getValues","catch","deadline","nonce","valid","deriToString","deriToBool","getUserInfo","userInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoHarvest","userInfoTotal","total","getUserInfoTotal","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","getMiningVaultConfig","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","filteredConfig","MiningVaultRouter","getMiningVaultRouterConfig","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","volume","cost","lastCumulativeFundingRate","perpetualPoolFactory","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","discount","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","_calculateFee","abs","times","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateLiquidationPrice","margin","tmp","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","timestamp","fundingRatePerBlock","liquidityUsed","stateValues","getStateValues","parameters","args1","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getLpLiquidityInfo","bTokenBalance","shares","getLiquidity","poolLiquidity","getSlpLiquidityInfo","totalSupply","maxRemovableShares","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","held","calculateMaxWithdrawMargin","lte","addLiquidity","removeLiquidity","tradeWithMargin","newVolume","orderValidation","minMargin","poolMaxVolume","gte","negated","message","isOrderValid","closePosition","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","update","setInterval","_update","clear","clearInterval","PerpetualPoolParametersCache","_parameters","wsInstance","_ws","ws","io","transports","path","id","getOrSet","sendTradeTxToWorkerQuene","send","methodCall","event","wsOnPromise","addSlpLiquidity2","addSlpLiquidity","removeSlpLiquidity2","removeSlpLiquidity","addClpLiquidity2","addClpLiquidity","removeClpLiquidity2","removeClpLiquidity","addClp2Liquidity2","addClp2Liquidity","removeClp2Liquidity2","removeClp2Liquidity","unlockLp","unlockSlp","unlockClp","unlockClp2","addLpLiquidity","removeLpLiquidity","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getHttpBase","fetchJson","opts","resp","fetchRestApi","dynamicCost","marginHeld","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","getLiquidityInfo","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","getSymbol","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","_prices","split","_getFundingRate","promiseList","symbolInfo","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","margins","positions","getMargins","getPositions","availableBalance","getTradeHistory","tradeHistory","tradeFromBlock","tradeHistoryBlock","trim","tradeHistoryOnline","perpetualPoolLiteAbi","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","operator","PerpetualPoolLiteViewer","PerpetualPoolLite","viewerAddress","viewers","poolLiteViewer","getPoolLiteViewerConfig","viewer","getActiveSymbolIds","activeSymbolIds","getOffChainOracleSymbols","activeSymbols","liquidatorQualifierAddress","prices","_updateOffchainSymbols","_getSymbolPrices","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","symbolIds","poolDynamicEquity","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidity","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","perpetualPoolRouter","validation","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecification","getSpecificationV2l","addresses","getSpecification2","bTokenDiscounts","bTokenMultiplier","getSpecificationV2","positionInfo","latestPrice","getPosition","getMargin","symbolPrices","priceIndex","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getPositionInfoV2l","getPositionInfo2","symbolConfigList","getPositionInfoV2","getWalletBalance","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlocked2","isUnlockedV2","getEstimatedFee","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRate","fundingRate0","getFundingRateV2l","poolInfo","naturalWithPercentage","toExponential","getFundingRate2","getFundingRateV2","getEstimatedFundingRate","newNetVolume","fundingRate1","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsed","liquidityUsed0","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsed","liquidityUsed1","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlock2","unlockV2","addMargin","depositMarginV2l","depositMargin2","depositMarginV2","removeMargin","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","getTradeHistory2","getTradeHistoryV2","data-title","require","lang","page","test","pageName","Intl","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","Config","setAll","current","isV2","cur","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","hexToString","hexToUtf8","hexToNumberString","toFixed","toNumber","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","makeAutoObservable","setCurrent","isV1","isV2Lite","switch","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","MaskWrapper","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30738aa5.chunk.js","sourcesContent":["import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return 'https://testnetapi.deri.finance';\n    //return 'http://localhost:8082';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 10,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","\nconst paddingDate = (date) => {\n  date = date.toString()\n  if (date.length === 1) {\n    return '0' + date\n  } else {\n    return date\n  }\n}\nexport const getEpochTimeRange = (time) => {\n  //console.log('1', time.getTime()/1000)\n  const year = time.getUTCFullYear()\n  const month = time.getUTCMonth()\n  const day = time.getUTCDate()\n  let epochs = []\n  for (let i = 0; i< 3; i++) {\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\n    //console.log(newDate.getTime()/1000)\n    epochs.push(newDate)\n  }\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\n  let index = -1\n  for (let i = 0; i< epochs.length; i++) {\n    //console.log(i, epochs[i].getTime()/1000)\n    if (time.getTime() < epochs[i].getTime()) {\n      index = i\n      break\n    }\n  }\n  if (index !== -1) {\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\n  }\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\n}","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","export const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    //console.log(`${methodName}: `, err)\n    console.log(`${methodName}: ${err}`)\n  }\n  return defaultValue\n}\n\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n","import { getConfig } from './config';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getConfig(version, env)\n  return config.oracle\n};\n\nconst bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n};\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index !== -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\nimport { isUsedRestOracle, mapToBToken, mapToSymbol } from './oracle';\n\nconst validateConfigV2 = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['bTokens'], 'bTokens');\n  config['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processConfigV2 = (config) => {\n  // process config\n  config['bTokenCount'] = config['bTokens'].length;\n  config['symbolCount'] = config['symbols'].length;\n  config['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validateConfigV2Lite = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2Lite = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst getJsonConfig = (version, env) => {\n  env =  env || DeriEnv.get();\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\n    configs = configs[version]\n  }\n  if (['prod', 'dev'].includes(env)){\n    //console.log(env)\n    if (configs && configs[env]) {\n      //console.log(configs[env])\n      const pools = configs[env].pools;\n      if (pools && Array.isArray(pools)) {\n        if (version === 'v2') {\n          for (let i = 0; i < pools.length; i++) {\n            processConfigV2(pools[i]);\n            validateConfigV2(pools[i]);\n          }\n        } else if (version === 'v2_lite') {\n          for (let i = 0; i < pools.length; i++) {\n            processConfigV2Lite(pools[i]);\n            validateConfigV2Lite(pools[i]);\n          }\n        }\n      }\n      //console.log(configs[env])\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n      return configs[env];\n    }\n  }\n  throw new Error(\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n  );\n};\n\nexport const getConfig = (version='v2', env) => {\n  return getJsonConfig(version, env);\n};\n","import { getConfig } from './config';\nimport { DeriEnv } from './env';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          router: pool.router,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\n  const config = getConfig(version, env)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\n  // check the bToken in v2_lite\n  if (version === 'v2_lite') {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\n\nexport const getPoolVersion = (poolAddress) => {\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  //console.log('pools', pools)\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress)\n  const config = getConfig(version, DeriEnv.get())\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool\n  }\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolLiteViewerConfig = (chainId, version=\"v2_lite\") => {\n  const config = getConfig(version, DeriEnv.get())\n  const viewers = config.poolLiteViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getpoolLiteViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { getOracleConfig, mapToSymbolInternal } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory } from '../factory/oracle';\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (symbol) => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let baseUrl =\n    env === 'prod'\n      ? 'https://oracle4.deri.finance/get_signed_price'\n      : 'https://oracle2.deri.finance/get_signed_price';\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol.toLowerCase()}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol) => {\n  const res = await getPriceInfo(symbol)\n  if (res.price) {\n    return deriToNatural(res.price).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  let url = getOracleUrl(symbol);\n  //console.log(`getPriceInfo url: ${url}`)\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(2): ${symbol} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n      // const priceInfo = await getPriceInfo(symbol)\n      // return deriToNatural(priceInfo.price).toString()\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(chainId, symbol, version);\n  // console.log('oracle config',config)\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args.join(',')}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        // ignore the metamask error\n      }\n    }\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { isUsedRestOracle } from '../config';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n","import Web3 from 'web3';\nimport { getDBProviderUrls } from '../../config/database';\nimport { getLatestRPCServer } from '../../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrls());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\n\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"0x608060405234801561001057600080fd5b506040516112c63803806112c683398101604081905261002f91610066565b60008054336001600160a01b031991821617909155600380549091166001600160a01b039290921691909117905546600455610094565b600060208284031215610077578081fd5b81516001600160a01b038116811461008d578182fd5b9392505050565b611223806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b0509b1116100975780639a8a0592116100665780639a8a0592146101c85780639d76ea58146101d0578063b06faf62146101d8578063f77c4791146101e0576100f5565b80636b0509b114610185578063701422691461018d57806379a87b19146101a057806392eefe9b146101b5576100f5565b806351dfdb48116100d357806351dfdb4814610137578063560ebbd11461014a57806358c700a31461016a578063677528cb14610172576100f5565b806306fdde03146100fa57806320606b7014610118578063325564ec1461012d575b600080fd5b6101026101e8565b60405161010f9190610dbf565b60405180910390f35b610120610209565b60405161010f9190610d48565b61013561022d565b005b610135610145366004610bab565b6103a1565b61015d610158366004610ca1565b61066f565b60405161010f9190610d3d565b610120610684565b610135610180366004610bea565b61068a565b6101206107b1565b61013561019b366004610c15565b6107d5565b6101a8610acc565b60405161010f9190610cec565b6101356101c3366004610bab565b610adb565b610120610b77565b6101a8610b7d565b61015d610b8c565b6101a8610b9c565b6040518060400160405280600581526020016415985d5b1d60da1b81525081565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000546001600160a01b031633146102605760405162461bcd60e51b815260040161025790610f7f565b60405180910390fd5b600254600160a01b900460ff161561028a5760405162461bcd60e51b81526004016102579061106a565b6001541580159061029d57506001544210155b6102b95760405162461bcd60e51b815260040161025790610e12565b60035460025460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102f19291169060001990600401610d24565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610c81565b506002805460ff60a01b1916600160a01b17908190556001546040517fce3275b30d22151f82ee29ce7ea685563b66ff98e56afc576a94d8a88c676ec092610397929130916001600160a01b031690611153565b60405180910390a1565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156103f55760405162461bcd60e51b81526004016102579061106a565b6000816001600160a01b03166358c700a36040518163ffffffff1660e01b815260040160206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190610cb9565b90506000826001600160a01b03166379a87b196040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610bce565b905081158015906104ee5750814210155b61050a5760405162461bcd60e51b815260040161025790610ec5565b6001600160a01b03811630146105325760405162461bcd60e51b815260040161025790610fd5565b6003546040516370a0823160e01b81526001600160a01b03909116906323b872dd908590309084906370a082319061056e908590600401610cec565b60206040518083038186803b15801561058657600080fd5b505afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610cb9565b6040518463ffffffff1660e01b81526004016105dc93929190610d00565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610c81565b507f18ce2512842fddee8c808fb717780a66007d1da9a942dd32625813c82d53c34282843060405161066293929190611153565b60405180910390a1505050565b60056020526000908152604090205460ff1681565b60015481565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156106de5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b0382166107045760405162461bcd60e51b8152600401610257906110d3565b60038110158015610717575061016d8111155b6107335760405162461bcd60e51b815260040161025790610e68565b61074081620151806111a0565b61074a9042611188565b6001819055600280546001600160a01b0319166001600160a01b0385811691909117918290556040517fe2a3b7ba8269be3ca7ba4627f844bb9abd978e9b05d290dc89d4b107f9e3dda7936107a59390923092911690611153565b60405180910390a15050565b7f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb1281565b600254600160a01b900460ff16156107ff5760405162461bcd60e51b81526004016102579061106a565b8442111561081f5760405162461bcd60e51b815260040161025790610f1b565b604080518082018252600581526415985d5b1d60da1b6020918201526004549151600092610894927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866927f8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c79291309101610d7d565b60405160208183030381529060405280519060200120905060007f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb12898989896040516020016108e7959493929190610d51565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561092f5760405162461bcd60e51b815260040161025790610f52565b6000818152600560209081526040808320805460ff191660011790555161095a918591859101610cd1565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516109979493929190610da1565b6020604051602081039080840390855afa1580156109b9573d6000803e3d6000fd5b5050604051601f1901516000549092506001600160a01b0380841691161490506109f55760405162461bcd60e51b81526004016102579061111c565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610a27908e908e90600401610d24565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610c81565b508a6001600160a01b03167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef18b8b8b604051610ab793929190611172565b60405180910390a25050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b03163314610b055760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff1615610b2f5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b038116610b555760405162461bcd60e51b815260040161025790611024565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6003546001600160a01b031681565b600254600160a01b900460ff1681565b6000546001600160a01b031681565b600060208284031215610bbc578081fd5b8135610bc7816111d5565b9392505050565b600060208284031215610bdf578081fd5b8151610bc7816111d5565b60008060408385031215610bfc578081fd5b8235610c07816111d5565b946020939093013593505050565b600080600080600080600060e0888a031215610c2f578283fd5b8735610c3a816111d5565b9650602088013595506040880135945060608801359350608088013560ff81168114610c64578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215610c92578081fd5b81518015158114610bc7578182fd5b600060208284031215610cb2578081fd5b5035919050565b600060208284031215610cca578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610deb57858101830151858201604001528201610dcf565b81811115610dfc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526036908201527f5661756c742e617070726f76654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b60208082526039908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a2067726160408201527f636544617973206d75737420626520332d333635206461797300000000000000606082015260800190565b60208082526036908201527f5661756c742e657865637574654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b6020808252601e908201527f5661756c742e636c61696d3a207369676e617475726520657870697265640000604082015260600190565b6020808252601390820152725661756c742e636c61696d3a207265706c617960681b604082015260600190565b60208082526036908201527f4d696772617461626c652e5f636f6e74726f6c6c65725f3a2063616e206f6e6c6040820152753c9031b0b63632b210313c9031b7b73a3937b63632b960511b606082015260800190565b6020808252602f908201527f5661756c742e657865637574654d6967726174696f6e3a206e6f74206465737460408201526e696e6174696f6e206164647265737360881b606082015260800190565b60208082526026908201527f4d696772617461626c652e736574436f6e74726f6c6c65723a20746f2030206160408201526564647265737360d01b606082015260800190565b60208082526043908201527f4d696772617461626c652e5f76616c69645f3a2063616e6e6f742070726f636560408201527f65642c207468697320636f6e747261637420686173206265656e206d696772616060820152621d195960ea1b608082015260a00190565b60208082526029908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a20746f2060408201526830206164647265737360b81b606082015260800190565b60208082526019908201527f5661756c742e636c61696d3a20756e617574686f72697a656400000000000000604082015260600190565b9283526001600160a01b03918216602084015216604082015260600190565b9283526020830191909152604082015260600190565b6000821982111561119b5761119b6111bf565b500190565b60008160001904831182151516156111ba576111ba6111bf565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ea57600080fd5b5056fea2646970667358221220309376e66ca21a54581da8ded1f86303ca0c78bd47254d1bdb5fb101169baa2364736f6c63430008010033\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract';\nimport { getPriceFromRest, getPriceInfo } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfo(symbol);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = await getPriceFromRest(symbol);\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getPriceFromRest(symbol);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = await getPriceFromRest(symbol);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contract_transaction_api';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from '../../shared/api/slp_pool_api'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from '../../shared/api/clp_pool_api'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from '../../shared/api/clp2_pool_api'\nimport { wsInstance } from './api_v1_globals'\nimport { DeriEnv, getRestServerConfig } from '../../shared/config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { getLpConfig } from '../config';\nimport { unlockSlp } from './slp_pool_api';\nimport { unlockClp } from './clp_pool_api';\nimport { unlockClp2 } from './clp2_pool_api';\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from '../../v1/api/contract_transaction_api_v2';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { DeriEnv, getPoolV1Config, getRestServerConfig  } from '../../shared/config';\nimport { bg, deriToNatural } from '../../shared/utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './trade_history_api';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url, opts) => {\n  const resp = await fetch(url, opts);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    //console.log(\"approximatePnl\", approximatePnl.toString())\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import { deriToNatural } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getRestServerConfig,\n  DeriEnv,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            symbol: i.symbol,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import {\n  getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  getPoolLiteViewerConfig,\n} from '../../shared';\nimport { getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\n//import { MAX_INT256} from '../../shared/config'\nimport { PTokenLite } from './p_token';\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.offchainSymbols = this.config.offchainSymbols;\n    this.bTokenAddress = this.config.bToken\n    this.lTokenAddress = this.config.lToken\n    this.pTokenAddress = this.config.pToken\n    this.viewerAddress = getPoolLiteViewerConfig(this.chainId)\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses()]);\n  }\n\n  async _updateOffchainSymbols() {\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    if (!this.viewer) {\n      this.viewer = new PerpetualPoolLiteViewer( this.chainId, this.viewerAddress)\n    }\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.length !== activeSymbolIds.length ||\n      this.activeSymbolIds.toString() !== activeSymbolIds.toString()\n    ) {\n      //await this.getAddresses();\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(\n        this.contractAddress\n      );\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\n      }, []);\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\n      this.activeSymbolIds = activeSymbolIds;\n      // console.log(\n      //   'offchainSymbolIds',\n      //   this.offchainSymbolIds,\n      //   this.offchainSymbols\n      // );\n    }\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\n    this.protocolFeeCollector = res.protocolFeeCollector;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = []\n    await this._updateOffchainSymbols()\n    if (this.offchainSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import {\n  calculateEntryPrice ,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLastUpdatedBlockNumber,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePrice(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getRestServerConfig,\n  DeriEnv,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            symbol: i.symbol,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import {\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n} from '../shared/config';\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (version === 'v2' || version === 'v2_lite') {\n    return getPoolV2ConfigList(version, env);\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport { getPoolVersion } from '../shared';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getPoolLiquidity as getPoolLiquidity2,\n  getPoolInfoApy as getPoolInfoApy2,\n} from '../shared/api/database_api';\nimport {\n  getLiquidityInfoV2,\n  getPoolLiquidityV2,\n  getPoolInfoApyV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n} from '../v2_lite/api';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersion } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","import { getPoolVersion, isDeriUnlocked } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n","import { getPoolVersion, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'v2_lite'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n        perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { getPoolVersion } from '../shared';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\n","var map = {\n\t\"./de/Signin.json\": 560,\n\t\"./de/bridge.json\": 561,\n\t\"./de/broker.json\": 562,\n\t\"./de/dip-history.json\": 563,\n\t\"./de/footer.json\": 564,\n\t\"./de/governance.json\": 565,\n\t\"./de/header.json\": 566,\n\t\"./de/home.json\": 567,\n\t\"./de/lite.json\": 568,\n\t\"./de/mining.json\": 569,\n\t\"./de/mobile-lite.json\": 570,\n\t\"./de/pro.json\": 571,\n\t\"./de/team.json\": 572,\n\t\"./en/Signin.json\": 573,\n\t\"./en/bridge.json\": 574,\n\t\"./en/broker.json\": 575,\n\t\"./en/dip-history.json\": 576,\n\t\"./en/footer.json\": 577,\n\t\"./en/governance.json\": 578,\n\t\"./en/header.json\": 579,\n\t\"./en/home.json\": 580,\n\t\"./en/lite.json\": 581,\n\t\"./en/mining.json\": 582,\n\t\"./en/mobile-lite.json\": 583,\n\t\"./en/pro.json\": 584,\n\t\"./en/team.json\": 585,\n\t\"./zh/Signin.json\": 586,\n\t\"./zh/bridge.json\": 587,\n\t\"./zh/broker.json\": 588,\n\t\"./zh/dip-history.json\": 589,\n\t\"./zh/footer.json\": 590,\n\t\"./zh/governance.json\": 591,\n\t\"./zh/header.json\": 592,\n\t\"./zh/home.json\": 593,\n\t\"./zh/lite.json\": 594,\n\t\"./zh/mining.json\": 595,\n\t\"./zh/mobile-lite.json\": 596,\n\t\"./zh/pro.json\": 597,\n\t\"./zh/team.json\": 598\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 559;","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  }\n  if(isMobile){\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline_update', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n   }\n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      // const fundingFee = await getFun\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    bTokenSymbolDisplay : ['BUSD']\n  }\n\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite){\n      return [spec.bTokenSymbol];\n    }\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,finishedCallback){    \n    const all = await this.configInfo.load(version);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback)\n  }\n\n  async onChange(config,changed,finishedCallback){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\n        this.contractInfo.load(wallet,config),\n        this.loadFundingRate(wallet,config),\n        this.historyInfo.load(wallet,config)\n      ]).then(results => {\n        if(results.length === 4){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\n      this.setVolume(volume.toFixed(0))\n    }\n  }\n\n\n  get volumeDisplay(){\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    \n    return ''\n  }\n\n\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}