{"version":3,"sources":["../node_modules/react-modal/lib/index.js","components/Button/Button.js","utils/DeriNumberFormat.js","hooks/useDisableScroll.js","hooks/useClaimInfo.js","components/Claim/Claim.js","hooks/useSpecification.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/Dialog/AddLiquidity.js","components/Mining/Liquidity/Dialog/RemoveLiquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Mining/Trade/Liquidity.js"],"names":["Object","defineProperty","exports","value","obj","_Modal","require","_Modal2","__esModule","default","module","Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","lang","status","setStatus","useState","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","beforeAction","current","style","display","afterAction","useEffect","async","detail","account","res","pool","bTokenId","loadApproveStatus","onClick","approve","success","alert","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","undefined","isNaN","Math","abs","displayType","useDisableScroll","nested","document","querySelector","overflow","useClaimInfo","claimInfo","setClaimInfo","interval","loadClaimInfo","isConnected","getUserInfoAll","claimed","total","toFixed","unclaimed","valid","amount","harvestDeriLp","lp","harvestDeriTrade","trade","chainId","window","setInterval","clearInterval","Claim","miningClaim","tradingClaim","setBtnText","setClaimed","claimInfoInterval","remainingTime","setRemainingTime","config","useConfig","period","parseInt","Date","now","dis","h","m","s","decimalScale","name","eqInNumber","mintDToken","claim","connect","e","useSpecification","address","symbolId","setSpec","getSpecification","loadSpec","AddDialog","withModal","baseToken","onClose","afterAdd","balance","isLpPool","baseTokenId","setAmount","decimal","setDecimal","addValue","setAddValue","substring","indexOf","length","thousandSeparator","type","placeholder","onChange","target","max","bg","gt","minAddLiquidity","addLpLiquidity","addLiquidity","RemoveDialog","liqInfo","afterRemove","unit","version","setBalance","formatShares","totalShares","data-dismiss","cur","removeLpLiquidity","removeLiquidity","eq","Operator","loadLiqidityInfo","btnType","setBtnType","isOpen","setIsOpen","buttonElment","setButtonElment","loadBalance","openConfigListCache","update","getLpWalletBalance","getWalletBalance","unlockLp","unlock","error","message","refresh","result","isLpUnlocked","isUnlocked","isApprove","el","switchNetwork","id","modalIsOpen","inject","observer","loading","liquidity","setLiquidity","bToken","setBToken","loadLiquidityInfo","apyPool","getPoolInfoApy","pooLiquidity","getPoolLiquidity","lpApy","info","getLpLiquidityInfo","getLiquidityInfo","isLP","getLpPoolInfoApy","apy2","shares","multipliedBy","shareValue","poolLiquidity","apy","percent","dividedBy","toString","values","sharesTitle","pnl","plus","multiplier","loaded","isCakeLP","href","test","rel","suffix","tip","isSushiLP","prefix","LiquidityMining","configInfo","Config","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","history","useHistory","userInfo","userInfoPool","getUserInfoInPool","myTradingVolumeCurrent","volume1h","loadUserInfoInPool","totalTradingVolumeCurrent","getTradeInfo","configs","load","isV1","find","c","storeConfig","push"],"mappings":"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","file":"static/js/11.54783098.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];","import {useState,useRef,useEffect} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [isApproved, setIsApproved] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [buttonText, setbuttonText] = useState(btnText)\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    beforeAction()\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    afterAction()\n  }\n\n  const beforeAction = ()  => {\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n  }\n\n  const afterAction = () => {\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  const loadApproveStatus = async () => {\n    if(checkApprove && wallet && wallet.detail.account){\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\n      setIsApproved(res);\n    }\n  }\n  const approve = async () => {\n    beforeAction();\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\n    if(res.success){\n      setIsApproved(true);\n    } else {\n      setIsApproved(false)\n      alert(lang['approve-failed'])\n    }\n    afterAction();\n  }\n\n  const action = () => {\n    if(isApproved){\n      onClick();\n    } else {\n      approve();\n    }\n  }\n\n  useEffect(() => {\n    loadApproveStatus();\n    return () => {};\n  }, [wallet,spec,checkApprove]);\n\n  useEffect(() => {\n    if(btnText){\n      setbuttonText(btnText)\n    }\n    return () => {\n    }\n  }, [btnText])\n\n  return(\n    <button className={className} onClick={action} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\n        </button>\n  )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import { useEffect } from 'react'\n\nexport default function useDisableScroll(nested) {\n  \n  useEffect(() => {\n    // window.scrollTo(0, 0);\n    document.querySelector('body').style.overflow = 'hidden'\n    return () => {\n      if(!nested){\n        document.querySelector('body').style.overflow = 'auto'\n      }\n    };\n  }, []);\n  return null;\n}\n","import { useState, useEffect } from 'react'\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js/indexV2';\n\n\nexport default function useClaimInfo(wallet){\n  const [claimInfo, setClaimInfo] = useState({});\n  let interval = null;\n\n  const loadClaimInfo =  async () => {\n    if(wallet.isConnected()){\n      const claimInfo  = await getUserInfoAll(wallet.detail.account);\n      const claimed = (+claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      const chainId = claimInfo.chainId\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\n    }\n  }\n\n  useEffect(() => {\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n      loadClaimInfo();\n    return () => clearInterval(interval);\n  }, [wallet.detail.account])\n  return [claimInfo,interval];\n}","import { useState, useEffect} from 'react'\n\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\nimport useConfig from \"../../hooks/useConfig\";\nimport { mintDToken } from \"../../lib/web3js/indexV2\";\nimport Button from '../Button/Button';\nimport { eqInNumber } from '../../utils/utils';\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\n\nexport default function Claim({wallet,miningClaim,tradingClaim,lang}){\n\tconst [btnText, setBtnText] = useState(lang['connect-wallet'])\n\tconst [claimed, setClaimed] = useState(false);\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\n\tconst [remainingTime, setRemainingTime] = useState('')\n\tconst config = useConfig(claimInfo.chainId) \n\n  //claim deri\n\tconst claim = async () => {\n\t\tif(config.name === undefined) {\n\t\t\talert(`${lang['wrong-network']}`);\n\t\t\treturn;\n\t\t}\n\t\tif(!eqInNumber(wallet.detail.chainId,claimInfo.chainId)) {\n\t\t\talert(`${lang['your-deri-is-on']} ${ config.name } ${lang['connect-to']} ${ config.name } ${lang['to-claim']}`)\n\t\t\treturn ;\n\t\t}\n\t\tif ((+claimInfo.unclaimed) === 0) {\n\t\t\talert(lang['no-deri-to-claim-yet']);\n\t\t\treturn;\n\t\t}\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\n\t\tif (now < 1800) {\n\t\t\talert(lang['claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch']);\n\t\t\treturn;\n\t\t}\n\t\tconst res = await mintDToken(wallet.detail.chainId,wallet.detail.account)\n\t\tif(res.success){\n\t\t\tclearInterval(claimInfoInterval);\n\t\t\treturn true;\n\t\t} else {\n\t\t\talert(lang['claim-failed'])\n\t\t\treturn false;\n\t\t}\n  }\n\n\tconst click = async () => {\n\t\tif(wallet.isConnected()){\n\t\t\tconst res = await claim();\n\t\t\tif(res){\n\t\t\t\tsetClaimed(true)\n\t\t\t}\n\t\t} else {\n\t\t\ttry{\n\t\t\t\tconst result =await wallet.connect();\n\t\t\t\treturn result ? true : false\n\t\t\t} catch (e){\n\t\t\t\treturn false\n\t\t\t}\n\t\t} \n\t}\n\n\n\t\n\t//初始化按钮文案和事件\n\tconst initButton = () => {\n\t\tif(wallet.isConnected()){\n\t\t\tsetBtnText(lang['claim'])\n\t\t} else {\n\t\t\tsetBtnText(lang['collect-wallet'])\n\t\t}\n\t}\n  \n  useEffect(() => {\n\t\tlet interval = null;\n\t\tif(miningClaim){\n\t\t\t//计数器\n\t\t\tinterval = window.setInterval(() => {\n\t\t\t\tlet period = 3600 * 8;\n\t\t\t\tlet current = parseInt(Date.now()/1000);\n\t\t\t\tlet epochBegin = parseInt(current / period)*period;\n\t\t\t\tlet dis = (epochBegin + period - current);\n\t\t\t\tlet h = parseInt(dis / 3600);\n\t\t\t\tlet m = parseInt((dis % 3600)/60)\n\t\t\t\tlet s = parseInt(dis % 60) \n\t\t\t\tsetRemainingTime(`${h} ${lang['h']} ${m} ${lang['m']} ${s} ${lang['s']}`);\n\t\t\t},1000);\n\t\t}    \n\n\t\tinitButton();\t\t\n    return () => {\n      interval && clearInterval(interval);\n\t\t};\n\t\t\n  }, [wallet.detail.account]);\n\n\n  return (\n    <div className='claim-box'>\n\t\t\t\t<div className='odd title'>{miningClaim ?  lang['my-liquidity-providing-harvest-in-current-epoch'] : lang['my-trading-harvest-in-current-epoch']}</div>\n\t\t\t\t{miningClaim && <div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>{lang['current-epoch-remaining-time']}</div>\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\n\t\t\t\t</div>}\t\t\t\t\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>{lang['my-harvest-in-current-epoch-estimated']}</div>}\n\t\t\t\t\t\t{tradingClaim && <div className='text-title'>{lang['my-trading-harvest-in-current-epoch-Est']}</div>}\n\t\t\t\t\t\t<div className='text-num'>{ miningClaim ? claimInfo.harvestDeriLp : claimInfo.harvestDeriTrade} {lang['deri']}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>{lang['claimed-deri']}</div>\n\t\t\t\t\t\t<div className='text-num'>{claimed ? ((+claimInfo.claimed) + (+claimInfo.unclaimed)).toFixed(2) : claimInfo.claimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>{lang['unclaimed-deri']}</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimed ? 0 : <DeriNumberFormat value={claimInfo.unclaimed} decimalScale={2}/>}</div>\n\t\t\t\t</div>\n\t\t\t\t{tradingClaim && \n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className='odd claim-network'>\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>{lang['your-deri-is-on']} { config.name }  {lang['connect-to']} { config.name } {lang['to-claim']}</div>}\n\t\t\t\t</div>\n\t\t\t\t<div className='claim-btn'>\n\t\t\t\t\t<Button btnText={btnText} click={click} className='claim' lang={lang}/>\t\t\t\t\t\n\t\t\t\t</div>\n      </div>\n  ) \n}","import { useState, useEffect } from 'react'\nimport { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default function useSpecification({wallet,address,symbolId}){\n  const [spec, setSpec] = useState({});\n\n  const loadSpec = async () => {\n    if(wallet.isConnected() && address){\n      const spec =  await getSpecification(wallet.detail.chainId,address,symbolId);\n      setSpec(spec);\n    }\n  }\n\n  useEffect(() => {\n    loadSpec();\n    return () => {      \n    }\n  }, wallet.detail.account,address);\n\n  return spec;\n}","import React, { useState, useEffect} from 'react'\nimport {\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity,openConfigListCache, getWalletBalance, unlockLp, isLpUnlocked, getLpWalletBalance, getLpLiquidityInfo,getLpPoolInfoApy, bg\n} from '../../../lib/web3js/indexV2'\nimport AddLiquidity from './Dialog/AddLiquidity';\nimport RemoveLiquidity from './Dialog/RemoveLiquidity';\nimport Button from '../../Button/Button';\nimport { inject, observer } from 'mobx-react';\nimport withModal from '../../hoc/withModal';\nimport { eqInNumber, isCakeLP, isLP, isSushiLP } from '../../../utils/utils';\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat';\n\nfunction Liquidity({wallet,version,chainId,baseToken,address,type,baseTokenId,symbolId,lang,loading}) {\n  const [liquidity,setLiquidity] = useState({})\n  const [bToken,setBToken] = useState(baseToken)\n\tconst isLpPool = (type === 'lp')\n\tconst loadLiquidityInfo = async () => {\n\t\tif(version === 'v2_lite_open'){\n\t\t\tawait openConfigListCache.update()\n\t\t}\n\t\tloading.loading();\n\t\tconst apyPool = await getPoolInfoApy(chainId,address,baseTokenId)\n\t\tconst pooLiquidity = await getPoolLiquidity(chainId,address,baseTokenId);\n\t\tif(wallet.isConnected() && eqInNumber(chainId , wallet.detail.chainId)){\n\t\t\tlet info = null;\n\t\t\tif(isLpPool){\n\t\t\t\tinfo = await getLpLiquidityInfo(chainId,address,wallet.detail.account)\n\t\t\t} else {\n\t\t\t\tinfo = await getLiquidityInfo(chainId,address,wallet.detail.account,baseTokenId);\n\t\t\t}\n\t\t\tlet lpApy ;\n\t\t\tif(isLP(address)){\n\t\t\t\tlet lapy = await getLpPoolInfoApy(chainId,address)\n\t\t\t\tlpApy = (+lapy.apy2) * 100;                     \t\t\t\t\t\t\n\t\t\t\t// if(!info.shareValue){\n\t\t\t\t// \tinfo.shareValue = 1; \n\t\t\t\t// }\n\t\t\t}\n\t\t\tif(info){\n\t\t\t\tconst shares = info.shares ? bg(info.shares) : bg(0)\n\t\t\t\tif(version === 'v1' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') {\n\t\t\t\t\tconst total = shares.isNaN() ? bg(0) : shares.multipliedBy(info.shareValue) \n\t\t\t\t\tsetLiquidity({\n\t\t\t\t\t\ttotal :  info.poolLiquidity,\n\t\t\t\t\t\tapy : ((+apyPool.apy) * 100).toFixed(2),\n\t\t\t\t\t\tshareValue : info.shareValue,\n\t\t\t\t\t\tpercent : info.poolLiquidity > 0 ? total.dividedBy(info.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n\t\t\t\t\t\tshares : shares.toFixed(2),\n\t\t\t\t\t\tformatShares : shares.toFixed(2),\n\t\t\t\t\t\ttotalShares : bg(shares).toString(),\n\t\t\t\t\t\tvalues : total.toFixed(4),\n\t\t\t\t\t\tlpApy,\n\t\t\t\t\t\tunit : lang['shares'],\n\t\t\t\t\t\tsharesTitle : lang['staked-balance']\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tsetLiquidity({\n\t\t\t\t\t\ttotal : info.poolLiquidity,\n\t\t\t\t\t\tapy : ((+apyPool.apy) * 100).toFixed(2),\n\t\t\t\t\t\tpnl : (+info.pnl).toFixed(2),\n\t\t\t\t\t\tshares : shares.toString(),\n\t\t\t\t\t\tformatShares : bg(shares).plus(info.pnl).toFixed(2),\n\t\t\t\t\t\ttotalShares : bg(shares).plus(info.pnl).toString(),\n\t\t\t\t\t\tpercent : info.poolLiquidity > 0 ? shares.dividedBy(info.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n\t\t\t\t\t\tunit : baseToken,\n\t\t\t\t\t\tsharesTitle : lang['my-Liquidity'],\n\t\t\t\t\t\tmultiplier : `${apyPool.multiplier}x`\n\t\t\t\t\t})\n\t\t\t\t}\t\n\t\t\t}\n\t\t} else {\n\t\t\t\n\t\t\tlet lpApy ;\n\t\t\tif(isLP(address)){\n\t\t\t\tlet lapy = await getLpPoolInfoApy(chainId,address)\n        \t\tlpApy = (+lapy.apy2) * 100;                           \n\t\t\t}\n\t\t\tif(pooLiquidity){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal : pooLiquidity.liquidity,\n\t\t\t\t\tapy : (+apyPool.apy) * 100,\n\t\t\t\t\tlpApy\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tloading.loaded()\n\t}\n\n\tuseEffect(() => {\n\t\tloadLiquidityInfo();\n\t\t//cake 显示的baseToken 不一致，特殊处理\n\t\tif(isCakeLP(address)){\n\t\t\tsetBToken('CAKE-LP')\n\t\t}\n\t\treturn () => {}\n\t}, [wallet.detail.account,baseToken])\n\n\n  return (\n    <div className=\"liquidity-box\">\n\t\t\t{version === 'v2_lite_open' \n\t\t\t\t? <div className=\"odd title\">{lang['my-liqudity-providing']}</div> \n\t\t\t\t: <div className=\"odd title\">{lang['provide']} \n\t\t\t\t\t{isLpPool ? <a href={/DERI-USDT/.test(bToken) ? 'https://app.sushi.com/add/0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9/0xdAC17F958D2ee523a2206206994597C13D831ec7' : 'https://pancakeswap.finance/add/0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5/0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56'} target='_blank' rel='noreferrer'>\n\t\t\t\t\t{ bToken }</a> : ` ${bToken} `}\n\t\t\t\t\t {lang['earn-deri']}</div>}\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">{lang['pool-total-liquidity']}</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.total} suffix={` ${ bToken}`  } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t{version === 'v2' && <div className='odd text'>\n\t\t\t\t\t<div className='text-title'>{lang['multiplier']}</div>\n\t\t\t\t\t<div className='text-num multiplier' tip={lang['multiplier-tip']}>{liquidity.multiplier}</div>\n\t\t\t\t</div>\t}\n\t\t\t\t{version !== 'v2_lite_open' && <div className=\"odd text\">\n\t\t\t\t\t<div className=\"text-title\">{lang['apy']}</div>\n\t\t\t\t\t\t\t<div className='text-num' >\n\t\t\t\t\t\t\t\t<span tip={isLP(address) && lang['deri-apy']} className={`${isLP(address) && 'sushi-apy-underline'}`}>\n\t\t\t\t\t\t\t\t\t<DeriNumberFormat value={ liquidity.apy } decimalScale={2} suffix='%'/></span>\n\t\t\t\t\t\t\t\t\t{isLP(address) && liquidity.lpApy > 0 && <><span> +</span> <span className=\"sushi-apy-underline text-num\" tip={isSushiLP(address) ? lang['sushi-apy'] : lang['cake-apy']}> \n\t\t\t\t\t\t\t\t\t<DeriNumberFormat value={  liquidity.lpApy } allowZero={true}  decimalScale={2} suffix='%'/></span></>}\n\t\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t</div>}\n\t\t\t\t{(version === 'v1' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') && <div className=\"odd text\">\n\t\t\t\t\t<div className=\"text-title\">{lang['liquidity-share-value']}</div>\n\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat  allowZero={true} decimalScale={6} value={ liquidity.shareValue} suffix={ ' '+ bToken } thousandSeparator={true}/></div>\t\t\t\t\t\t\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">{lang['my-liquidity-pencentage']}</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.percent } decimalScale={2} suffix={'%'}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">{liquidity.sharesTitle} </div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true}  value={ liquidity.formatShares } decimalScale={2} /> <span>{liquidity.unit}</span> </div>\n\t\t\t\t</div>\n\t\t\t\t{version === 'v2' && <div className=\"odd text claim-network\">\n\t\t\t\t\t<div className='text-title'>{lang['mining-pnl']}</div>\n\t\t\t\t\t<div className=\"text-num\">≈ &nbsp;<DeriNumberFormat allowZero={true} prefix=' ' value={ liquidity.pnl } decimalScale={2} suffix ={' '+ bToken }  /></div>\n\t\t\t\t</div>}\n\t\t\t\t{(version === 'v1' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') && <div className=\"odd claim-network\">\n\t\t\t\t\t<div className=\"text-title money\"> ≈ <DeriNumberFormat allowZero={true}   value={liquidity.values} suffix ={' '+ bToken } decimalScale={4}/></div>\t\t\t\t\t\t\n\t\t\t\t\t{/* <div className=\"text-title money\"> {liquidity.values ? (+liquidity.values).toFixed(2) : '--'}</div>\t\t\t\t\t\t */}\n\t\t\t\t</div>}\n\t\t\t\t<Operator version={version} wallet={wallet} chainId={chainId} address={address} liqInfo={liquidity} baseToken={bToken} isLpPool={isLpPool} loadLiqidityInfo={loadLiquidityInfo} symbolId={symbolId} baseTokenId={baseTokenId} lang={lang}/>\n\t</div>\n  )\n}\n\n\nconst AddDialog = withModal(AddLiquidity)\nconst RemoveDialog = withModal(RemoveLiquidity)\n\n//操作区\nconst Operator = ({version,wallet,chainId,address,baseToken,isLpPool,liqInfo,loadLiqidityInfo,baseTokenId,symbolId,lang})=> {\n\tconst [isApproved,setIsApproved] = useState(false)\n\tconst [btnType, setBtnType] = useState('add')\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [balance, setBalance] = useState('');\n\tconst [buttonElment, setButtonElment] = useState(null);\n\t\n\n  const loadBalance = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n\t\t\tlet total = null;\n\t\t\tif(version === 'v2_lite_open'){\n\t\t\t\tawait openConfigListCache.update()\n\t\t\t}\n\t\t\tif(isLpPool){\n\t\t\t\ttotal = await getLpWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\n\t\t\t} else {\n\t\t\t\ttotal = await getWalletBalance(wallet.detail.chainId,address,wallet.detail.account,baseTokenId);\n\t\t\t}\n\t\t\tif(typeof total !== 'object'){\n\t\t\t\tsetBalance(total)\t\t\t\t\n\t\t\t}\n    }\n  }\n\n  useEffect(() => {\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n    return () => {}\n  }, [wallet.detail.account])\n\n\n\tconst isApprove = async () => {\n\t\tif(version === 'v2_lite_open'){\n\t\t\tawait openConfigListCache.update()\n\t\t}\n\t\tif(isLpPool){\n\t\t\tconst result = await isLpUnlocked(chainId,address,wallet.detail.account) \t\t\t \n\t\t\tsetIsApproved(result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = await isUnlocked(chainId,address,wallet.detail.account,baseTokenId) \t\t\t \n\t\t\tsetIsApproved(result);\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\n\n\tconst approve = async () => {\n\t\tlet res = null;\n\t\tif(isLpPool){\n\t\t\tres = await unlockLp(chainId,address,wallet.detail.account);\n\t\t} else {\n\t\t\tres = await unlock(chainId,address,wallet.detail.account,baseTokenId);\n\t\t}\t\t\n\t\tif(res && res.success){\n\t\t\tsetIsApproved(true)\n\t\t} else {\n\t\t\talert(res.error ?  res.error.message || lang['approve-failed'] : lang['approve-failed'])\n\t\t}\n  }\n\n\n\tconst connect =  async () => {\n\t\ttry {\n\t\t\tconst result = await wallet.connect();\n\t\t\treturn result ? true : false\n\t\t} catch (e){\n\t\t\treturn false\n\t\t}\n\t}\n\t\n\tconst addLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('add')\n\t}\n\n\tconst afterClick = () => {\n\t\tsetIsOpen(false);\n\t\t// loadLiquidity()\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n\t\twallet.refresh()\n\t}\n\n\tconst removeLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('remove')\n\t}\n\n\n  \n  useEffect(() => {\n\t\t// todo 判断网络\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId, chainId)){\n\t\t\tisApprove()\n    }\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\tuseEffect(() => {\t\t\n\t\tif(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId) && isApproved){\n\t\t\tsetButtonElment((<div className=\"add-remove-liquidity\">\n\t\t\t<button \n\t\t\t\t\tclassName=\"add-liquidity\"\n\t\t\t\t\tonClick={addLiquidity}>\n\t\t\t\t\t{lang['add-liquidity']}\n\t\t\t</button>\n\t\t\t<button className=\"remove-liquidity\" onClick={removeLiquidity}>\n\t\t\t\t\t{lang['remove-liquidity']}\n\t\t\t</button>\n\t\t</div>))\n\t\t} else {\n\t\t\tlet el = null\n\t\t\tif(!wallet.isConnected()){\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={connect} btnText={lang['connect-wallet']} lang={lang}></Button></div>\n\t\t\t} else if(!eqInNumber(wallet.detail.chainId,chainId)) {\n\t\t\t\twallet.switchNetwork({id: chainId})\n\t\t\t\tel = <div className=\"approve\" ><Button className='approve-btn wrong-network' btnText={lang['wrong-network']}  lang={lang} click={() => wallet.switchNetwork({id : chainId})} ></Button></div>\t\t\t\t\n\t\t\t} else if(!isApproved) {\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={approve} btnText={lang['approve']} lang={lang}></Button></div>\n\t\t\t} \n\t\t\tsetButtonElment(el)\n\t\t}\n\t\t\t\n\t\treturn () => {};\n\t}, [wallet.detail.account,isApproved]);\n\n  return (\n    <div className=\"liquidity-btn\">\n\t\t\t{\n\t\t\t\tbtnType === 'add' \n\t\t\t\t? <AddDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} balance={balance}\n\t\t\t\t\t\t\t\t\t\t  address={address} wallet={wallet} baseToken={baseToken} afterAdd={afterClick} baseTokenId={baseTokenId}  symbolId={symbolId} lang={lang}/> \n\t\t\t\t: <RemoveDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} liqInfo={liqInfo}  \n\t\t\t\t\t\t\t\t\t\t\taddress={address} wallet={wallet} version={version} unit={version === 'v1' || version === 'v2_lite' || version === 'option' ? lang['shares'] :baseToken} afterRemove={afterClick} baseTokenId={baseTokenId} symbolId={symbolId} lang={lang}/>\n\t\t\t}\t\t\t\n\t\t\t{buttonElment}\n  </div>\n  )\n}\n\nexport default inject('wallet','loading')(observer(Liquidity))","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport Button from '../../../Button/Button';\nimport Modal from 'react-modal'\nimport { addLiquidity, getWalletBalance, bg, addLpLiquidity } from '../../../../lib/web3js/indexV2';\nimport useSpecification from '../../../../hooks/useSpecification';\nimport useDisableScroll from '../../../../hooks/useDisableScroll';\nimport DeriNumberFormat from '../../../../utils/DeriNumberFormat';\n\n\n\nexport default function AddLiquidity({wallet,address,baseToken,onClose,afterAdd,balance,isLpPool,baseTokenId,symbolId,lang}){\n  const [amount, setAmount] = useState('0');\n  const [decimal, setDecimal] = useState('00');\n  const [addValue, setAddValue] = useState('')\n  const spec = useSpecification({wallet,address,symbolId});\n  useDisableScroll();\n\n\n  const input = (e) => {\n    const {value} =e.target\n    setAddValue(value)\n  }\n\n  const addAll = () => {\n    setAddValue(balance);\n  }\n\n  const addLiq = async () => {\n    const max = bg(balance)\n    const cur = bg(addValue);\n    if(cur.gt(max)) {\n      alert(lang['not-sufficient-funds']);\n      return false;\n    }\n    if(spec && (+addValue) < (+spec.minAddLiquidity)) {\n      alert(`${lang['the-input-liquidity-shall-not-be-less-than']} ${spec.minAddLiquidity}`);\n      return false;\n    }\n    if(addValue <=0 || isNaN(addValue)){\n      alert(lang['it-has-to-be-greater-than-zero']);\n      return false;\n    }\n    let res =  null;\n    if(isLpPool){\n      res = await addLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue);\n    } else{\n      res = await addLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue,baseTokenId)\n    }\n    \n    if (!res ||  !res.success) {\n      alert(lang['failure-of-transaction']);\n    }\n    return true;\n  }\n\n  useEffect(() => {    \n    const amount = (+balance).toFixed(2)\n    const decimal = amount.substring(amount.indexOf('.') + 1,amount.length)\n    setAmount(amount);\n    setDecimal(decimal)\n    return () => {};\n  }, [balance]);\n\n\n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>{lang['add-liquidity']}</div>\n            <div className='close' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>{lang['wallet-balance']}</div>\n              <div className='money'>\n                <span> \n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={amount } thousandSeparator={true} allowZero={true} decimalScale={0}/>.\n                    <span className='float'><NumberFormat displayType='text' value ={decimal} thousandSeparator={true} decimalScale={2} allowZero={true}/></span>\n                  </span> \n                    <div className='base-token'>{ baseToken }</div> \n                  </span>\n                <span className='add'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : addValue ? 'block' : 'none'}}>{lang['liquidity']}</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder={lang['liquidity']}\n                      value={addValue}\n                      onChange={input}\n                    />\n                  </div>\n                </div>\n                <div>{ baseToken }</div>\n              </div>\n              <div className='max'>\n                {lang['max']}: <span className='max-num'><DeriNumberFormat value={balance} decimalScale={8}/></span>\n                <span className='max-btn-left' onClick={addAll}>{lang['add-all']}</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button className='margin-btn' click={addLiq} btnText={lang['add']} afterClick={afterAdd} lang={lang}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport { removeLiquidity, bg, removeLpLiquidity } from '../../../../lib/web3js/indexV2';\nimport Button from '../../../Button/Button';\nimport useDisableScroll from '../../../../hooks/useDisableScroll';\nimport DeriNumberFormat from '../../../../utils/DeriNumberFormat';\n\nexport default function RemoveLiquidity({wallet,address,liqInfo,onClose,afterRemove,isLpPool,baseTokenId,unit,lang,version}){  \n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [decimal, setDecimal] = useState('00');\n  useDisableScroll();\n\n\n  const addAll = () => {\n    setAmount(liqInfo.totalShares)\n  }\n\n  const onChange = e => {\n    const {value} = e.target;\n    setAmount(value)\n  }\n\n  const remove = async () => {\n    const max = bg(liqInfo.totalShares);\n    const cur = bg(amount);\n    if (cur.gt(max)) {\n      alert(`${lang['your-current-max-removable-shares-are']}  ${liqInfo.totalShares}`);\n      return false;\n    }\n    if(!isLpPool && version === 'v1'){\n      const balance = (+liqInfo.totalShares) - (+amount)\n      if (balance < 1 && balance > 0) {\n        alert(lang['staking-max-limit-tip']);\n        return false;\n      }\n    }\n    if (+amount <= 0 || isNaN(amount)) {\n      alert(lang['invalid-liquidity']);\n      return false;\n    }\n    let res = null;\n    if(isLpPool){\n      res = await removeLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\n    } else {\n      res = await removeLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount,baseTokenId,max.eq(cur));\n    }\n    \n    if(!res || !res.success){\n      alert(lang['failure-of-transaction']);\n      return false; \n    }\n    return true;\n  }\n\n\n  useEffect(() => {    \n    if(liqInfo && liqInfo.formatShares){\n      const balance = liqInfo.formatShares;\n      const decimal = balance.substring(balance.indexOf('.') +1 ,balance.indexOf('.') + 3)\n      setBalance(balance);\n      setDecimal(decimal)\n    }\n    return () => {};\n  }, [liqInfo.totalShares]);\n\n  \n  \n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>{lang['remove-liquidity']}</div>\n            <div className='close' data-dismiss='modal' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>          \n            <div className='margin-box-info'>\n              <div> {version === 'v1' || version === 'v2_lite'  || version === 'v2_lite_open' ? lang['shares-available'] : lang['liquidity-available']}</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={balance} decimalScale={0} thousandSeparator={true}/>.\n                    <span className='float'>{decimal}</span>\n                  </span>\n                    </span>\n                <span className='remove'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount ? 'block' : 'none'}}>\n                      {version === 'v1' || version === 'v2_lite'  || version === 'v2_lite_open'  ? lang['liquidity-shares'] : lang['liquidity']}\n                    </div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder={version === 'v1' || version === 'v2_lite'  || version === 'v2_lite_open'  ? lang['liquidity-shares'] : lang['liquidity']}\n                      value={amount}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div>\n                 {version === 'v2' ? unit : lang['shares']}\n                </div>\n              </div>\n              <div className='max'>\n                <span>{lang['max-removeable']}</span>\n                <span className='max-num'><DeriNumberFormat value={liqInfo.totalShares} decimalScale={8}/></span>\n                <span className='max-btn-left' onClick={addAll}>{lang['remove-all']}</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button click={remove} className='margin-btn' btnText={lang['remove']} afterClick={afterRemove} lang={lang}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n      )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\n\nfunction LiquidityMining(props){\n  return (\n    <div className=\"liquidity-info\">\n      {props.version !== 'v2_lite_open' &&<Claim {...props} miningClaim={true}/>}\n      <Liquidity {...props}/>\n  </div>)\n}\n\nexport default LiquidityMining","import { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js/indexV2';\nimport { useHistory } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport { storeConfig, eqInNumber } from '../../../utils/utils';\nimport Config from '../../../model/Config';\n\nconst configInfo = new Config();\n\n\nfunction Liquidity({wallet = {},version,chainId,address,symbolId,lang}) {\n  const [userInfoInPool,setUserInfoInPool] = useState({})\n  const [tradeSummary, setTradeSummary] = useState({});\n  const history = useHistory();\n\n\tconst loadUserInfoInPool = async () => {\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\n\t}\n\n\tconst getTradeInfo = async () => {\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\n  }\n  \n  const toTrade = () => {\n    const configs = configInfo.load(version);\n    const config = version.isV1 ? configs.find(c => eqInNumber(c.pool,address)) : configs.find(c => eqInNumber(c.pool,address) && c.symbolId === symbolId)\n    storeConfig(version.current,config)\n    history.push('/lite')\n  }\n\n\tuseEffect(() => {\n\t\tif(wallet && wallet.account){\n\t\t\tloadUserInfoInPool();\n\t\t\tgetTradeInfo();\n\t\t}\n\t\treturn () => {};\n\t}, []);\n\n  return(\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">{lang['trade-to-earn-deri']}</div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">{lang['total-trading-volume-in-current-hour']}</div>\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent || 0}</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">{lang['my-trading-volume-in-current-hour']}</div>\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent || 0 }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd claim-network\">\n              \n        </div>\n        <div className=\"claim-btn\">\n            <button className=\"claim\" onClick={toTrade}>\n              {lang['trade']}\n            </button>\n        </div>\n    </div> \n  )\n}\nexport default inject('version')(observer(Liquidity))"],"sourceRoot":""}