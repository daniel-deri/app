{"version":3,"sources":["lib/web3js/shared/utils/time.js","lib/web3js/shared/index.js","lib/web3js/shared/config/constant.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/utils/web3.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/Intl.js","lib/web3js/shared/factory/index.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/utils/api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/config/token.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/shared/config/env.js","model/Type.js","model/Version.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/convert.js","lib/web3js/shared/config/pool_v1.js","utils/utils.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/config/version.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/config/chain.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/config/config.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/web3.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite_open/config.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/shared/api/ERC20_api.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/v2_lite/contract/index.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/WebSocket.js","components/hoc/withModal.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","model/Config.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Loading.js","index.js","model/Trading.js"],"names":["SECONDS_IN_A_DAY","getDBAddress","env","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getConfig","version","config","getJsonConfig","pools","openConfigListCache","get","Array","isArray","i","length","poolProcessor","poolValidator","getPoolConfigList","map","pool","result","bTokens","bToken","symbols","symbol","push","pToken","lToken","router","initialBlock","chainId","bTokenId","bTokenSymbol","symbolId","unit","type","versionId","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","pricer","volatilitySymbols","expandPoolConfigOption","getPoolConfig","poolAddress","getPoolVersion","LITE_AND_OPTION_VERSIONS","includes","undefined","res","toString","poolConfigList","DeriEnv","check","filter","Error","getFilteredPoolConfigList","VERSIONS","reduce","acc","concat","getPoolV1ConfigList","index","findIndex","v","getPoolVersionId","_getPoolConfig","find","p","getPoolConfig2","defaultSymbol","b","bTokenCount","symbolCount","getPoolBTokenList","bTokenAddress","getPoolBTokenIdList","getPoolSymbolList","s","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","address","getBrokerConfigList","brokerManager","getBrokerConfig","filteredByChainId","c","checkChainId","getChainIds","checkAddress","toChecksumAddress","err","checkApiInput","accountAddress","checkApiInputWithoutAccount","checkTokenId","tokenId","test","checkAmount","amount","checkSymbolId","symbolIds","indexOf","join","contractFactory","klass","instances","key","Object","keys","processResult","val","propList","prop","fromWei","processObjectResult","processMethod","methodName","originMethod","prototype","async","args","apply","this","getLiquidity","_call","stateValues","liquidity","getLastTimestamp","lastTimestamp","getProtocolFeeAccrued","protocolFeeAccrued","MAX_GAS_AMOUNT","ContractBase","contractAddress","contractAbi","a","web3","web3Factory","contract","eth","Contract","method","retry","_init","methods","call","console","log","gas","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","_estimatedGas","txRaw","to","numberToHex","value","data","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","intRe","deleteIndexedKey","obj","intKeyCount","k","newObj","forEach","getLatestBlockNumber","getBlockNumber","getBlockInfo","blockNumber","getBlock","getPastEvents","eventName","fromBlock","events","es","toBlock","e","getPastEventsUseAbi","fundingRateCache","resourceMap","set","resource","priceCache","_accountAddress","_price","_interval","_update","getPriceFromRest","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","multiplier","perpetualPool","perpetualPoolFactory","getParameters","_ws","unlock","getPoolV1Config","bTokenFactory","success","transaction","depositMargin","pPool","naturalToDeri","withdrawMargin","pTokenAddress","pTokenFactory","deriToNatural","getPriceInfoForV1","price","getPositionInfo","volume","margin","cost","minInitialMarginRatio","maxWithdrawMargin","calculateMaxWithdrawMargin","bg","lte","_transact","addLiquidity","removeLiquidity","shares","lTokenAddress","lTokenFactory","all","balance","totalSupply","lTokenBalance","lTokenTotalSupply","minPoolMarginRatio","getStateValues","tradersNetVolume","tradersNetCost","maxRemovableShares","calculateMaxRemovableShares","tradeWithMargin","newVolume","orderValidation","isOrderValid","message","closePosition","negated","eq","processTradeEvent","info","txHash","feeRatio","tradeVolume","_getTimeStamp","timeStamp","direction","gt","time","timestamp","transactionFee","_calculateFee","notional","abs","times","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getTradeHistory2","fetchJson","getHttpBase","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","sort","getSpecification","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","addresses","averageEntryPrice","calculateEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","calculateLiquidationPrice","calculateMarginHeld","calculatePnl","getLiquidityInfo","balanceOf","poolDynamicEquity","plus","minus","poolLiquidity","shareValue","calculateShareValue","getWalletBalance","isUnlocked","getEstimatedFee","parameters","getFundingRate","catch","getPoolInfoApy","poolInfo","fundingRate","fundingRatePerBlock","volume24h","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","validateArgs","fundingRate1","calculateFundingRate","processFundingRate","getLiquidityUsed","liquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","poolMarginRatio","liquidityUsed1","calculateLiquidityUsed","PerpetualPoolLiteOld","perpetualPoolLiteOldAbi","getAddresses","pTokenLiteFactory","lTokenLiteFactory","getActiveSymbolIds","activeSymbolIds","offChainOracleSymbolIds","getSymbol","activeSymbolNames","oracleAddress","o","checkOffChainOracleSymbol","offChainOracleSymbols","init","getPosition","positions","protocolFeeCollectRatio","cumulativeFundingRate","prices","getPriceInfos","priceInfos","values","r","_getSymbolPrices","factory","perpetualPoolLiteFactory","LTokenLite","PTokenLite","_getLiquidityInfo","PerpetualPoolLiteViewer","parameterInfo","promises","totalPnl","catchApiError","catchTxApiError","isMaximum","div","dynamicCost","tmp","max","minMargin","gte","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastCumulativeFundingRate","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","accum","discount","pnl","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","min","_prices","split","isNaN","parseFloat","Date","now","liquidatePriceCache","_cache","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","_symbol","getOraclePriceFromCache2","f","onChainSymbolPrices","oraclePricesCache","offChainSymbolPrices","symbolPrices","shift","_getFundingRate","symbolIndex","symbolInfo","liquidityUsedInAmount","addMargin","removeMargin","getMargin","trade","calculateTxFee","symbolIdList","account","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","Math","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","volatility","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","startsWith","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","normalizeOptionSymbol","toNumberForObject","underlier","getLiquidationPrices","oracleSymbols","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","lastCumulativePremiumFundingRate","operator","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","delay","ms","volatilitiesCache","cache","pending","floor","getOracleVolatilitiesForOption","EverlastingOption","constructor","super","viewerAddress","viewer","isEqualSet","Set","activeSymbols","symbolVolatilities","getPoolStates","getVolatilitySymbols","_updateConfig","volatilities","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","event","block","indexPrice","tradeFee","tradeCost","contractValue","extra","optionPricerAbi","OptionPricer","everlastingOptionFactory","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","getIndexInfo","url","tokens","symbolName","getTraderStates","volPrice","wrappedOracleFactory","getPrice","timePrice","markPrice","dpmmPrice","marginHeldBySymbol","unrealizedPnlList","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getEverlastingTimeValueAndDelta","pricerAddress","formatTradeEvent","tr","createPool","pairedTokenAddress","normalizeChainId","getPoolV2LiteManagerConfig","poolManagerAddress","poolManager","perpetualPoolLiteManagerFactory","newParameters","addSymbol","perpetualPoolLite","createOracle","feedAddress","feedContract","chainlinkFeedFactory","oracleFactoryConfig","getOracleFactoryChainlinkConfig","oracleFactory","oracleFactoryChainlinkFactory","getPTokenAirdropConfig","prod","dev","getDeriVoteConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isUserPTokenExist","isBTokenUnlocked","hasRequiredBalance","unlockBToken","airdropPToken","keyPrefix","getStakingTop10Users","db","databaseActivityFactory","n","fill","getValues","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getVotingResult","databaseDeriVoteFactory","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","option","vote","deriVote","voteId","getContractAddressConfig","getPoolV2ConfigList","ALL_EXCEPT_OPEN_VERSIONS","bTokenIdList","getBToken","getAsset","bTokenInfo","lTokenAsset","lastCumulativePnl","approximatePnl","cumulativePnl","getPoolLiquidity","databaseFactory","poolNetwork","getNetworkName","apy","volume1h","routerAddress","perpetualPoolRouter","perpetualPoolRouterFactory","minBToken0Ratio","validation","bTokenDiscounts","bTokenMultiplier","symbolConfigList","symbolList","getLastUpdatedBlockNumber","getMargins","getPositions","getOraclePrice","positionInfo","margins","latestPrice","fundingFee","idx","getEstimatedLiquidatePrice","promiseList","bTokenInfoList","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","PRESERVED_SYMBOLS","priceInfo","baseUrl","isProdChain","addSymbolParam","getOracleServerUrl","fetch","mode","headers","Accept","body","JSON","stringify","ok","json","calculateK","alpha","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","offChainOracleFactory","signer","signatory","processTxMethod","toWeiArgPositions","newArgs","arg","toWei","isEstimatedApi","getPoolStateValues","getFundingPeriod","ERC20Factory","offChainOracleSymbolNames","normalizeSymbolUnit","getSymbols","indexPrices","funding","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","requiredInitialMargin","perpetualPoolLiteAbi","PerpetualPoolLite","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteDpmmFactory","addMethods","lTokenLiteAdapter","pTokenLiteAdapter","poolApiFactory","removable","leverage","funding0","funding1","api","range","lengths","getLengths","perpetualPoolRouterDpmmFactory","bTokenIds","bTokenOracle1Factory","equity","bTokenSymbols","userState","toUpperCase","getBTokens","bTokenIndex","tradersNetPosition","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","totapPnl","totalEquity","m","totalNotional","lTokenAbi","LToken","pTokenAbi","PToken","perpetualPoolAbi","PerpetualPool","perpetualPoolRouterAbi","PerpetualPoolRouter","infos","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","usedByEstimatedApi","balances","LITE_VERSIONS","getLiquidityInfoV2l","getLiquidityInfoOption","apiV2lDpmm","apiV2Dpmm","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2","getPoolLiquidity1","getPoolInfoApyV2","getPoolInfoApy1","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getLastUpdateBlock","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosOption","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","getPoolBTokensBySymbolIdV2","getEstimatedTimePrice","toNumber","getEstimatedTimePriceOption","unlockV2l","unlockOption","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistory","ids","volumes","id","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","require","path","lang","page","toLowerCase","pageName","Intl","locale","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","getOracleUrl","getPriceInfo","mapToBTokenInternal","RestOracle","mapToSymbolInternal","getOracleConfig","oracle","decimal","getOraclePrice2","getOracleInfosFromRest","os","getRestServerConfig","resp","fetchRestApi","opts","func","defaultValue","errorMessage","protocolFeeCollector","decimals0","swapperAddress","decimals","getStorageAt","hexToNumber","MAX_INT256","processAsset","processPosition","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","optionSymbol","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","mapToSymbol","mapToBToken","re","RegExp","replace","internalSymbol","customIndexs","IMEME","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","signed","args1","args2","CONTRACT_ABI","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","pTokenInstanceMap","lTokenInstanceMap","TERC20","TERC20Abi","spender","BToken","TERC20Factory","DeriContract","allowance","MAX_UINT256","_balanceOf","MiningVaultPool","MiningVaultRouter","WormholeContract","toChainId","getDeriConfig","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","BrokerManager","pTokenAirdropFactory","PTokenAirdrop","held","poolMaxVolume","_deriEnv","Type","current","makeAutoObservable","setCurrent","isFuture","isV1","isV2","isV2Lite","zone","switch","chainIds","normalizeAddress","Web3","utils","every","validateObjectKeyExist","keyList","valName","validateIsArray","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","toFixed","hexToString","hexToUtf8","deriToString","deriToBool","sd","formatBN","bigNumber","toFormat","replaceAll","isBrowser","document","isJsDom","userAgent","set1","set2","size","has","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","dToken","MiningVault","retired","getLpConfigList","isLp","getMiningVaultRouterConfig","filteredConfig","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","Deri","Wormhole","getDeriConfigList","deriAddress","getMiningVaultConfig","dTokenAdress","MinningVaultAddress","chainInfo","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","Number","storeConfig","sessionStorage","setItem","getConfigFromStore","parse","getItem","storeChain","restoreChain","code","hasParam","param","urlString","location","href","URL","searchParams","getParam","getFormatSymbol","curChain","chain","getMarkpriceSymbol","equalIgnoreCase","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","total","list","network","formatAdd","airdrop","combineSymbolfromPoolConfig","configs","pos","mapPoolInfo","wallet","name","buttonText","assign","getUserInfo","userAddress","deadline","nonce","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","databaseAirdropFactory","v1","r1","s1","v2","r2","s2","pancakePairAbi","PancakePair","ERC20Adapter","ERC20Abi","ERC20","chainlinkOracleAbi","ChainlinkOracle","offChainOracleAbi","inputs","internalType","stateMutability","outputs","OffChainOracle","offChainVolatilityOracleAbi","OffChainVolatilityOracle","TERC20MintLimitAbi","TERC20MintLimit","bTokenOracle1Abi","BTokenOracle1","offChainOracleAdapter","offChainVolatilityOracleAdapter","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","getReserves","reserveQ","_reserve0","reserveB","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","tmpPairState","bTokenOracle1Adapter","bTokenAbi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","getChainProviderUrls","provider_urls","getDailyBlockNumberConfig","chainBlockNumberList","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","updateAddresses","block_number","extraInfo","getBTokenSymbol","getPoolExtraInfo","PerpetualPoolLiteManager","poolId","perpetualPoolLiteViewerFactory","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","jsonConfig","SymbolOracleOffChain","WooOracle","wooOracleAddresses","instanceMap","wooOracleFactory","WrappedOracle","getPoolOpenConfigList","openPoolChainIds","getNumPools","poolNums","numsArray","getPoolOpenOracleList","oracles","eventBlock","isPoolController","controller","poolController","getPoolAcitveSymbolIds","oldData","updatedAt","databaseInstanceMap","database","databaseWormholeFactory","web3InstanceMap","walletChainId","getChainProviderUrl","providerUrl","providers","HttpProvider","testnet","v2_lite","v2_lite_open","getOracleConfigList","urls","getLatestRPCServer","blockNumbers","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","reload","getUserWalletBalance","walletAddress","getBalance","getUserWormholeSignature","databaseWormhole","signature","deri","getDeriBalance","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","mintAirdrop","miningVaultRouter","mint","setBroker","brokerAddress","brokerManagerAddress","getAirdropPTokenAddress","getAirdropPTokenWhitelistCount","totalWhitelistCount","getSlpLiquidityInfo","bTokenBalance","addSlpLiquidity","removeSlpLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","getClpLiquidityInfo","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","mintTERC20","testERC20","deepClone","clone","shuffleArray","newUrls","random","splice","duration","MAX_SAFE_INTEGER","startTime","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","process","WebSocket","socket","io","transports","withCredentials","emit","onMessage","listener","time_type","findEvent","withModal","appElement","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","Config","setAll","isOptions","cur","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","top","MaskWrapper","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","startAll","started","runInAction","loadAll","startedAll","load","timer","pause","resume","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","isLoading","setIsLoading","trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","store","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","refreshCache","fromStore","getFromStore","setPaused","groupConfigBySymbol","markpriceSymbolFormat","increment","MarginRatio","substring","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","curContractValue","afterLeverage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.54651eb5.chunk.js","sourcesContent":["\r\nconst paddingDate = (date) => {\r\n  date = date.toString()\r\n  if (date.length === 1) {\r\n    return '0' + date\r\n  } else {\r\n    return date\r\n  }\r\n}\r\nexport const getEpochTimeRange = (time) => {\r\n  //console.log('1', time.getTime()/1000)\r\n  const year = time.getUTCFullYear()\r\n  const month = time.getUTCMonth()\r\n  const day = time.getUTCDate()\r\n  let epochs = []\r\n  for (let i = 0; i< 3; i++) {\r\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\r\n    //console.log(newDate.getTime()/1000)\r\n    epochs.push(newDate)\r\n  }\r\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\r\n  let index = -1\r\n  for (let i = 0; i< epochs.length; i++) {\r\n    //console.log(i, epochs[i].getTime()/1000)\r\n    if (time.getTime() < epochs[i].getTime()) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  if (index !== -1) {\r\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\r\n  }\r\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\r\n}","export * from './config'\r\nexport * from './utils'\r\nexport { ContractBase } from './contract';\r\nexport * from './factory'\r\nexport * from './api'","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\n// import { validateObjectKeyExist } from '../utils';\r\nimport { poolProcessor, poolValidator } from './config_processor';\r\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\n\r\nconst expandPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            type: 'perpetual',\r\n            version: 'v2',\r\n            versionId: pool.versionId,\r\n            isOption: false,\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          type: 'perpetual',\r\n          version: 'v2_lite',\r\n          versionId: pool.versionId,\r\n          isOption: false,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigOption = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          pricer: pool.pricer,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          volatilitySymbols: pool.volatilitySymbols,\r\n          unit: symbol.unit,\r\n          type: 'option',\r\n          version: 'option',\r\n          versionId: pool.versionId,\r\n          isOption: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      if (pool.symbols.length > 0) {\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: pool.bToken,\r\n            bTokenSymbol: pool.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            offchainSymbolIds: pool.offchainSymbolIds,\r\n            offchainSymbols: pool.offchainSymbols,\r\n            unit: symbol.unit,\r\n            type: 'perpetual',\r\n            version: 'v2_lite_open',\r\n            versionId: pool.versionId,\r\n            isOpen: true,\r\n          });\r\n        }\r\n      } else {\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: '--',\r\n          symbolId: '',\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: '',\r\n          type: 'perpetual',\r\n          version: 'v2_lite_open',\r\n          versionId: pool.versionId,\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getConfig = (version='v2', env='dev') => {\r\n  let config = getJsonConfig(version, env);\r\n  if (version === 'v2_lite_open') {\r\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n      //console.log('hit openConfigListCache')\r\n    config.pools = openConfigListCache.get()\r\n    //}\r\n  }\r\n\r\n  const pools = config.pools;\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n\r\n  //validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n  return config;\r\n};\r\n\r\nexport const getPoolConfigList = (version = 'v2', env = 'dev') => {\r\n  let config;\r\n  config = getConfig(version, env);\r\n  if (version === 'v2') {\r\n    return expandPoolConfigV2(config);\r\n  } else if (version === 'v2_lite') {\r\n    return expandPoolConfigV2Lite(config, version);\r\n  } else if (version === 'v2_lite_open') {\r\n    return expandPoolConfigV2LiteOpen(config);\r\n  } else if (version === 'option') {\r\n    return expandPoolConfigOption(config);\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  //console.log('version', version, poolAddress)\r\n  // check the bToken in v2_lite\r\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\nexport const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  //console.log(pools)\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const getPoolVersionId = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  if (index >= 0) {\r\n    return pools[index].versionId\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  // console.log('version', version)\r\n  const config = getConfig(version, DeriEnv.get());\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool;\r\n  } else {\r\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n  }\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\r\n  }\r\n  if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  bToken = bToken || defaultBToken;\r\n  symbol = symbol || defaultSymbol\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const env = DeriEnv.get()\r\n  const config = getJsonConfig(version, env)\r\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getJsonConfig(version, DeriEnv.get())\r\n  if (config.brokerManager) {\r\n    return config.brokerManager\r\n  } else {\r\n    // default value\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getBrokerConfig = (version='v2', chainId) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","// utils for derijsnext, combine in one file\r\nimport { getChainIds } from '../config/chain';\r\nimport { fromWei, toWei, toChecksumAddress } from './convert';\r\n\r\nexport const checkChainId = (chainId) => {\r\n  chainId = chainId != null ? chainId.toString() : chainId \r\n  if (getChainIds().includes(chainId)) {\r\n    return chainId;\r\n  }\r\n  throw new Error(`invalid chainId '${chainId}'`);\r\n};\r\n\r\nexport const checkAddress = (address) => {\r\n  address = address != null ? address.toString() : address\r\n  try {\r\n    return toChecksumAddress(address)\r\n  } catch(err) {\r\n    // console.log('-- checkAddress(): ', err)\r\n    throw new Error(`invalid eth address '${address}'`)\r\n  }\r\n}\r\n\r\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\r\n  return [\r\n    checkChainId(chainId),\r\n    checkAddress(poolAddress),\r\n    checkAddress(accountAddress),\r\n  ];\r\n};\r\n\r\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\r\n  return [checkChainId(chainId), checkAddress(poolAddress)];\r\n};\r\n\r\nexport const checkTokenId = (tokenId) => {\r\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\r\n  if (/^\\d+$/.test(tokenId)) {\r\n    return tokenId\r\n  }\r\n  throw new Error(`invalid tokenId '${tokenId}'`)\r\n}\r\n\r\nexport const checkAmount = (amount) => {\r\n  amount = amount != null ? amount.toString() : amount\r\n  if (/^-?[\\d\\.]+$/.test(amount)) {\r\n    return amount\r\n  }\r\n  throw new Error(`invalid amount '${amount}'`)\r\n}\r\n\r\nexport const checkSymbolId = (symbolId, symbolIds) => {\r\n  if (symbolId != null) {\r\n    const index = symbolIds.indexOf(symbolId.toString())\r\n    if (index > -1) {\r\n      return index\r\n    }\r\n  }\r\n  throw new Error(`invalid symbolId '${symbolId}' for symbolIds(${symbolIds.join(',')}) `);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address, initialBlock='') => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address, initialBlock);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// contract\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = fromWei(val[prop]);\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const processResult = (val, propList = []) => {\r\n  if (Array.isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (typeof val === 'object' && val !== null) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return fromWei(val);\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n// api for v2_lite and option\r\nexport const getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getPoolLiquidity'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.liquidity = fromWei(res[0]);\r\n    return this.stateValues.liquidity\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getLastTimestamp'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.lastTimestamp = res[1];\r\n    return this.stateValues.lastTimestamp\r\n  };\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\r\n    return this.stateValues.protocolFeeAccrued;\r\n  };\r\n  return klass;\r\n}","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        console.log(`-- estimatedGas: ${error}`)\r\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        // if (Array.isArray(res) && res.length >= 2) {\r\n        //   throw new Error(res[1].trim())\r\n        // }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          //receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\nconst intRe = /^\\d+$/\r\n// adopt from derijs next\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\r\n    const keys = Object.keys(obj);\r\n    const intKeyCount = keys.reduce(\r\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\r\n      0\r\n    );\r\n    //console.log(keys);\r\n    // is leaf array\r\n    if (intKeyCount * 2 === keys.length) {\r\n      let newObj = {};\r\n      Object.keys(obj).forEach((k) => {\r\n        if (!intRe.test(k)) {\r\n          newObj[k] = obj[k];\r\n        }\r\n      });\r\n      return newObj;\r\n    } else if (intKeyCount === keys.length) {\r\n      // is array container\r\n      let res = [];\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (Array.isArray(obj[i])) {\r\n          res.push(deleteIndexedKey(obj[i]));\r\n        } else {\r\n          res.push(obj[i]);\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n\r\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n  deriToNatural,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: bTokenSymbol,\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline ] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      )\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      multiplier,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","import {\r\n  //getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  //isEqualSet,\r\n  bTokenFactory,\r\n} from '../../shared';\r\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteOldAbi} from './abis';\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\r\n\r\nexport class PerpetualPoolLiteOld extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\r\n  }\r\n\r\n  async init() {\r\n    // init web3 and contract\r\n    await this._init();\r\n    // init address and parameters\r\n    if (!this.addresses || !this.pToken) {\r\n      [this.addresses, this.parameters] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n      ]);\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      // init bToken, pToken and lToken\r\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.bTokenSymbol = await this.bToken.symbol();\r\n    }\r\n    const symbolIds = await this.pToken.getActiveSymbolIds();\r\n    // update symbolIds\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\r\n      this.offChainOracleSymbolIds == null\r\n    ) {\r\n      this.activeSymbolIds = symbolIds;\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n      this.offChainOracleSymbols = await Promise.all(\r\n        this.symbols\r\n          .map((s) => s.oracleAddress)\r\n          .reduce(\r\n            (acc, o, index) => [\r\n              ...acc,\r\n              checkOffChainOracleSymbol(\r\n                this.chainId,\r\n                o,\r\n                this.symbols[index].symbol\r\n              ),\r\n            ],\r\n            []\r\n          )\r\n      );\r\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n        (acc, i, index) => {\r\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\r\n        },\r\n        []\r\n      );\r\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\r\n        (s) => s && s !== ''\r\n      );\r\n      //console.log('offchain', this.offChainOracleSymbols);\r\n    }\r\n  }\r\n\r\n  // update symbols\r\n  async getSymbols() {\r\n    await this.init()\r\n    this.symbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n    return this.symbols\r\n  }\r\n\r\n  // update positions\r\n  async getPositions(accountAddress) {\r\n    await this.init()\r\n    this.positions = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [\r\n          ...acc,\r\n          this.pToken.getPosition(accountAddress, symbolId),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    return this.positions\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    return res;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res);\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = [];\r\n    await this.init()\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import {\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// const factoryWithUpgrade = (klass, klassOld, newPoolList) => {\r\n//   let instances = {}\r\n//   return (chainId, address, initialBlock='') => {\r\n//     const key = address\r\n//     if (Object.keys(instances).includes(key)) {\r\n//       return instances[key];\r\n//     } else {\r\n//       if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\r\n//         instances[key] = new klass(chainId, address, initialBlock);\r\n//         return instances[key];\r\n//       } else {\r\n//         instances[key] = new klassOld(chainId, address, initialBlock);\r\n//         return instances[key];\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLiteOld);\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\r\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const lToken = perpetualPool.lToken\r\n  // const pToken = perpetualPool.pToken\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  //const symbolIndex = symbolIds.indexOf(symbolId)\r\n  //const symbols = perpetualPool.symbols\r\n\r\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    //perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    //pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bg(bToken.liquidity).minus(\r\n          bg(minPoolMarginRatio)\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        bg(userLiquidity)\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const liquidatePriceCache = (function() {\r\n  let _cache = {}\r\n  return {\r\n    get(address) {\r\n      if (Object.keys(_cache).includes(address)) {\r\n        return _cache[address]\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n    set(address, val) {\r\n      _cache[address] = val\r\n    },\r\n  }\r\n})()\r\n","import { fromWei } from \"../shared\";\r\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\r\n\r\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\r\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\r\n    offChainSymbolIds.indexOf(s.symbolId) > -1\r\n      ? ''\r\n      : s.oracleAddress\r\n  );\r\n\r\n  const onChainSymbolPrices = await Promise.all(\r\n    onChainOracleAddressWithPlaceHolder\r\n      .reduce((acc, address, index) => {\r\n        const _symbol = symbols.map((s) => s.symbol)[index];\r\n        if (address !== '') {\r\n          return acc.concat(\r\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n          );\r\n        } else {\r\n          return acc.concat('');\r\n        }\r\n      }, [])\r\n      .filter((f) => f !== '')\r\n  );\r\n\r\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\r\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\r\n\r\n  // combine offChain and onChain symbol prices\r\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\r\n    if (o !== '') {\r\n      return onChainSymbolPrices.shift();\r\n    } else {\r\n      return offChainSymbolPrices.shift();\r\n    }\r\n  });\r\n  return symbolPrices\r\n};","import {\r\n  calculateEntryPrice,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { getSymbolPrices } from '../utils';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const bTokenSymbol = perpetualPool.bTokenSymbol\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    if (symbolIndex > -1) {\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      //const symbol = symbols[symbolIndex].symbol\r\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        symbolInfo,\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        positionInfo,\r\n        margin,\r\n        //latestPrice,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbolInfo;\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      //const symbols = await Promise.all(promises);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n      let price;\r\n      if (symbolIndex === '-1') {\r\n        price = '0';\r\n      } else {\r\n        price = symbolPrices[symbolIndex];\r\n        priceCache.set(poolAddress, symbolId, price);\r\n      }\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [\r\n          s.symbol,\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n            .toString(),\r\n        ];\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n      const dynamicCost = symbols.reduce((accum, s, index) => {\r\n        if (index !== symbolIndex) {\r\n          return accum.plus(\r\n            bg(positions[index].volume)\r\n              .times(symbolPrices[index])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n\r\n      liquidatePriceCache.set(poolAddress, {\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol:symbols[symbolIndex].symbol,\r\n        price,\r\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(\r\n          volume,\r\n          cost,\r\n          multiplier\r\n        ).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee: fundingFee.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    } else {\r\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      symbol: '',\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        margin,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        //perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        //pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      const symbolList = symbols.map((s) => s.symbol);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n\r\n      return positions.map((p, index) => {\r\n      const symbolId = symbolList[index]\r\n      const symbol = symbols[index]\r\n      const price = symbolPrices[index]\r\n\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbol;\r\n      priceCache.set(poolAddress, symbolId, price);\r\n\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(\r\n            bg(positions[idx].volume)\r\n              .times(symbolPrices[idx])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n        return {\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          price,\r\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\r\n          averageEntryPrice: calculateEntryPrice(\r\n            volume,\r\n            cost,\r\n            multiplier\r\n          ).toString(),\r\n          margin: margin.toString(),\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          //unrealizedPnlList,\r\n          fundingFee: fundingFee.toString(),\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            multiplier,\r\n            minMaintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      }).filter((p) => p.volume !== '0')\r\n  }, args, 'getPositionInfos', [])\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n\r\n  if (symbolIndex > -1) {\r\n    const symbolInfo = symbols[symbolIndex];\r\n    // const symbol = symbols[symbolIndex].symbol;\r\n    // const isOffchainOracleSymbol =\r\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n    // const oracleAddress = isOffchainOracleSymbol\r\n    //   ? ''\r\n    //   : symbols[symbolIndex].oracleAddress;\r\n    const [liquidity, prices] = await Promise.all([\r\n      perpetualPool.getLiquidity(),\r\n      getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      ),\r\n    ]);\r\n    const price = prices[symbolIndex]\r\n    priceCache.set(poolAddress, symbolId, price);\r\n    const {\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      tradersNetVolume,\r\n      feeRatio,\r\n    } = symbolInfo;\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    const fundingRateArgs = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient,\r\n    ];\r\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\r\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\r\n\r\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .times(minPoolMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n\r\n    const res = {\r\n      price,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n      liquidity: liquidity.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock,\r\n      fundingRate: fundingRate,\r\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\r\n    };\r\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n    return res;\r\n  } else {\r\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\r\n\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    //const symbol = symbols[symbolIndex]\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    //console.log('symbol',symbol)\r\n\r\n    if (!price) {\r\n      // const symbolName = symbol.symbol;\r\n      // const isOffchainOracleSymbol =\r\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    if (symbolIndex > -1) {\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      const price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier } = symbols[symbolIndex]\r\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n    } else {\r\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\r\n    }\r\n\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    // const { bToken: bTokenAddress } = getPoolConfig(\r\n    //   poolAddress,\r\n    //   '0',\r\n    //   null,\r\n    //   'v2_lite'\r\n    // );\r\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n      await perpetualPool.init()\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const parameterInfo = perpetualPool.parameters\r\n      // const symbols = perpetualPool.symbols\r\n      const symbolIds = perpetualPool.activeSymbolIds\r\n      const [liquidity, margin] = await Promise.all([\r\n        //perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        //pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  bTokenSymbol,\r\n  symbols,\r\n  symbolIds,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const index = symbolIds.findIndex((s) => s === symbolId)\r\n  const symbol = symbols[index]\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    symbol.multiplier,\r\n    symbol.feeRatio,\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    //volume: volume.toString(),\r\n    volume: bg(volume).times(symbol.multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const { pTokenAddress } = await perpetualPool.getAddresses()\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  const symbolIdList = await pToken.getActiveSymbolIds()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      symbols,\r\n      symbolIdList,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    let promises= []\r\n    for (let i=0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    let symbols = await Promise.all(promises)\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            const index = symbolIds.indexOf(i.symbolId);\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              //volume: deriToNatural(i.volume).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\r\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\r\n              return ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\r\n                  price: prices[id].toString(),\r\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              })\r\n            } else {\r\n              // handle missing price data\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                price: '',\r\n                notional: '',\r\n                //volume: deriToNatural(i.volume).toString(),\r\n                volume: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              }\r\n            }\r\n          }\r\n        }).flat();\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","const invalidValues = [NaN, null, undefined];\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n  let u = Math.sqrt(8 / V / V / T + 1);\r\n  let timeValue, delta;\r\n  if (S > K) {\r\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\r\n    delta = ((1 - u) * timeValue) / S / 2;\r\n  } else if (S === K) {\r\n    timeValue = K / u;\r\n    delta = 0;\r\n  } else {\r\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\r\n    delta = ((1 + u) * timeValue) / S / 2;\r\n  }\r\n  return [timeValue, delta];\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(\r\n  spot,\r\n  strike,\r\n  isCall,\r\n  initialMarginRatio,\r\n  minInitialMarginRatio\r\n) {\r\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n    return initialMarginRatio;\r\n  } else {\r\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\r\n    return Math.max(\r\n      (1 - otmRatio * 3) * initialMarginRatio,\r\n      minInitialMarginRatio\r\n    );\r\n  }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(\r\n  pool,\r\n  trader,\r\n  symbols,\r\n  positions,\r\n  newUnderlierPrice\r\n) {\r\n  let newDynamicMargin = trader.dynamicMargin;\r\n  let newInitialMargin = trader.initialMargin;\r\n\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    let symbol = symbols[i];\r\n    let position = positions[i];\r\n    if (position.volume === 0) {\r\n      continue;\r\n    }\r\n\r\n    let newIntrinsicValue = symbol.isCall\r\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\r\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.volatility,\r\n      pool.fundingPeriod\r\n    );\r\n    if (newIntrinsicValue > 0) {\r\n      newDelta += symbol.isCall ? 1 : -1;\r\n    }\r\n    let newPnl =\r\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\r\n      position.cost;\r\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.isCall,\r\n      pool.initialMarginRatio,\r\n      0.01\r\n    );\r\n\r\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\r\n    newInitialMargin =\r\n      newInitialMargin -\r\n      Math.abs(\r\n        position.volume *\r\n          symbol.spotPrice *\r\n          symbol.multiplier *\r\n          symbol.dynamicMarginRatio\r\n      ) +\r\n      Math.abs(\r\n        position.volume *\r\n          newUnderlierPrice *\r\n          symbol.multiplier *\r\n          newDynamicMarginRatio\r\n      );\r\n  }\r\n\r\n  let newMaintenanceMargin =\r\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\r\n\r\n  if (\r\n    invalidValues.includes(newMaintenanceMargin) ||\r\n    invalidValues.includes(newDynamicMargin)\r\n  ) {\r\n    throw new Error(\r\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\r\n    );\r\n  }\r\n  return newMaintenanceMargin > newDynamicMargin;\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n  if (symbols.length != positions.length) {\r\n    throw new Error(\r\n      'canLiquidateWithPrice: symbols and positions length not match'\r\n    );\r\n  }\r\n  if (symbols.length === 0) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: null,\r\n      price2: null,\r\n    };\r\n  }\r\n  let head = symbols[0].symbol.slice(0, 6);\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    if (!symbols[i].symbol.startsWith(head)) {\r\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\r\n    }\r\n  }\r\n\r\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: symbols[0].spotPrice,\r\n      price2: symbols[0].spotPrice,\r\n    };\r\n  }\r\n\r\n  let final1, final2;\r\n  let price1, price2;\r\n  let l1, l2;\r\n\r\n  price1 = symbols[0].spotPrice / 10;\r\n  price2 = symbols[0].spotPrice;\r\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\r\n  l2 = false;\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final1 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  price1 = symbols[0].spotPrice;\r\n  price2 = symbols[0].spotPrice * 10;\r\n  l1 = false;\r\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final2 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  return {\r\n    numPositions: positions.length,\r\n    price1: final1,\r\n    price2: final2,\r\n  };\r\n}\r\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'fundingPeriod',\r\n      'fundingCoefficient',\r\n      'marginMultiplier',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'volatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativeFundingRate',\r\n          'fundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        //'cumulativeDeltaFundingRate',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        //'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativeFundingRate',\r\n        //'deltaFundingAccrued',\r\n        'fundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\nimport { lTokenOptionAbi } from './abis.js'\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return fromWei(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return fromWei(res)\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n\r\n}","import { ContractBase, fromWei } from '../../shared'\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=['BTCUSD']){\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\n// export const volatilityCache = (function() {\r\n//   const cache = {}\r\n//   return {\r\n//     async get(symbol){\r\n//       const key = symbol\r\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\r\n//         const timestamp = Math.floor(Date.now()/1000)\r\n//         const res = await getPriceInfo(symbol, 'option')\r\n//         const data = deriToNatural(res.volatility).toString()\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp,\r\n//         }\r\n//         //console.log('new key')\r\n//         return cache[key].data\r\n//       } else {\r\n//         return cache[key].data\r\n//       }\r\n//     }\r\n//   }\r\n// })()\r\n\r\n// export const volatilitiesCache2 = async (symbols) => {\r\n//   return await Promise.all(\r\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\r\n//   )\r\n// }\r\n","import {\r\n  ContractBase,\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  naturalToDeri,\r\n  getPoolConfig,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n  getBlockInfo,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared';\r\nimport { getVolatilitySymbols } from '../../shared/config/token';\r\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'option'\r\n    );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    this.volatilitySymbols = this.config.volatilitySymbols;\r\n    this.bTokenAddress = this.config.bToken;\r\n    this.lTokenAddress = this.config.lToken;\r\n    this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async _updateConfig() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n    }\r\n\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\r\n    ) {\r\n      // symbol is updated\r\n      const activeSymbols = await Promise.all(\r\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n      );\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      //console.log(symbolVolatilities)\r\n      const state = await this.viewer.getPoolStates(\r\n        this.contractAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      // update state\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      this.activeSymbols = symbolState.filter((s) =>\r\n        this.activeSymbolIds.includes(s.symbolId)\r\n      );\r\n      // for tx use\r\n      this.volatilitySymbols = getVolatilitySymbols(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1];\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0]);\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatioITM',\r\n      'feeRatioOTM',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativeFundingRate',\r\n    ]);\r\n  }\r\n  async updateSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.activeSymbolIds) {\r\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    }\r\n    this.activeSymbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, i) => acc.concat([this.getSymbol(i)]),\r\n        []\r\n      )\r\n    );\r\n    return this.activeSymbols\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._updateConfig();\r\n    let volatilities = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilitiesForOption(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.activeSymbolIds[index],\r\n          p.timestamp,\r\n          p.volatility,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(lShares), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // trade history\r\n  async formatTradeEvent(event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const indexPrice = deriToNatural(info.indexPrice).toString();\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index > -1) {\r\n      const symbol = this.symbols[index];\r\n      const tradeFee = info.tradeFee;\r\n\r\n      const direction =\r\n        tradeFee !== \"-1\"\r\n          ? bg(tradeVolume).gt(0)\r\n            ? \"LONG\"\r\n            : \"SHORT\"\r\n          : \"LIQUIDATION\";\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(symbol.multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n      const contractValue = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n\r\n      const res = {\r\n        symbolId: info.symbolId,\r\n        symbol: symbol.symbol,\r\n        trader: info.trader,\r\n        direction,\r\n        volume: bg(tradeVolume).abs().toString(),\r\n        price,\r\n        indexPrice,\r\n        notional,\r\n        contractValue,\r\n        transactionFee:\r\n          tradeFee === \"-1\" ? \"0\" : deriToNatural(tradeFee).toString(),\r\n        transactionHash: event.transactionHash,\r\n        time: block.timestamp * 1000,\r\n        extra: {},\r\n      };\r\n      //console.log(JSON.stringify(res));\r\n      return res;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\n\r\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\r\n\r\nexport class OptionPricer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, optionPricerAbi)\r\n  }\r\n\r\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\r\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\r\n    return {\r\n      timeValue: fromWei(res.timeValue),\r\n      delta: fromWei(res.delta),\r\n    };\r\n  }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\nimport { OptionPricer } from '../contract/option_pricer';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);\r\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport {\r\n  lTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { lToken: lTokenAddress } = getPoolConfig(\r\n    poolAddress,\r\n    '0',\r\n    '0',\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig()\r\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","import {\r\n  bg,\r\n  max,\r\n  bTokenFactory,\r\n  catchApiError,\r\n  getPoolConfig,\r\n  fromWei,\r\n} from '../../shared';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        symbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatioOTM: feeRatioOTM.toString(),\r\n        feeRatioITM: feeRatioITM.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      //minPoolMarginRatio: '',\r\n      initialMarginRatio: '',\r\n      maintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { url: '', tokens: [] },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { symbol: symbolName} = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let symbolVolatilities = []\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolVolatilities] = await Promise.all([\r\n          volatilitiesCache.get(\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolName,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      strikePrice: '',\r\n      timePrice: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      premiumFundingAccrued: '',\r\n      liquidationPrice: '',\r\n      volatility: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let [symbolVolatilities] = await Promise.all([\r\n        volatilitiesCache.get(\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\r\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const symbolVolatilities = (\r\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  ).map((v) => v.volatility);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    [],\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, prices, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\r\n      let fee\r\n      const intrinsicValue = symbol.isCall\r\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\r\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\r\n      if (bg(intrinsicValue).gt(0)) {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.spotPrice)\r\n          .times(symbolInfo.feeRatioITM)\r\n          .toString();\r\n      } else {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.timeValue)\r\n          .times(symbolInfo.feeRatioOTM)\r\n          .toString();\r\n      }\r\n      return fee\r\n    },\r\n    args,\r\n    'getFundingFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    {\r\n      premiumFunding0: '',\r\n      premiumFundingPerSecond: '',\r\n      liquidity: '',\r\n      volume: '-',\r\n      tradersNetVolume: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    {\r\n      liquidityUsed0: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    {\r\n      liquidityUsed1: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    'getEstimatedMarkPrice',\r\n    ''\r\n  );\r\n};\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\nimport { pTokenOptionFactory} from '../factory/tokens';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'option'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import {\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  bg,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getPastEventsUseAbi,\r\n  getHttpBase,\r\n  fetchJson,\r\n  max,\r\n} from '../../shared/utils';\r\nimport { getPoolConfig, DeriEnv } from '../../shared/config';\r\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\r\nimport { everlastingOptionOldAbi } from '../contract/abis';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n  pricer\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId;\r\n  const volatility = info.volatility;\r\n  const index = symbolIdList.indexOf(symbolId);\r\n  const price = bg(tradeCost).div(\r\n    bg(tradeVolume).times(symbols[index].multiplier)\r\n  );\r\n  const indexPrice = deriToNatural(info.spotPrice);\r\n\r\n  const intrinsicValue = symbols[index].isCall\r\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\r\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\r\n  let timeValue = '0';\r\n  if (intrinsicValue.lte(0)) {\r\n    const res = await pricer.getEverlastingTimeValueAndDelta(\r\n      naturalToDeri(indexPrice),\r\n      naturalToDeri(symbols[index].strikePrice),\r\n      volatility,\r\n      naturalToDeri(bg(1).div(365).toString())\r\n    );\r\n    timeValue = res.timeValue;\r\n  }\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      indexPrice: indexPrice.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      contractValue: tradeVolume\r\n        .abs()\r\n        .times(price)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      transactionFee: intrinsicValue.gt(0)\r\n        ? volume\r\n            .times(symbols[index].multiplier)\r\n            .times(indexPrice)\r\n            .times(symbols[index].feeRatioITM)\r\n            .toString()\r\n        : volume\r\n            .times(symbols[index].multiplier)\r\n            .times(timeValue)\r\n            .times(symbols[index].feeRatioOTM)\r\n            .toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\r\n    poolAddress,\r\n    undefined,\r\n    undefined,\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const pricer = optionPricerFactory(chainId, pricerAddress);\r\n  const [toBlock] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(\r\n      optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\r\n    );\r\n  }\r\n  let symbols = await Promise.all(promises);\r\n  //let symbols = optionPool.activeSymbols\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n\r\n  const filters = { account: accountAddress };\r\n  let result = [];\r\n\r\n  if (DeriEnv.get() === 'testnet') {\r\n    let events = await getPastEvents(\r\n      chainId,\r\n      optionPool.contract,\r\n      'Trade',\r\n      filters,\r\n      fromBlock,\r\n      toBlock.number\r\n    );\r\n\r\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n    console.log('online events length:', events.length);\r\n    for (let i = 0; i < events.length; i++) {\r\n      const item = events[i];\r\n      let res;\r\n      res = await optionPool.formatTradeEvent(item);\r\n      if (res) {\r\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\r\n        result.unshift({\r\n          baseToken: bTokenSymbol,\r\n          direction: res.direction,\r\n          volume: bg(res.volume)\r\n            .times(optionPool.symbols[symbolIndex].multiplier)\r\n            .toString(),\r\n          price: res.price,\r\n          indexPrice: res.indexPrice,\r\n          notional: res.notional,\r\n          symbol: res.symbol,\r\n          symbolId: res.symbolId,\r\n          time: res.time,\r\n          contractValue: res.contractValue,\r\n          transactionFee: res.transactionFee,\r\n          transactionHash: res.transactionHash,\r\n        });\r\n      }\r\n    }\r\n  } else {\r\n    let events = await getPastEventsUseAbi(\r\n      chainId,\r\n      poolAddress,\r\n      everlastingOptionOldAbi,\r\n      'Trade',\r\n      filters,\r\n      fromBlock,\r\n      toBlock.number\r\n    );\r\n\r\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\r\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n    for (let i = 0; i < events.length; i++) {\r\n      const item = events[i];\r\n      const res = await processTradeEvent(\r\n        chainId,\r\n        item.returnValues,\r\n        item.blockNumber,\r\n        item.transactionHash,\r\n        multiplier,\r\n        bTokenSymbol,\r\n        optionPool.activeSymbolIds,\r\n        symbols,\r\n        pricer\r\n      );\r\n      res && result.unshift(res);\r\n    }\r\n  }\r\n  result = result.filter((tr) => tr !== null);\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool._updateConfig(),\r\n    ]);\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols;\r\n    //console.log('history ', tradeHistory)\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\r\n          if (index > -1 && i.direction !== 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price)\r\n                .div(symbols[index].multiplier)\r\n                .toString(),\r\n              indexPrice: deriToNatural(i.indexPrice).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              contractValue: deriToNatural(i.contractValue).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else if (i.direction === 'LIQUIDATION') {\r\n            if (\r\n              i.volume !== '' &&\r\n              i.volume.indexOf(',') > -1 &&\r\n              !i.price.startsWith('NaN')\r\n            ) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc;\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\r\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\r\n              const res = ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id]\r\n                    .times(symbols[id].multiplier)\r\n                    .abs()\r\n                    .toString(),\r\n                  price: prices[id].toString(),\r\n                  indexPrice: '',\r\n                  notional: '',\r\n                  contractValue: volumes[id]\r\n                    .abs()\r\n                    .times(prices[id])\r\n                    .times(symbols[id].multiplier)\r\n                    .toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              });\r\n              return res;\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                indexPrice: '',\r\n                notional: '',\r\n                contractValue: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            }\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null;\r\n          }\r\n        })\r\n        .flat();\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    //console.log('tradeFromBlock', tradeFromBlock)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\r\nimport { normalizeChainId } from \"../../shared/utils/validate\";\r\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\r\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\r\n      const poolManager = perpetualPoolLiteManagerFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\r\n      // send tx\r\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\r\n  }, args)\r\n}\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\r\n      // send tx\r\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\r\n  }, args)\r\n}\r\n\r\nexport const createOracle = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      feedAddress = toChecksumAddress(feedAddress)\r\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\r\n      const symbol = await feedContract.symbol()\r\n      if (typeof symbol === 'string' && symbol !== '') {\r\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n        const oracleFactory = oracleFactoryChainlinkFactory(\r\n          chainId,\r\n          oracleFactoryConfig.address\r\n        );\r\n        // process parameters\r\n        // send tx\r\n        return await oracleFactory.createOracle(\r\n          accountAddress,\r\n          symbol\r\n        );\r\n      } else {\r\n        throw new Error(\r\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\r\n        );\r\n      }\r\n  }, args)\r\n}\r\n","import { DeriEnv } from \"../shared/config\"\r\n\r\nexport const getPTokenAirdropConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n\r\nexport const getDeriVoteConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '1',\r\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\r\n      },\r\n      {\r\n        chainId: '56',\r\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\r\n      },\r\n      {\r\n        chainId: '128',\r\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\r\n      },\r\n      {\r\n        chainId: '137',\r\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getDeriVoteConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n","import Web3 from \"web3\";\r\nimport { bg } from \"../shared/utils\";\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// convert\r\nexport const toWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.toWei(number, unit);\r\n};\r\n\r\nexport const fromWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.fromWei(number, unit);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// adapter\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = bg(fromWei(val[prop])).toString();\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nconst processResult = (val, propList = []) => {\r\n  if (isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (isObject(val)) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return bg(fromWei(val)).toString();\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAirdropNULSAbi = [{\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    }, {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AirdropPToken\",\r\n        \"type\": \"event\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"airdropPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"getBTokenBalance\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isAirdropPToken\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"isStartAirdrop\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"marginUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"maxAirdropLimit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"ownerAddress\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"marginUnit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMarginUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"maxAirdropLimit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMaxAirdropLimit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeUnit_\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTradeUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"startAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"stopAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"totalAirdropCount\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"tradeUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"withdrawBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\r\n\r\nexport class PTokenAirdropNULS extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\r\n  }\r\n\r\n  // query\r\n  //  async getBTokenBalance() {\r\n  //    const res = await this._call('getBTokenBalance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isAirdropPToken(account) {\r\n    const res = await this._call('isAirdropPToken', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isStartAirdrop() {\r\n  //    const res = await this._call('isStartAirdrop', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async marginUnit() {\r\n  //    const res = await this._call('marginUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async maxAirdropLimit() {\r\n  //    const res = await this._call('maxAirdropLimit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerAddress() {\r\n  //    const res = await this._call('ownerAddress', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalAirdropCount() {\r\n    const res = await this._call('totalAirdropCount', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async tradeUnit() {\r\n  //    const res = await this._call('tradeUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n  //  async setMarginUnit(accountAddress, marginUnit_) {\r\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\r\n  //  }\r\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\r\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\r\n  //  }\r\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\r\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\r\n  //  }\r\n  //  async startAirdrop(accountAddress) {\r\n  //    return await this._transact('startAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async stopAirdrop(accountAddress) {\r\n  //    return await this._transact('stopAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async withdrawBToken(accountAddress) {\r\n  //    return await this._transact('withdrawBToken', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const deriVoteAbi = [\r\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"voter\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingId\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingOption\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Vote\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"controller\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"initializeVote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"numVotingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setController\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"vote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingDeadline\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingId\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"votingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"name\": \"votingTopics\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\r\n\r\nexport class DeriVote extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, deriVoteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numVotingOptions() {\r\n    const res = await this._call('numVotingOptions', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingDeadline() {\r\n    const res = await this._call('votingDeadline', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingId() {\r\n    const res = await this._call('votingId', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingOptions(votingId, voter) {\r\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async votingTopics(votingId) {\r\n    const res = await this._call('votingTopics', [votingId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\r\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\r\n  //  }\r\n  //  async setController(accountAddress, newController) {\r\n  //    return await this._transact('setController', [newController], accountAddress)\r\n  //  }\r\n  async vote(accountAddress, votingOption) {\r\n    return await this._transact('vote', [votingOption], accountAddress)\r\n  }\r\n\r\n}","import { contractFactory } from \"../utils\";\r\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\r\n\r\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\r\nimport { DeriVote } from \"./gen/DeriVote.js\";\r\n\r\n// pToken airdrop\r\nexport const PTokenAirdropNULSFactory = contractFactory(\r\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\r\n);\r\n\r\n// deri vote\r\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\r\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\r\nimport { getPTokenAirdropConfig } from \"../config\"\r\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\r\n\r\nexport const isPTokenAirdropped = async (...args) => {\r\n  return catchApiError(async(chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).isAirdropPToken(accountAddress);\r\n  }, args, 'isPTokenAirdropped', '')\r\n};\r\n\r\nexport const totalAirdropCount = async (...args) => {\r\n  return catchApiError(async(chainId) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).totalAirdropCount();\r\n  }, args, 'totalAirdropCount', '')\r\n};\r\n\r\nexport const isUserPTokenExist = async (...args) => {\r\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\r\n    let res = '';\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const result = await pool.pToken.balanceOf(accountAddress);\r\n    if (result === '1') {\r\n      res = true;\r\n    } else if (result === '0') {\r\n      res = false;\r\n    }\r\n    return res;\r\n  }, args, 'isUserPTokenExist', '');\r\n};\r\n\r\nexport const isBTokenUnlocked = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nexport const hasRequiredBalance = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const res = await pool.bToken.balanceOf(accountAddress)\r\n    console.log('res', res)\r\n    return bg(res).gte(100)\r\n  }, args, 'hasRequiredBalance', '')\r\n}\r\n\r\n\r\n// tx\r\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const airdropPToken = async (...args) => {\r\n  return catchTxApiError(async (chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).airdropPToken(accountAddress);\r\n  }, args);\r\n};\r\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\r\n\r\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\r\n\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\r\n\r\nexport const getStakingTop10Users = async () => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseActivityFactory();\r\n      const key = range(10).reduce(\r\n        (acc, i) =>\r\n          acc.concat([\r\n            `${keyPrefix()}.top.${i + 1}.account`,\r\n            `${keyPrefix()}.top.${i + 1}.fee`,\r\n            `${keyPrefix()}.top.${i + 1}.score`,\r\n            `${keyPrefix()}.top.${i + 1}.cont`,\r\n          ]),\r\n        []\r\n      );\r\n      //console.log(key)\r\n      const res = await db.getValues(key)\r\n      //console.log(res)\r\n      if (Array.isArray(res) && res.length === 4 * 10) {\r\n        let result = []\r\n        for (let i = 0; i < res.length; i++) {\r\n          if ((i + 1) % 4 === 0) {\r\n            const info = res.slice(i - 3, i + 1);\r\n            const index = (i + 1) / 4\r\n            result.push({\r\n              no: index,\r\n              userAddr: info[0].slice(0, 42),\r\n              feePaid: deriToNatural(info[1]).toString(),\r\n              score: deriToNatural(info[2]).toString(),\r\n              evgCoeff: deriToNatural(info[1]).eq(0)\r\n                ? '0'\r\n                : bg(info[3]).div(info[1]).toString(),\r\n              rewardBNB:\r\n                index <= 5\r\n                  ? index <= 4\r\n                    ? index <= 3\r\n                      ? index <= 2\r\n                        ? index <= 1\r\n                          ? '200000'\r\n                          : '100000'\r\n                        : '50000'\r\n                      : '35000'\r\n                    : '25000'\r\n                  : '18000',\r\n            });\r\n          }\r\n        }\r\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    [],\r\n    'getStakingTop10Users',\r\n    [],\r\n  );\r\n};\r\n\r\nexport const getUserStakingInfo = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress)\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.fee`,\r\n        `${keyPrefix()}.${accountAddress}.coef`,\r\n      ];\r\n      const res = await db.getValues(key)\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n\r\n      const coef = deriToNatural(res[9])\r\n      return {\r\n        userAddr: accountAddress,\r\n        feePaid: deriToNatural(res[8]).toString(),\r\n        coef: max(coef, bg(1)).toString(),\r\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\r\n      }\r\n    },\r\n    args,\r\n    'getUserStakingInfo',\r\n    {\r\n      userAddr: '',\r\n      feePaid: '',\r\n      coef: '',\r\n      score: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserStakingReward = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress)\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix()}.top.1.account`,\r\n        `${keyPrefix()}.top.2.account`,\r\n        `${keyPrefix()}.top.3.account`,\r\n        `${keyPrefix()}.top.4.account`,\r\n        `${keyPrefix()}.top.5.account`,\r\n        `${keyPrefix()}.top.6.account`,\r\n        `${keyPrefix()}.top.7.account`,\r\n        `${keyPrefix()}.top.8.account`,\r\n        `${keyPrefix()}.top.9.account`,\r\n        `${keyPrefix()}.top.10.account`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\r\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\r\n\r\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\r\n      let rewardBNB = '0';\r\n      if (topUsers.includes(accountAddress)) {\r\n        if (accountAddress === topUsers[0]) {\r\n          rewardBNB = '200000';\r\n        } else if (accountAddress === topUsers[1]) {\r\n          rewardBNB = '100000';\r\n        } else if (accountAddress === topUsers[2]) {\r\n          rewardBNB = '50000';\r\n        } else if (accountAddress === topUsers[3]) {\r\n          rewardBNB = '35000';\r\n        } else if (accountAddress === topUsers[4]) {\r\n          rewardBNB = '25000';\r\n        } else {\r\n          rewardBNB = '18000';\r\n        }\r\n      }\r\n      return {\r\n        userAddr: accountAddress,\r\n        rewardBNB,\r\n        rewardDERI,\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingReward',\r\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\r\n  );\r\n};\r\n\r\nexport const getUserStakingContribution = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n\r\n      return {\r\n        userAddr: accountAddress,\r\n        totalContrib: deriToNatural(\r\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\r\n        ).toString(),\r\n        userContrib: deriToNatural(\r\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\r\n        ).toString(),\r\n        Q1Contrib: deriToNatural(res[0]).toString(),\r\n        Q2Contrib: deriToNatural(res[1]).toString(),\r\n        Q3Contrib: deriToNatural(res[2]).toString(),\r\n        Q4Contrib: deriToNatural(res[3]).toString(),\r\n        userQ1Contrib: deriToNatural(res[4]).toString(),\r\n        userQ2Contrib: deriToNatural(res[5]).toString(),\r\n        userQ3Contrib: deriToNatural(res[6]).toString(),\r\n        userQ4Contrib: deriToNatural(res[7]).toString(),\r\n        userQ1Point: scoreQ1.toString(),\r\n        userQ2Point: scoreQ2.toString(),\r\n        userQ3Point: scoreQ3.toString(),\r\n        userQ4Point: scoreQ4.toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingContribution',\r\n    { userAddr: '', totalContrib: '', userContrib: '' }\r\n  );\r\n};","import { catchApiError, catchTxApiError, DeriEnv, fromWei, hexToNumberString, toChecksumAddress } from \"../../shared\";\r\nimport { databaseDeriVoteFactory } from \"../../shared/factory/database\";\r\nimport { getDeriVoteConfig } from \"../config\";\r\nimport { deriVoteFactory } from \"../contract/factory\";\r\n\r\nconst votingId = '2'\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\r\n\r\n\r\nexport const getVotingResult = async() => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.OP1.count`,\r\n        `${keyPrefix()}.OP2.count`,\r\n        `${keyPrefix()}.OP3.count`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return res.map((v) => fromWei(hexToNumberString(v)));\r\n    },\r\n    [],\r\n    'getOptionsVotingPowers',\r\n    ['', '', '']\r\n  );\r\n}\r\n\r\nexport const getUserVotingPower = async(accountAddress) => {\r\n  return catchApiError(async() => {\r\n    accountAddress = toChecksumAddress(accountAddress)\r\n    const db = databaseDeriVoteFactory()\r\n    const keys = [\r\n      `${keyPrefix()}.${accountAddress}.count`,\r\n    ]\r\n    const res = await db.getValues(keys)\r\n    return res.map((v) => fromWei(hexToNumberString(v)))[0]\r\n  }, [accountAddress], 'getUserVotingPowers', '')\r\n}\r\n\r\n\r\nexport const getUserVotingResult = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async () => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.${accountAddress}.count`,\r\n        `${keyPrefix()}.${accountAddress}.option`,\r\n        `${keyPrefix()}.${accountAddress}.timestamp`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return {\r\n        votingPower: fromWei(hexToNumberString(res[0])),\r\n        option: hexToNumberString(res[1]),\r\n        timestamp: hexToNumberString(res[2]),\r\n      };\r\n    },\r\n    args,\r\n    'getVoteResult',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const vote = async(chainId, accountAddress, votingOption) => {\r\n  const args = [chainId, accountAddress, votingOption]\r\n  return catchTxApiError(async() => {\r\n    chainId = chainId.toString()\r\n    accountAddress = toChecksumAddress(accountAddress)\r\n    const config = getDeriVoteConfig(chainId)\r\n    const deriVote = deriVoteFactory(chainId, config.address)\r\n    const voteId = await deriVote.votingId()\r\n    if (voteId !== votingId) {\r\n      throw new Error(\r\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\r\n      );\r\n    }\r\n    return await deriVote.vote(accountAddress, votingOption)\r\n  }, args)\r\n}","import {\r\n  DeriEnv,\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n  VERSIONS,\r\n} from '../shared/config';\r\nimport { getJsonConfig } from '../shared/config/config';\r\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\r\n\r\nexport const getContractAddressConfig = (env, version) => {\r\n  env = env || DeriEnv.get()\r\n  if (version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (VERSIONS.includes(version)) {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else if (version === undefined) {\r\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n\r\nexport const getPoolConfigList = (env) => {\r\n  env = env || DeriEnv.get();\r\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\r\n    let res = []\r\n    const config = getJsonConfig(v, env);\r\n    if (config && config.pools) {\r\n      res = config.pools.map((p) => {\r\n        p.version = v\r\n        return p\r\n      })\r\n    }\r\n    return [...acc, ...res];\r\n  }, []);\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol)\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  };\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(poolAddress, {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    });\r\n  return {\r\n      price: price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\r\n      //perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      //pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    //\r\n    // const unrealizedPnlList = symbols.map((s, index) => {\r\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    // })\r\n\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n\r\n    return positions.map((p, index) => {\r\n      const symbol = symbols[index]\r\n      const symbolId = symbolIdList[index]\r\n      const price = symbolPrices[index]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n      const totalCost = positions.reduce((accum, a) => {\r\n        return accum.plus(bg(a.cost))\r\n      }, bg(0))\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\r\n        } else {\r\n          return accum\r\n        }\r\n      }, bg(0))\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume,\r\n      );\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: index.toString(),\r\n        price: symbolPrices[index],\r\n        volume: bg(p.volume).times(multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        //unrealizedPnlList,\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n        fundingFee: fundingFee.toString()\r\n      };\r\n    }).filter((p) => p.volume !== '0')\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    } = liquidatePriceCache.get(poolAddress);\r\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\r\n    //console.log(totalCost.toString())\r\n    return calculateLiquidationPrice(\r\n      bg(volume).plus(newVolume),\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      multiplier,\r\n      minMaintenanceMarginRatio\r\n    ).toString();\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    promises = []\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n    for (let i=0; i< symbols.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    //console.log(symbolPrices)\r\n\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    //console.log(symbolIdList)\r\n\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    //console.log(symbols)\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = parseInt(i.symbolId)\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              //baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc\r\n                }\r\n              }, []);\r\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\r\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\r\n            const res = ids.map((id) => {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                symbolId: id.toString(),\r\n                symbol: symbols[id].symbol,\r\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\r\n                price: prices[id].toString(),\r\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            })\r\n            return res\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                notional: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              }\r\n            }\r\n          }\r\n        }).flat();\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\r\n\r\nexport const isProdChain = (chainId) => {\r\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\r\n};\r\n\r\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\r\n\r\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = \"get_signed_price\";\r\n  if (type === \"option\") {\r\n    method = \"get_signed_volatility\";\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = \"get_price\";\r\n    symbol = `${symbol}_v2_bsc`;\r\n  }\r\n  let baseUrl = isProdChain(chainId)\r\n    ? `https://oracle4.deri.finance/${method}`\r\n    : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceInfos = async (chainId, symbolList) => {\r\n  let url = getOracleServerUrl(chainId);\r\n  let retry = 3;\r\n  //console.log('url', url)\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n        return priceInfo.data;\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(\r\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\r\n        priceInfo\r\n      )}`\r\n    );\r\n  }\r\n};\r\n","import { bg } from \"../shared\";\r\n\r\nexport const calculateK = (indexPrice, liquidity, alpha) => {\r\n  return bg(indexPrice).times(alpha).div(liquidity);\r\n};\r\nexport const calculateDpmmPrice = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\r\n  );\r\n};\r\nexport const calculateDpmmCost = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  tradeVolume\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(multiplier)\r\n      .times(tradersNetVolume)\r\n      .plus(bg(multiplier).times(tradeVolume))\r\n      .pow(2)\r\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\r\n      .times(K)\r\n      .div(2)\r\n      .plus(bg(tradeVolume).times(multiplier))\r\n  );\r\n};","// this file is generated by script, don't modify it !!!\r\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\r\nimport {\r\n  toWei,\r\n  getLiquidity,\r\n  getProtocolFeeAccrued,\r\n  getLastTimestamp,\r\n  bg,\r\n  processResult,\r\n  deriToNatural,\r\n  getBlockInfo,\r\n} from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport {  getOraclePriceFromCache2 } from '../../shared/utils/oracle'\r\nimport { getPriceInfos } from \"../utils.js\";\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\r\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\r\n\r\n\r\n// klass = addInstanceMethods(klass, [])\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\n\r\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return ''\r\n};\r\n\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const prices = await this._getSymbolPrices()\r\n    // console.log('prices', prices)\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst init = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.activeSymbolIds) {\r\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n        this.getPoolStateValues(),\r\n        this.getFundingPeriod(),\r\n      ]);\r\n      this.fundingPeriod = parseInt(this.fundingPeriod);\r\n      // console.log(this.addresses, this.parameters)\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n\r\n      // init tokens\r\n      [this.bTokenSymbol ] = await Promise.all([\r\n        this.bToken.symbol(),\r\n      ]);\r\n      this.symbols = []\r\n      this.positions = []\r\n\r\n    }\r\n    // update symbols\r\n    // estimated for estimated* api use to disable async call\r\n    if (!isEstimatedApi) {\r\n      const symbolIds = await this.pToken.getActiveSymbolIds();\r\n      if (\r\n        !this.activeSymbolIds ||\r\n        this.activeSymbolIds.toString() !== symbolIds.toString()\r\n      ) {\r\n        this.poolLiquidity = await this.getPoolLiquidity();\r\n        this.activeSymbolIds = symbolIds;\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n        this.offChainOracleSymbolNames = await Promise.all(\r\n          this.symbols\r\n            .map((s) => s.oracleAddress)\r\n            .reduce(\r\n              (acc, o, index) => [\r\n                ...acc,\r\n                checkOffChainOracleSymbol(\r\n                  this.chainId,\r\n                  o,\r\n                  this.symbols[index].symbol\r\n                ),\r\n              ],\r\n              []\r\n            )\r\n        );\r\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n          (acc, i, index) => {\r\n            return this.offChainOracleSymbolNames[index] === ''\r\n              ? acc\r\n              : [...acc, i];\r\n          },\r\n          []\r\n        );\r\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\r\n          (s) => s && s !== ''\r\n        );\r\n        // console.log(\r\n        //   `${this.contractAddress} offchain`,\r\n        //   this.offChainOracleSymbolNames\r\n        // );\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\n\r\n// this.addresses\r\n// this.parameters\r\n\r\nconst getConfig = (klass) => {\r\n  klass.prototype[\"getConfig\"] = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      bToken: this.addresses.bTokenAddress,\r\n      bTokenSymbol: this.bTokenSymbol,\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: this.activeSymbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: \"v2_lite\",\r\n      versionId: \"v2_lite_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype[\"getStateValues\"] = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state = { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\n// getSymbol()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\r\n        return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\r\n      })\r\n    )\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index]\r\n      s.K = calculateK(\r\n        s.indexPrice,\r\n        this.state.liquidity,\r\n        s.alpha\r\n      ).toString();\r\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      ).toString();\r\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\r\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\r\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.symbols[symbolIndex] = symbols[0]\r\n      }\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\r\n        []\r\n      )\r\n    );\r\n    await this.getLastTimestamp()\r\n\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\n// check is updated\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype['isSymbolsUpdated'] = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype['isPositionsUpdated'] = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce(\r\n          (acc, s) =>\r\n            acc\r\n              .plus(s.tradersNetCost)\r\n              .minus(\r\n                bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\r\n              ),\r\n          bg(0)\r\n        )\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    const { poolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(poolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.margin) {\r\n      this.margin = await this.pToken.getMargin(account)\r\n    }\r\n    // console.log(this.positions)\r\n    // console.log(this.symbols)\r\n    const { initialMarginRatio } = this.parameters;\r\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\r\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\r\n      const s = this.symbols[i];\r\n      const p = this.positions[i];\r\n      dynamicMargin = dynamicMargin.plus(\r\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\r\n      );\r\n      requiredInitialMargin = requiredInitialMargin.plus(\r\n        bg(p.volume)\r\n          .times(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .abs()\r\n          .times(initialMarginRatio)\r\n      );\r\n    }\r\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index > -1) {\r\n      const symbol = this.symbols[index];\r\n      const tradeFee = info.tradeFee;\r\n\r\n      const direction =\r\n        tradeFee !== '-1'\r\n          ? bg(tradeVolume).gt(0)\r\n            ? 'LONG'\r\n            : 'SHORT'\r\n          : 'LIQUIDATION';\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(symbol.multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n\r\n      const res = {\r\n        symbolId: info.symbolId,\r\n        symbol: symbol.symbol,\r\n        trader: info.trader,\r\n        direction,\r\n        volume: bg(tradeVolume).abs().toString(),\r\n        price: price,\r\n        indexPrice: deriToNatural(info.indexPrice).toString(),\r\n        notional: notional,\r\n        transactionFee:\r\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n        transactionHash: event.transactionHash,\r\n        time: block.timestamp * 1000,\r\n        extra: {},\r\n      };\r\n      return res;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return klass\r\n};\r\n\r\nconst _getSymbolPrices = (klass) => {\r\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\r\n    await this.init()\r\n    let prices = []\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbolNames);\r\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n            this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbolNames.indexOf(Object.keys(priceInfos)[index])\r\n            ],\r\n            p.timestamp,\r\n            p.price,\r\n            parseInt(p.v).toString(),\r\n            p.r,\r\n            p.s,\r\n        ]);\r\n        return acc;\r\n        }, []);\r\n    }\r\n    return prices;\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const perpetualPoolLiteAdapter = (klass) => {\r\n  //klass = processMethod(klass, \"getFundingPeriod\")\r\n\r\n  klass = addMethods(klass, [\r\n    init,\r\n\r\n    getConfig,\r\n    getLiquidity,\r\n    getLastTimestamp,\r\n    getProtocolFeeAccrued,\r\n    getStateValues,\r\n    getSymbols,\r\n    getPositions,\r\n    getDynamicEquity,\r\n    getPoolRequiredMargin,\r\n    getTraderMarginStatus,\r\n    isSymbolsUpdated,\r\n    isPositionsUpdated,\r\n    getTraderLiquidity,\r\n    formatTradeEvent,\r\n    _getSymbolPrices,\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [\r\n      processMethod,\r\n      'getParameters',\r\n      [\r\n        'poolMarginRatio',\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'minLiquidationReward',\r\n        'maxLiquidationReward',\r\n        'liquidationCutRatio',\r\n        'protocolFeeCollectRatio',\r\n      ],\r\n    ],\r\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\r\n    [processMethod, 'getFundingPeriod'],\r\n    [\r\n      processMethod,\r\n      'getSymbol',\r\n      [\r\n        'multiplier',\r\n        'feeRatio',\r\n        'fundingRateCoefficient',\r\n        'price',\r\n        'alpha',\r\n        'cumulativeFundingRate',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n      ],\r\n    ],\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['1']],\r\n    [processTxMethod, 'removeLiquidity', ['1']],\r\n    [processTxMethod, 'addMargin', ['1']],\r\n    [processTxMethod, 'removeMargin', ['1']],\r\n    [processTxMethod, 'trade', ['2']],\r\n  ]);\r\n\r\n  return klass;\r\n};\r\n\r\nexport const lTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'balanceOf'],\r\n    [processMethod, 'totalSupply'],\r\n  ]);\r\n};\r\n\r\nexport const pTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'getMargin'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n};\r\n\r\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    return klass\r\n}\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[7]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[7]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[5]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[5]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getFundingPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"poolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setFundingPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getFundingPeriod() {\r\n    const res = await this._call('getFundingPeriod', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async addLiquidity(accountAddress, bAmount, prices) {\r\n    return await this._transact('addLiquidity', [bAmount, prices], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact('addMargin', [bAmount], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, source) {\r\n  //    return await this._transact('executeMigration', [source], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, account, prices) {\r\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, pTokenId, prices) {\r\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\r\n  //  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, lShares, prices) {\r\n    return await this._transact('removeLiquidity', [lShares, prices], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bAmount, prices) {\r\n    return await this._transact('removeMargin', [bAmount, prices], accountAddress)\r\n  }\r\n  //  async removeSymbol(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  //  }\r\n  //  async setFundingPeriod(accountAddress, period) {\r\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\r\n    return await this._transact('trade', [symbolId, tradeVolume, prices], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const lTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async allowance(owner, spender) {\r\n  //    const res = await this._call('allowance', [owner, spender])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, amount) {\r\n  //    return await this._transact('approve', [spender, amount], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, account, amount) {\r\n  //    return await this._transact('mint', [account, amount], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const pTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"delta\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getActiveSymbolIds\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getNumPositionHolders\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isActiveSymbolId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"margin\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\r\n\r\nexport class PTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addMargin(accountAddress, owner, delta) {\r\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  //  }\r\n  //  async addSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async removeSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, margin) {\r\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport {\r\n  perpetualPoolLiteAdapter,\r\n  lTokenLiteAdapter,\r\n  pTokenLiteAdapter,\r\n} from \"./adapter.js\";\r\n\r\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\r\nimport { LTokenLite } from './gen/LTokenLite.js';\r\nimport { PTokenLite } from './gen/PTokenLite.js';\r\n\r\n\r\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\r\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\r\n);\r\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\r\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\r\n","import { bg, max, min } from '../../shared/utils';\r\nimport { checkSymbolId } from '../../shared/utils/derijsnext';\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { getIndexInfo, SECONDS_IN_A_DAY } from '../../shared/config';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateLiquidationPrice } from '../../v2/calculation';\r\nimport { calculateDpmmPrice } from '../calc';\r\nimport { perpetualPoolLiteDpmmFactory} from './factory';\r\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\r\n\r\nexport class PoolApi{\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  }\r\n  async init(isEstimatedApi) {\r\n    await this.pool.init(isEstimatedApi);\r\n  }\r\n\r\n  // =================\r\n  //  api\r\n  // =================\r\n  async getLiquidityInfo(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const lToken = pool.lToken;\r\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n      pool.getPoolLiquidity(),\r\n      lToken.balanceOf(accountAddress),\r\n      lToken.totalSupply(),\r\n    ]);\r\n    const { poolMarginRatio } = pool.parameters;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const poolDynamicEquity = await pool.getDynamicEquity();\r\n    const shareValue = bg(lTokenTotalSupply).eq(0)\r\n      ? '0'\r\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\r\n\r\n    const value = pool.symbols.reduce((acc, s) => {\r\n      return acc.plus(\r\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\r\n      );\r\n    }, bg(0));\r\n    const removable = bg(poolDynamicEquity).minus(\r\n      bg(value).times(poolMarginRatio)\r\n    );\r\n    return {\r\n      totalSupply: lTokenTotalSupply,\r\n      poolLiquidity: liquidity,\r\n      shares: lTokenBalance,\r\n      shareValue,\r\n      maxRemovableShares: max(\r\n        min(\r\n          bg(lTokenBalance),\r\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\r\n        ),\r\n        bg(0)\r\n      ),\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n    const parameterInfo = pool.parameters;\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbol,\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\r\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\r\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\r\n      minLiquidationReward: parameterInfo.minLiquidationReward,\r\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\r\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\r\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\r\n    if (symbolIndex > -1) {\r\n      const oracleAddress =\r\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n          ? ''\r\n          : pool.symbols[symbolIndex].oracleAddress;\r\n      const [\r\n        symbols,\r\n        lastTimestamp,\r\n        margin,\r\n        fundingPeriod,\r\n        price,\r\n      ] = await Promise.all([\r\n        pool.getSymbols(),\r\n        pool.getLastTimestamp(),\r\n        pool.pToken.getMargin(accountAddress),\r\n        pool.getFundingPeriod(),\r\n        getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          pool.symbols[symbolIndex].symbol,\r\n          oracleAddress\r\n        ),\r\n      ]);\r\n\r\n      const positions = await pool.getPositions(accountAddress)\r\n\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n\r\n      const unrealizedPnl = positions.reduce((acc, p) => {\r\n        return acc.plus(\r\n          bg(p.traderPnl)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [s.symbol, positions[index].traderPnl];\r\n      });\r\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n      const dynamicCost = symbols.reduce((acc, s, index) => {\r\n        if (index !== parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n\r\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\r\n\r\n      // set liquidatePrice cache\r\n      liquidatePriceCache.set(this.poolAddress, {\r\n        volume: position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier: symbol.multiplier,\r\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol: symbol.symbol,\r\n        price: price,\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      symbols,\r\n      lastTimestamp,\r\n      margin,\r\n      fundingPeriod,\r\n    ] = await Promise.all([\r\n      pool.getSymbols(),\r\n      //pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargin(accountAddress),\r\n      pool.getFundingPeriod(),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions.map((p, index) => {\r\n      const symbolIndex = index;\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n      const unrealizedPnl = p.traderPnl\r\n      const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n        if (idx !== index) {\r\n          return acc.plus(\r\n            bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: symbol.symbolId,\r\n        price: symbol.indexPrice,\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }).filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n\r\n    const liquidity = pool.state.liquidity;\r\n    return {\r\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\r\n      fundingPerSecond: bg(symbol.fundingPerSecond)\r\n        .div(symbol.multiplier)\r\n        .toString(),\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(symbol.tradersNetVolume)\r\n        .times(symbol.multiplier)\r\n        .toString(),\r\n    };\r\n  }\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { poolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(poolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { poolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  // =================\r\n  // static method\r\n  // =================\r\n}\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);\r\n","import {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('bTokenSymbol', bTokenSymbol)\r\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item);\r\n    if (res) {\r\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\r\n      result.unshift({\r\n        baseToken: perpetualPool.bTokenSymbol,\r\n        direction: res.direction,\r\n        volume: bg(res.volume)\r\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n          .toString(),\r\n        price: res.price,\r\n        indexPrice: res.indexPrice,\r\n        notional: res.notional,\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        time: res.time,\r\n        transactionFee: res.transactionFee,\r\n        transactionHash: res.transactionHash,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init()\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null\r\n          }\r\n        }).filter((i) => i != null)\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../shared/api/database_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n};\r\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { bg } from '../../shared/utils';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { calculateDpmmCost } from '../calc';\r\n\r\nexport const getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityInfo(accountAddress);\r\n    },\r\n    args,\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\r\n      symbolId = checkTokenId(symbolId)\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getSpecification(symbolId);\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      fundingRateCoefficient: '',\r\n      minPoolMarginRatio: '',\r\n      minInitialMarginRatio: '',\r\n      minMaintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfos(accountAddress);\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args =  [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress)\r\n      await pool.init()\r\n      return await pool.bToken.balanceOf(accountAddress)\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    false,\r\n  );\r\n}\r\n\r\nexport const getEstimatedMargin = async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n  const args = [chainId, poolAddress,accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFee(volume, symbolId);\r\n  }, args, 'getEstimatedFee', '')\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getFundingRate(symbolId);\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n}\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityUsed(symbolId);\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    'getEstimatedTimePrice',\r\n    ''\r\n  );\r\n};\r\n","import { bg, catchTxApiError, checkAddress, checkApiInput, checkChainId } from \"../../shared\"\r\nimport { checkAmount } from \"../../shared/utils/derijsnext\";\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js'\r\n\r\n// mining\r\nexport const addLiquidity = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, amount) => {\r\n      chainId = checkChainId(chainId);\r\n      poolAddress = checkAddress(poolAddress);\r\n      accountAddress = checkAddress(accountAddress);\r\n      amount = checkAmount(amount)\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.addLiquidity(accountAddress, amount)\r\n  }, args )\r\n}\r\n\r\nexport const removeLiquidity = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.removeLiquidity(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\n//trading\r\nexport const unlock = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.addMargin(accountAddress, amount);\r\n  }, args);\r\n};\r\n\r\nexport const withdrawMargin = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.removeMargin(accountAddress, amount);\r\n  }, args);\r\n};\r\n\r\nexport const tradeWithMargin = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    newVolume = checkAmount(newVolume)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.trade(accountAddress, symbolId, newVolume);\r\n  }, args)\r\n}\r\n\r\nexport const closePosition = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const {volume} = await pool.pToken.getPosition(accountAddress, symbolId)\r\n    if (!bg(volume).eq(0)) {\r\n      const newVolume = bg(volume).negated().toString()\r\n      return await pool.trade(accountAddress, symbolId, newVolume);\r\n    } else {\r\n      throw new Error('no position to close')\r\n    }\r\n  }, args)\r\n}","// this file is generated by script, don't modify it !!!\r\n// import { processMethod } from \"../../shared/utils/index.js\";\r\n\r\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\n// import {\r\n//   processResult,\r\n// } from \"../../shared/utils/contract.js\";\r\n//import { range } from '../../shared/utils/lang.js'\r\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\r\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\r\n\r\n\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\r\n\r\nconst range = (n) => {\r\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\r\n    n = parseInt(n)\r\n  }\r\n  return [...Array(n).keys()]\r\n}\r\n\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    //const prices = await this._getSymbolPrices()\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    //newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nconst init = (klass) => {\r\n  klass.prototype.init = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.parameters) {\r\n      [this.addresses, this.parameters, this.state, this.lengths] =\r\n        await Promise.all([\r\n          this.getAddresses(),\r\n          this.getParameters(),\r\n          this.getPoolStateValues(),\r\n          this.getLengths(),\r\n        ]);\r\n      this.fundingPeriod = (3 * 24 * 3600).toString();\r\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\r\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\r\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\r\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\r\n    }\r\n    if (!isEstimatedApi) {\r\n      const lengths = await this.getLengths();\r\n      if (\r\n        !this.symbols ||\r\n        !this.bTokens ||\r\n        this.lengths.toString() !== lengths.toString()\r\n      ) {\r\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\r\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\r\n        this.bTokens = await Promise.all(\r\n          this.bTokenIds.reduce(\r\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n            []\r\n          )\r\n        );\r\n        // update bToken price\r\n        for (let i = 0; i < this.bTokenIds.length; i++) {\r\n          if (i === 0) {\r\n            this.bTokens[i].price = \"1\";\r\n          } else {\r\n            // this.bTokens[i].price = await offChainOracleFactory(\r\n            //   this.chainId,\r\n            //   this.bTokens[i].oracleAddress\r\n            // ).getPrice();\r\n            this.bTokens[i].price = await bTokenOracle1Factory(\r\n              this.chainId,\r\n              this.bTokens[i].oracleAddress\r\n            ).getPrice();\r\n          }\r\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n            .times(this.bTokens[i].price)\r\n            .times(this.bTokens[i].discount)\r\n            .plus(this.bTokens[i].pnl)\r\n            .toString();\r\n        }\r\n        this.bTokenSymbols = await Promise.all(\r\n          this.bTokens.reduce(\r\n            (acc, bToken) => [\r\n              ...acc,\r\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\r\n            ],\r\n            []\r\n          )\r\n        );\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n\r\n        // init\r\n        this.positions = [];\r\n        this.userState = {};\r\n        this.offChainOracleSymbolIds = [];\r\n        this.offChainOracleSymbolNames = [];\r\n\r\n        await this.getLiquidity()\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\nconst getConfig = (klass) => {\r\n  klass.prototype.getConfig = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      router: this.addresses.routerAddress,\r\n      bTokenSymbols: this.bTokenSymbols,\r\n      bTokens: this.bTokens.map((b, index) => ({\r\n        bTokenId: index.toString(),\r\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\r\n        bToken: b.bTokenAddress,\r\n      })),\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: index.toString(),\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: 'v2',\r\n      versionId: \"v2_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLiquidity = async function () {\r\n    await this._init()\r\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\r\n    this.state = this.state || {}\r\n    this.state.liquidity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLastTimestamp = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return res[0]\r\n    }\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getProtocolFeeAccrued = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return fromWei(res[1])\r\n    }\r\n  return klass\r\n}\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype.getStateValues = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state= { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getBTokens = (klass) => {\r\n  klass.prototype.getBTokens = async function (bTokenId) {\r\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\r\n    const bTokens = await Promise.all(\r\n      bTokenIds.reduce(\r\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n        []\r\n      )\r\n    );\r\n    // update bToken price\r\n    for (let i = 0; i < this.bTokenIds.length; i++) {\r\n      if (i === 0) {\r\n        bTokens[i].price = \"1\";\r\n      } else {\r\n        bTokens[i].price = await offChainOracleFactory(\r\n          this.chainId,\r\n          this.bTokens[i].oracleAddress\r\n        ).getPrice();\r\n      }\r\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n        .times(this.bTokens[i].price)\r\n        .times(this.bTokens[i].discount)\r\n        .plus(this.bTokens[i].pnl)\r\n        .toString();\r\n    }\r\n\r\n    // update\r\n    if (bTokenId) {\r\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\r\n      if (bTokenIndex > -1) {\r\n        this.bTokens[bTokenIndex] = bTokens[0]\r\n      }\r\n    } else {\r\n      this.bTokens = bTokens\r\n    }\r\n    return bTokens\r\n  };\r\n  return klass\r\n};\r\n\r\n// getSymbols()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype.getSymbols = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\r\n          ? ''\r\n          : s.oracleAddress;\r\n        return getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          s.symbol,\r\n          oracleAddress\r\n        );\r\n      })\r\n    );\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index];\r\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\r\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\r\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      );\r\n\r\n      const pnl = calculateDpmmCost(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier,\r\n        bg(s.tradersNetVolume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(s.tradersNetCost);\r\n      const ratePerSecond = bg(s.dpmmPrice)\r\n        .minus(s.indexPrice)\r\n        .times(s.multiplier)\r\n        .div(this.fundingPeriod)\r\n        .toString();\r\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\r\n        this.state.lastTimestamp\r\n      );\r\n      s.fundingPerSecond = ratePerSecond\r\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\r\n      s.pnl = pnl.toString()\r\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\r\n        .minus(pnl)\r\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\r\n        .toString();\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      this.symbols[symbolIndex] = symbols[0]\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype.getPositions = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\r\n        []\r\n      )\r\n    );\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\nconst isBTokensUpdated = (klass) => {\r\n  klass.prototype.isBTokensUpdated = function() {\r\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\r\n  }\r\n  return klass\r\n}\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype.isSymbolsUpdated = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype.isPositionsUpdated = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols();\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res;\r\n    return res;\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    const { minPoolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.notional)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(minPoolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isBTokensUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated()) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.userState.margins) {\r\n      this.userState.margins = await this.pToken.getMargins(account);\r\n    }\r\n\r\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\r\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\r\n    this.userState.totalEquity = this.userState.margins.reduce(\r\n      (acc, m, i) =>\r\n        acc.plus(\r\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\r\n        ),\r\n      bg(this.userState.totalPnl)\r\n    );\r\n\r\n    this.userState.totalNotional = this.positions.reduce(\r\n      (acc, p) => acc.plus(p.notional),\r\n      bg(0)\r\n    );\r\n\r\n    return [this.userState.totalEquity, this.userState.totalNotional];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    const symbol = this.symbols[index];\r\n    const tradeFee = info.tradeFee;\r\n\r\n    const direction =\r\n      tradeFee !== '-1'\r\n        ? bg(tradeVolume).gt(0)\r\n          ? 'LONG'\r\n          : 'SHORT'\r\n        : 'LIQUIDATION';\r\n    const price = bg(info.tradeCost)\r\n      .div(info.tradeVolume)\r\n      .div(symbol.multiplier)\r\n      .toString();\r\n    const notional = bg(tradeVolume)\r\n      .abs()\r\n      .times(price)\r\n      .times(symbol.multiplier)\r\n      .toString();\r\n\r\n    const res = {\r\n      symbolId: info.symbolId,\r\n      symbol: symbol.symbol,\r\n      trader: info.trader,\r\n      direction,\r\n      volume: bg(tradeVolume).abs().toString(),\r\n      price: price,\r\n      indexPrice: deriToNatural(info.indexPrice).toString(),\r\n      notional: notional,\r\n      transactionFee:\r\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n      transactionHash: event.transactionHash,\r\n      time: block.timestamp * 1000,\r\n      extra: {},\r\n    };\r\n    return res;\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nexport const perpetualPoolDpmmAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    klass = addMethods(klass, [\r\n        init,\r\n        getConfig,\r\n        getLiquidity,\r\n        getLastTimestamp,\r\n        getProtocolFeeAccrued,\r\n        getStateValues,\r\n        getBTokens,\r\n        getSymbols,\r\n        getPositions,\r\n        isBTokensUpdated,\r\n        isSymbolsUpdated,\r\n        isPositionsUpdated,\r\n        getDynamicEquity,\r\n        getTraderLiquidity,\r\n        getTraderMarginStatus,\r\n        getPoolRequiredMargin,\r\n        formatTradeEvent,\r\n    ])\r\n    klass = overrideMethods(klass, [\r\n      [\r\n        processMethod,\r\n        \"getParameters\",\r\n        [\r\n          \"initialMarginRatio\",\r\n          \"liquidationCutRatio\",\r\n          \"maintenanceMarginRatio\",\r\n          \"maxLiquidationReward\",\r\n          \"minBToken0Ratio\",\r\n          \"minPoolMarginRatio\",\r\n          \"protocolFeeCollectRatio\",\r\n        ],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getBToken\",\r\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getSymbol\",\r\n        [\r\n          \"multiplier\",\r\n          \"feeRatio\",\r\n          //\"fundingRateCoefficient\",\r\n          \"alpha\",\r\n          \"distributedUnrealizedPnl\",\r\n          //\"price\",\r\n          \"cumulativeFundingRate\",\r\n          \"tradersNetVolume\",\r\n          \"tradersNetCost\",\r\n        ],\r\n      ],\r\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\r\n    ]);\r\n    return klass\r\n}\r\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['2']],\r\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'removeLiquidity', ['2']],\r\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'addMargin', ['2']],\r\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\r\n    [processTxMethod, 'removeMargin', ['2']],\r\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\r\n    [processTxMethod, 'trade', ['2']],\r\n    //[processTxMethod, 'tradeWithPrices', ['2']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const lTokenAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const pTokenAdapter = (klass) => {\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getMargins'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n    [\r\n      processMethod,\r\n      'getPositions',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const lTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateAsset\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getAsset\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getAssets\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"asset\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updateAsset\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\r\n\r\nexport class LToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async exists(owner) {\r\n  //    const res = await this._call('exists', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAsset(owner, bTokenId) {\r\n    const res = await this._call('getAsset', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getAssets(owner) {\r\n    const res = await this._call('getAssets', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async numBTokens() {\r\n  //    const res = await this._call('numBTokens', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async pool() {\r\n  //    const res = await this._call('pool', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\r\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numSymbols_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargins\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getPositions\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numSymbols\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumSymbols\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"margins\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargins\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\r\n\r\nexport class PToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner, bTokenId) {\r\n    const res = await this._call('getMargin', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getMargins(owner) {\r\n    const res = await this._call('getMargins', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPositions(owner) {\r\n    const res = await this._call('getPositions', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numBTokens() {\r\n    const res = await this._call('numBTokens', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numSymbols() {\r\n    const res = await this._call('numSymbols', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setNumSymbols(accountAddress, num) {\r\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\r\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\r\n  //  }\r\n  //  async updateMargins(accountAddress, owner, margins) {\r\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[9]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[9]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[4]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[4]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"approveBTokenForTargetPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"routerAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBToken\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getLengths\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals0\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minBToken0Ratio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minPoolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbolOracle\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourcePool\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migratePoolStateValues\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"distributedUnrealizedPnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPoolForLTokenAndPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    const res = await this._call('getBToken', [bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getLengths() {\r\n    const res = await this._call('getLengths', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getSymbolOracle(symbolId) {\r\n  //    const res = await this._call('getSymbolOracle', [symbolId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, info) {\r\n  //    return await this._transact('addBToken', [info], accountAddress)\r\n  //  }\r\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addSymbol(accountAddress, info) {\r\n  //    return await this._transact('addSymbol', [info], accountAddress)\r\n  //  }\r\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\r\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, liquidator, trader) {\r\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\r\n  //  }\r\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\r\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\r\n  //  }\r\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\r\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\r\n  //  }\r\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\r\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\r\n  //  }\r\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\r\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\r\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolRouterAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"liquidatorQualifier\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"qualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setLiquidatorQualifier\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"tradeWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async liquidatorQualifier() {\r\n  //    const res = await this._call('liquidatorQualifier', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, sourceRouter) {\r\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\r\n  //  }\r\n  async liquidate(accountAddress, trader) {\r\n    return await this._transact('liquidate', [trader], accountAddress)\r\n  }\r\n  async liquidateWithPrices(accountAddress, trader, infos) {\r\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\r\n  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\r\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, poolAddress) {\r\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\r\n  }\r\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\r\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\r\n\r\nimport { LToken } from './gen/LToken.js';\r\nimport { PToken } from './gen/PToken.js';\r\nimport { PerpetualPool} from './gen/PerpetualPool';\r\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\r\n\r\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\r\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\r\n\r\n// dpmm\r\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\r\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\r\n","import { contractFactory } from \"../../activity/utils\"\r\nimport { bg, max, min } from \"../../shared\"\r\nimport { SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport { getIndexInfo } from \"../../shared/config/token\"\r\nimport { checkSymbolId, getLiquidity } from \"../../shared/utils/derijsnext\"\r\nimport {\r\n  calculateLiquidationPrice,\r\n  calculateMaxRemovableLiquidity,\r\n} from '../../v2/calculation';\r\nimport { perpetualPoolDpmmFactory } from './factory';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\r\nimport { ERC20Factory } from \"../../shared/contract/factory\";\r\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\r\n\r\n// PoolApi \r\nexport class PoolApi {\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  }\r\n\r\n  async init(usedByEstimatedApi) {\r\n    await this.pool.init(usedByEstimatedApi);\r\n  }\r\n\r\n  // API\r\n  async getLiquidityInfo(accountAddress, bTokenId) {\r\n    //if (!this.pool.isSymbolsUpdated()) {\r\n      await this.pool.getSymbols();\r\n    //}\r\n    const pool = this.pool;\r\n    const [lTokenAsset, bTokens] = await Promise.all([\r\n      pool.lToken.getAsset(accountAddress, bTokenId),\r\n      pool.getBTokens(),\r\n    ]);\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\r\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const cost = pool.symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\r\n    const totalPnl = pool.symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\r\n\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenIndex],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    ).toString();\r\n    const approximatePnl = bg(pnl)\r\n      .plus(\r\n        bg(bTokens[bTokenIndex].cumulativePnl)\r\n          .minus(lastCumulativePnl)\r\n          .times(liquidity)\r\n      )\r\n      .toString();\r\n\r\n    return {\r\n      poolLiquidity,\r\n      shares: liquidity,\r\n      maxRemovableShares,\r\n      pnl: approximatePnl,\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool\r\n    const {\r\n      minPoolMarginRatio,\r\n      initialMarginRatio,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      maintenanceMarginRatio,\r\n      minBToken0Ratio,\r\n    } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbols,\r\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio: initialMarginRatio,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const oracleAddress =\r\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n        ? ''\r\n        : pool.symbols[symbolIndex].oracleAddress;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      lastTimestamp,\r\n      margins,\r\n      price,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n      getOraclePriceFromCache2.get(\r\n        this.chainId,\r\n        pool.symbols[symbolIndex].symbol,\r\n        oracleAddress\r\n      ),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const symbol = symbols[symbolIndex];\r\n    const position = positions[symbolIndex];\r\n    // const { volume } = position\r\n    // const { multiplier, indexPrice } = symbol\r\n    const margin = bTokens\r\n      .reduce(\r\n        (acc, b, index) =>\r\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n        bg(0)\r\n      )\r\n      .toString();\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n    const marginHeldBySymbol = bg(position.volume)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.indexPrice)\r\n      .times(initialMarginRatio)\r\n      .abs();\r\n\r\n    const unrealizedPnl = positions.reduce(\r\n      (acc, p) => acc.plus(p.traderPnl),\r\n      bg(0)\r\n    );\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, positions[index].traderPnl];\r\n    });\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n    const dynamicCost = symbols.reduce((acc, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return acc.plus(\r\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n        );\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, bg(0));\r\n    const fundingFee = bg(symbol.cumulativeFundingRate)\r\n      .minus(position.lastCumulativeFundingRate)\r\n      .plus(\r\n        bg(symbol.dpmmPrice)\r\n          .minus(symbol.indexPrice)\r\n          .times(symbol.multiplier)\r\n          .div(pool.fundingPeriod)\r\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n      )\r\n      .times(position.volume)\r\n      .toString();\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(this.poolAddress, {\r\n      volume: position.volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier: symbol.multiplier,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n    });\r\n\r\n    return {\r\n      symbol: symbol.symbol,\r\n      price: price,\r\n      markPrice: symbol.dpmmPrice.toString(),\r\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n      averageEntryPrice: bg(position.volume).eq(0)\r\n        ? '0'\r\n        : bg(position.cost)\r\n            .div(position.volume)\r\n            .div(symbol.multiplier)\r\n            .toString(),\r\n      margin: margin,\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        symbol.multiplier,\r\n        maintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      lastTimestamp,\r\n      margins,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      //pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions\r\n      .map((p, index) => {\r\n        const symbolIndex = index;\r\n        const symbol = symbols[symbolIndex];\r\n        const position = positions[symbolIndex];\r\n        const margin = bTokens\r\n          .reduce(\r\n            (acc, b, index) =>\r\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n            bg(0)\r\n          )\r\n          .toString();\r\n        const marginHeld = symbols.reduce((acc, s, index) => {\r\n          return acc.plus(\r\n            bg(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume)\r\n              .times(initialMarginRatio)\r\n              .abs()\r\n          );\r\n        }, bg(0));\r\n        const marginHeldBySymbol = bg(position.volume)\r\n          .times(symbol.multiplier)\r\n          .times(symbol.indexPrice)\r\n          .times(initialMarginRatio)\r\n          .abs();\r\n        const unrealizedPnl = p.traderPnl\r\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n          if (idx !== index) {\r\n            return acc.plus(\r\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n            );\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, bg(0));\r\n        const fundingFee = bg(symbol.cumulativeFundingRate)\r\n          .minus(position.lastCumulativeFundingRate)\r\n          .plus(\r\n            bg(symbol.dpmmPrice)\r\n              .minus(symbol.indexPrice)\r\n              .times(symbol.multiplier)\r\n              .div(pool.fundingPeriod)\r\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n          )\r\n          .times(position.volume)\r\n          .toString();\r\n        return {\r\n          symbolId: symbolIndex.toString(),\r\n          symbol: symbol.symbol,\r\n          price: symbol.indexPrice,\r\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n          averageEntryPrice: bg(position.volume).eq(0)\r\n            ? '0'\r\n            : bg(position.cost)\r\n                .div(position.volume)\r\n                .div(symbol.multiplier)\r\n                .toString(),\r\n          margin: margin,\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          fundingFee,\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            position.volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            symbol.multiplier,\r\n            maintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      })\r\n      .filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init()\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\r\n    const liquidity = pool.state.liquidity\r\n    return {\r\n      funding0: bg(funding).div(multiplier).toString(),\r\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    };\r\n  }\r\n\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(minPoolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getPoolBTokensBySymbolId(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const { initialMarginRatio } = pool.parameters\r\n    const margins = await pool.pToken.getMargins(accountAddress);\r\n    const balances = await Promise.all(\r\n      pool.bTokens.reduce(\r\n        (acc, i) => [\r\n          ...acc,\r\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n\r\n    const margin = pool.bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0)).toString()\r\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(pool.positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0)).toString();\r\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\r\n\r\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\r\n      const bToken = pool.bTokens[i]\r\n      bToken.walletBalance = balances[i]\r\n      bToken.availableBalance = max(\r\n        min(\r\n          bg(margin)\r\n            .minus(marginHeld)\r\n            .plus(pnl)\r\n            .div(pool.bTokens[i].price)\r\n            .div(pool.bTokens[i].discount),\r\n          bg(margins[i])\r\n        ),\r\n        bg(0)\r\n      ).toString();\r\n    }\r\n    return pool.bTokens.map((b, index) => {\r\n      return {\r\n        bTokenId: index.toString(),\r\n        bTokenAddress: b.bTokenAddress,\r\n        bTokenSymbol: pool.bTokenSymbols[index],\r\n        availableBalance: b.availableBalance,\r\n        walletBalance: b.walletBalance,\r\n      }\r\n    })\r\n  }\r\n\r\n  async getFundingFee(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    return pool.positions[symbolIndex].fundingAccrued;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);","import { catchApiError } from '../../shared/utils/api';\r\n\r\nimport {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item);\r\n    if (res) {\r\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\r\n      result.unshift({\r\n        baseToken: '',\r\n        direction: res.direction,\r\n        volume: bg(res.volume)\r\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n          .toString(),\r\n        price: res.price,\r\n        indexPrice: res.indexPrice,\r\n        notional: res.notional,\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        time: res.time,\r\n        transactionFee: res.transactionFee,\r\n        transactionHash: res.transactionHash,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init()\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: '',\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null\r\n          }\r\n        }).filter((i) => i != null)\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../v2/api/mining_query_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n  // extra for v2\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n};\r\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\r\nimport { bg } from '../../shared';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityInfo(accountAddress, bTokenId);\r\n    },\r\n    [],\r\n    'getLiquidityInfo',\r\n    {\r\n      maxRemovableShares: '',\r\n      pnl: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getSpecification(symbolId);\r\n    },\r\n    [],\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: [],\r\n      bTokenMultiplier: [],\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      fundingRateCoefficient: '',\r\n      minPoolMarginRatio: '',\r\n      minInitialMarginRatio: '',\r\n      minMaintenanceMarginRatio: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getPositionInfo',\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfos(accountAddress);\r\n    },\r\n    [],\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\r\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.balanceOf(accountAddress);\r\n    },\r\n    [],\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      bTokenId = checkTokenId(bTokenId);\r\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    [],\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedMargin',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFee(volume, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingRate(symbolId);\r\n    },\r\n    [],\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    [],\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityUsed();\r\n    },\r\n    [],\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      //symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPoolBTokensBySymbolId(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getPoolBTokensBySymbolId',\r\n    []\r\n  );\r\n};\r\n\r\n\r\nexport const getFundingFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingFee(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getFundingFee',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    'getEstimatedTimePrice',\r\n    ''\r\n  );\r\n};\r\n","import {\r\n  bg,\r\n  checkApiInput,\r\n} from '../../shared';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { catchTxApiError } from '../../shared/utils/api';\r\nimport { checkAmount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\r\n\r\n// mining\r\nexport const addLiquidity = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const removeLiquidity = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\n//trading\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    bTokenId = checkTokenId(bTokenId)\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds)\r\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, []);\r\n};\r\n\r\nexport const depositMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.addMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.removeMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      newVolume = checkAmount(newVolume)\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      const { volume } = await pool.pToken.getPosition(\r\n        accountAddress,\r\n        symbolId\r\n      );\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    []\r\n  );\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport {\r\n  getPoolVersionId,\r\n  LITE_VERSIONS,\r\n} from '../shared/config';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity1,\r\n  getPoolInfoApy as getPoolInfoApy1,\r\n} from '../shared/api/database_api';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolInfoApyV2,\r\n  getPoolLiquidityV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n} from '../v2_lite/api';\r\nimport {\r\n  getLiquidityInfoOption,\r\n} from '../option/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'option') {\r\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityInfo(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityInfo(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId != null) {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  } else {\r\n    return getPoolLiquidity1(chainId, poolAddress)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (bTokenId != null) {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  } else {\r\n    return getPoolInfoApy1(chainId, poolAddress)\r\n  }\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersionId, LITE_VERSIONS } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (versionId === 'option') {\r\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getEstimatedFundingRateOption,\r\n  getFundingRateCacheOption,\r\n  getFundingRateOption,\r\n  getLiquidityUsedOption,\r\n  getPositionInfoOption,\r\n  getPositionInfosOption,\r\n  getSpecificationOption,\r\n  getWalletBalanceOption,\r\n  getEstimatedFeeOption,\r\n  getEstimatedMarginOption,\r\n  getEstimatedLiquidityUsedOption,\r\n  getEstimatedTimePriceOption,\r\n  isUnlockedOption,\r\n} from '../option/api';\r\nimport { getPoolVersionId, isDeriUnlocked, LITE_VERSIONS } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  getPositionInfosV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n  getEstimatedLiquidatePriceV2,\r\n  getPoolBTokensBySymbolId as getPoolBTokensBySymbolIdV2\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  getPositionInfosV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getSpecificationOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getPositionInfoOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return getPositionInfosOption(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v1') {\r\n    return [\r\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\r\n    ].filter((p) => p.volume !== '0');\r\n  } else if (version === 'v2') {\r\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  } else if (version === 'option') {\r\n    // place holder\r\n    return ''\r\n  }\r\n  if (symbolId === undefined) {\r\n    // place holder\r\n    return ''\r\n  } else {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedFundingRateOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedLiquidityUsedOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (chainId, poolAddress, accountAddress) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (['v2', 'v2_dpmm'].includes(versionId)) {\r\n    if (versionId === 'v2') {\r\n      return await getPoolBTokensBySymbolIdV2(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await apiV2Dpmm.getPoolBTokensBySymbolId(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n    }\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n  ) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version === 'option') {\r\n    return getEstimatedTimePriceOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\r\nimport { getPoolVersionId, LITE_VERSIONS, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return unlockOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.depositMargin(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.depositMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return withdrawMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return tradeWithMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    )\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.closePosition(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.closePosition(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersionId, LITE_VERSIONS } from '../shared';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","export { web3Factory } from './web3.js'\r\nexport { oracleFactory, wrappedOracleFactory } from './oracle.js'\r\nexport {\r\n  databaseFactory,\r\n  databaseWormholeFactory,\r\n  databaseAirdropFactory,\r\n  databaseActivityFactory,\r\n} from './database';\r\nexport {\r\n  bTokenFactory,\r\n  TERC20Factory,\r\n\r\n  brokerManagerFactory,\r\n  pTokenAirdropFactory,\r\n\r\n  deriFactory,\r\n  wormholeFactory,\r\n  miningVaultRouterFactory,\r\n  miningVaultPoolFactory,\r\n} from './contract';","import { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory, wrappedOracleFactory } from '../factory/oracle';\r\nimport { deriToNatural } from './convert';\r\nimport {\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\nimport { offChainOracleFactory } from '../contract/factory';\r\n\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n          return priceInfo.data\r\n        }\r\n      }\r\n    } catch(err) {\r\n      //console.log(err.toString())\r\n      retry -= 1;\r\n    }\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\r\n  let url = getOracleUrl(null, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, {\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(symbolList),\r\n      });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n          return priceInfo.data;\r\n        }\r\n      }\r\n    } catch (err) {}\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\r\n  }\r\n};\r\n\r\n// cache\r\n// export const getOraclePriceFromCache = (function () {\r\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\r\n//   let cache = {};\r\n//   return {\r\n//     async get(chainId, symbol = '_', version = 'v2') {\r\n//       const key = `${chainId}_${symbol}_${version}`\r\n//       if (\r\n//         Object.keys(cache).includes(key) &&\r\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n//       ) {\r\n//         return cache[key].data;\r\n//       } else {\r\n//         const data = await getOraclePrice(chainId, symbol, version);\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp: Math.floor(Date.now() / 1000),\r\n//         };\r\n//         return cache[key].data;\r\n//       }\r\n//     },\r\n//   };\r\n// })();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const oraclePricesCache = (function(){\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=[]) {\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  if (oracleAddress !== '') {\r\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache2 = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\r\n      const key = `${chainId}_${symbol}_${oracleAddress}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n// export const getOraclePriceForOption = async (chainId, symbol) => {\r\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n// };\r\n\r\n// for viewer use\r\n// export const getOraclePricesForOption = async (chainId, symbols) => {\r\n//   const oracleSymbols = symbols\r\n//     .map((i) => normalizeOptionSymbol(i))\r\n//     .filter((value, index, self) => self.indexOf(value) === index);\r\n//   const oracleSymbolPrices = await Promise.all(\r\n//     oracleSymbols.reduce(\r\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n//       []\r\n//     )\r\n//   );\r\n//   return symbols.map((s) => {\r\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n//   });\r\n// };\r\n\r\n// // for tx use\r\n// export const getOracleVolatilityForOption = async (symbols) => {\r\n//   const volSymbols = getVolatilitySymbols(symbols)\r\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n//   const volatilities = await Promise.all(\r\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n//   );\r\n//   //return volatilities;\r\n//   return symbols.map((s) => {\r\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n//   });\r\n// };\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\r\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\r\n  return symbols.map((s) => {\r\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\r\n  });\r\n};\r\n\r\n// check symbol is used offchain oracle\r\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return \"\"\r\n};","import {\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../config'\r\n//import fetch from 'node-fetch'\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    //console.log(`${methodName}: `, err.toString())\r\n    console.log(`${methodName}: `, err)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    const message = err.errorMessage || err.message || 'Transaction failed';\r\n    res = { success: false, error: message};\r\n  }\r\n  return res;\r\n};\r\n\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","const bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n  AGLDUSDT: 'AGLDUSDT',\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n  console.log(`symbol(${symbol}) is not a string type`);\r\n  return symbol;\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from './contract_base'\r\nimport { deleteIndexedKey } from '../utils'\r\nimport { TERC20Abi } from './abis'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  // only for testnet\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\nimport { TERC20 } from '../../contract/TERC20';\r\n\r\nexport const bTokenFactory = factory(BToken);\r\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'testnet') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev', 'testnet' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = null;\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = 'v2';\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed,\r\n      zone : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n\r\n  get zone(){\r\n    if(this.isV2){\r\n      return 'MAIN'\r\n    } else if(this.isV2Lite) {\r\n      return 'INNO'\r\n    } else {\r\n      return 'OPEN'\r\n    }\r\n  }\r\n}\r\nexport default new Version()","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value) => bg(value, -18).toString()\r\n\r\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n\r\n// == contract gen\r\n// export const deleteIndexedKey = (obj) => {\r\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\r\n//     const keys = Object.keys(obj);\r\n//     const intKeyCount = keys.reduce(\r\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\r\n//       0\r\n//     );\r\n//     if (intKeyCount * 2 === keys.length) {\r\n//       let newObj = {};\r\n//       Object.keys(obj).forEach((k) => {\r\n//         if (!intRegex.test(k)) {\r\n//           newObj[k] = obj[k];\r\n//         }\r\n//       });\r\n//       return newObj;\r\n//     }\r\n//     return obj;\r\n//   } else {\r\n//     return obj;\r\n//   }\r\n// };\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(b) - parseInt(a));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else if (env === 'dev') {\r\n    return [\r\n      {\r\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n        initialBlock: '9378545',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '97',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n      },\r\n    ];\r\n  } else if (env === 'testnet') {\r\n    return [];\r\n  }\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n        isLp: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nimport config from '../config.json'\r\n\r\nimport {\r\n  DeriEnv,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getUserInfoAll,\r\n  getLiquidityInfo\r\n} from '../lib/web3js/indexV2'\r\nimport Type from '../model/Type';\r\nconst versionKey = 'deri-current-version'\r\n\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\nexport function convertToInternationalCurrencySystem (labelValue) {\r\n  \r\n  // Nine Zeroes for Billions\r\n  return Number.isNaN(labelValue) ? ''\r\n  : Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\r\n  // Six Zeroes for Millions \r\n  : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\r\n  // Three Zeroes for Thousands\r\n  : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\r\n\r\n  : Math.abs(Number(labelValue).toFixed(2));\r\n\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    } else {\r\n      symbol = symbol.split('-')[0]\r\n    }\r\n    return  `${symbol}_V2_${chain}`\r\n  } else {\r\n    if(version.isV1){\r\n      return symbol\r\n    } else {\r\n      if(symbol.indexOf('MARKPRICE') !== -1) {\r\n        return symbol;\r\n      } else {\r\n        return `${symbol}_V2_${chain}`\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//\r\n// export function formatSymbolInputParam(symbol,spec){\r\n//   const curChain = restoreChain();\r\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\r\n//   if(type.isFuture){\r\n//     return {\r\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\r\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\r\n//     }\r\n//   } else {\r\n//     return {\r\n//       indexPrice : `${symbol}_V2_${chain}`,\r\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport function getMarkpriceSymbol(config){\r\n  const curChain = restoreChain();\r\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n  const baseToken = Array.isArray(config.bTokenSymbol) ? config.bTokenSymbol[0] : config.bTokenSymbol\r\n  return `MARKPRICE_${config.symbol}_${chain}_${Type.current.toUpperCase()}_${version.zone}_${baseToken}`\r\n}\r\n\r\n\r\n\r\nexport function equalIgnoreCase(str1,str2){\r\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 200\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 200\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\nexport function groupByNetwork(pools){\r\n  const all = []\r\n  pools.reduce((total, pool) => {\r\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\r\n    if (find && find.list.length < 5) {\r\n      find['list'].push(pool)\r\n    } else {\r\n      const poolInfo = {\r\n        pool: {\r\n          network: pool.network,\r\n          symbol: pool.symbol,\r\n          address: pool.address,\r\n          formatAdd: pool.formatAdd,\r\n          version: pool.version,\r\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\r\n          chainId: pool.chainId,\r\n          airdrop: pool.airdrop,\r\n          type: pool.type,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          bTokenId: pool.bTokenId,\r\n          symbolId: pool.symbolId\r\n        },\r\n        list: [pool]\r\n      }\r\n      total.push(poolInfo)\r\n    }\r\n    return total;\r\n  }, all)\r\n  return all;\r\n}\r\n\r\nexport function combineSymbolfromPoolConfig(configs){\r\n  return configs.reduce((total,config) => {\r\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\r\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \r\n        && pos > -1) {\r\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\r\n        total[pos].symbol += `,${config.symbol}` \r\n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\r\n        total.push(config)\r\n      }\r\n    } else{\r\n      total.push(config)\r\n    }\r\n    return total;\r\n  },[]);\r\n}\r\n\r\nexport async function mapPoolInfo(config,wallet,chainInfo){\r\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\r\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\r\n  const pool = config.pool || ''\r\n  const item = { \r\n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\r\n    // liquidity : liqPool.liquidity,\r\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\r\n    formatAdd : formatAddress(pool),\r\n    address : pool,\r\n    type : 'perpetual',\r\n    buttonText : 'STAKING',\r\n    multiplier : 1\r\n  }\r\n  // if(wallet && wallet.isConnected()){\r\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\r\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\r\n  //   if(info){\r\n  //     item['pnl'] = info.pnl\r\n  //   }\r\n  //   if(claimInfo){\r\n  //     item['claimed'] = claimInfo.total;\r\n  //     item['unclaimed'] = claimInfo.amount\r\n  //   }\r\n  // }\r\n\r\n  return Object.assign(config,item)\r\n}\r\n\r\n\r\n\r\n","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\r\n    getUserInfo(userAddress),\r\n    getUserInfoHarvest(userAddress),\r\n    getUserInfoTotal(userAddress),\r\n  ]);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    //const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        //symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return {\r\n    liquidity: ''\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidityAll = async (pools) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  if (Array.isArray(pools)) {\r\n    const keys = pools.reduce((acc, pool) => {\r\n      if (pool.version === 'v2' && pool.bTokenId) {\r\n        return acc.concat([\r\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\r\n        ]);\r\n      } else {\r\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\r\n      }\r\n    }, []);\r\n    try {\r\n      const res = await db.getValues(keys);\r\n      if (res) {\r\n        return res.map((i) => deriToNatural(i));\r\n      }\r\n    } catch (err) {\r\n      console.log(err.toString());\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApyAll = async (pools) => {\r\n  // use the dev database\r\n  const db = databaseFactory(true);\r\n  if (Array.isArray(pools)) {\r\n    const keys = pools.reduce((acc, pool) => {\r\n      const poolNetwork = getNetworkName(pool.chainId.toString());\r\n      if (pool.version === 'v2' && pool.bTokenId) {\r\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\r\n      } else {\r\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\r\n      }\r\n    }, []);\r\n    try {\r\n      console.log('keys', keys)\r\n      const res = await db.getValues(keys);\r\n      if (res) {\r\n        return res.map((i) => deriToNatural(i));\r\n      }\r\n    } catch (err) {\r\n      console.log(err.toString());\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","// this file is generated by script, don't modify it !!!\r\nexport const pancakePairAbi = [\r\n  {\r\n    \"inputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"Burn\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Mint\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0In\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1In\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0Out\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1Out\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"Swap\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint112\",\r\n        \"name\": \"reserve0\",\r\n        \"type\": \"uint112\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint112\",\r\n        \"name\": \"reserve1\",\r\n        \"type\": \"uint112\"\r\n      }\r\n    ],\r\n    \"name\": \"Sync\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"DOMAIN_SEPARATOR\",\r\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"MINIMUM_LIQUIDITY\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"PERMIT_TYPEHASH\",\r\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"burn\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"factory\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"getReserves\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\r\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\r\n      {\r\n        \"internalType\": \"uint32\",\r\n        \"name\": \"_blockTimestampLast\",\r\n        \"type\": \"uint32\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"initialize\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"kLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"mint\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"name\": \"nonces\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\r\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\r\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\r\n    ],\r\n    \"name\": \"permit\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"price0CumulativeLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"price1CumulativeLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"skim\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\r\n    ],\r\n    \"name\": \"swap\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [],\r\n    \"name\": \"sync\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"token0\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"token1\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\r\n\r\nexport class PancakePair extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pancakePairAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async DOMAIN_SEPARATOR() {\r\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async MINIMUM_LIQUIDITY() {\r\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async PERMIT_TYPEHASH() {\r\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async allowance(, ) {\r\n  //    const res = await this._call('allowance', [, ])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async balanceOf() {\r\n  //    const res = await this._call('balanceOf', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async factory() {\r\n  //    const res = await this._call('factory', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getReserves() {\r\n    const res = await this._call('getReserves', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async kLast() {\r\n  //    const res = await this._call('kLast', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async nonces() {\r\n  //    const res = await this._call('nonces', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async price0CumulativeLast() {\r\n    const res = await this._call('price0CumulativeLast', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async price1CumulativeLast() {\r\n    const res = await this._call('price1CumulativeLast', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async token0() {\r\n  //    const res = await this._call('token0', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async token1() {\r\n  //    const res = await this._call('token1', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, value) {\r\n  //    return await this._transact('approve', [spender, value], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, to) {\r\n  //    return await this._transact('burn', [to], accountAddress)\r\n  //  }\r\n  //  async initialize(accountAddress, _token0, _token1) {\r\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, to) {\r\n  //    return await this._transact('mint', [to], accountAddress)\r\n  //  }\r\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\r\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\r\n  //  }\r\n  //  async skim(accountAddress, to) {\r\n  //    return await this._transact('skim', [to], accountAddress)\r\n  //  }\r\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\r\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\r\n  //  }\r\n  //  async sync(accountAddress) {\r\n  //    return await this._transact('sync', [], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, value) {\r\n  //    return await this._transact('transfer', [to, value], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, value) {\r\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\r\nimport { bg } from \"../../shared/utils/index.js\";\r\nimport { MAX_UINT256} from '../config'\r\nimport { PancakePair } from \"./gen/PancakePair.js\";\r\n\r\nconst isUnlocked = (klass) => {\r\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\r\n    const allowance = await this.allowance(accountAddress, poolAddress)\r\n    //console.log(accountAddress, poolAddress)\r\n    const res = bg(allowance).gt(0)\r\n    return res\r\n  };\r\n  return klass\r\n};\r\n\r\nconst unlock = (klass) => {\r\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getPrice = (klass) => {\r\n  klass.prototype['getPrice'] = async function () {\r\n    if (this.contractAddress === '0xE1cC9FCF36f60479F21ACcB3E23Cb2B608679f4d') {\r\n      return '1';\r\n    }\r\n    const [\r\n      isQuoteToken0,\r\n      qDecimals,\r\n      bDecimals,\r\n      pair,\r\n      priceCumulativeLast1,\r\n      priceCumulativeLast2,\r\n      timestampLast1,\r\n      timestampLast2,\r\n    ] = await Promise.all([\r\n      this.isQuoteToken0(),\r\n      this.qDecimals(),\r\n      this.bDecimals(),\r\n      this.pair(),\r\n      this.priceCumulativeLast1(),\r\n      this.priceCumulativeLast2(),\r\n      this.timestampLast1(),\r\n      this.timestampLast2(),\r\n    ]);\r\n\r\n    const pancakePair = new PancakePair(this.chainId, pair);\r\n    let reserveQ, reserveB, timestamp;\r\n    if (isQuoteToken0) {\r\n      const res = await pancakePair.getReserves();\r\n      reserveQ = res._reserve0;\r\n      reserveB = res._reserve1;\r\n      timestamp = res._blockTimestampLast;\r\n    } else {\r\n      const res = await pancakePair.getReserves();\r\n      reserveB = res._reserve0;\r\n      reserveQ = res._reserve1;\r\n      timestamp = res._blockTimestampLast;\r\n    }\r\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\r\n      pancakePair.price0CumulativeLast(),\r\n      pancakePair.price1CumulativeLast(),\r\n    ]);\r\n    let tmpPairState = {};\r\n\r\n    if (timestamp !== timestampLast2) {\r\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\r\n      tmpPairState.timestampLast1 = timestampLast2;\r\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\r\n        ? price0CumulativeLast\r\n        : price1CumulativeLast;\r\n      tmpPairState.timestampLast2 = timestamp;\r\n    } else {\r\n      tmpPairState = {\r\n        priceCumulativeLast1,\r\n        priceCumulativeLast2,\r\n        timestampLast1,\r\n        timestampLast2,\r\n      };\r\n    }\r\n\r\n    let price;\r\n    const diff = bg(qDecimals).minus(bDecimals);\r\n    if (tmpPairState.timestampLast1 !== '0') {\r\n      //console.log('not equal')\r\n      price = bg(tmpPairState.priceCumulativeLast2)\r\n        .minus(tmpPairState.priceCumulativeLast1)\r\n        .div(bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1))\r\n        .times(bg(10).pow(diff))\r\n        .div(bg(2).pow(112));\r\n    } else {\r\n      //console.log('equal')\r\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString();\r\n    }\r\n    return price;\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const ERC20Adapter = (klass) => {\r\n    klass = processMethod(klass, 'totalSupply');\r\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\r\n\r\n    klass = isUnlocked(klass);\r\n    klass = unlock(klass);\r\n    return klass\r\n}\r\n\r\nexport const chainlinkOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainVolatilityOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getVolatility');\r\n    return klass\r\n}\r\n\r\nexport const bTokenOracle1Adapter = (klass) => {\r\n  //klass = processMethod(klass, 'getPrice');\r\n  klass = getPrice(klass);\r\n  return klass;\r\n};\r\n\r\n// export const bTokenSwapper1Adapter = (klass) => {\r\n//   //klass = processMethod(klass, 'getPrice');\r\n//   return klass;\r\n// };\r\n\r\nexport const pancakePairAdapter = (klass) => {\r\n  //klass = processMethod(klass, 'getPrice');\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const TERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress, account, amount) {\r\n    return await this._transact('mint', [account, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const ERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\r\n\r\nexport class ERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, ERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals).toString();\r\n  }\r\n\r\n   async decimals() {\r\n     const res = await this._call('decimals', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n   async name() {\r\n     const res = await this._call('name', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const chainlinkOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"feed_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feed\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feedDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, chainlinkOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feed() {\r\n  //    const res = await this._call('feed', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feedDecimals() {\r\n  //    const res = await this._call('feedDecimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const offChainOracleAbi = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: 'symbol_',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'signer_',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'delayAllowance_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'delayAllowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getPrice',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'price',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'delayAllowance_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setDelayAllowance',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'signer_',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setSigner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'signer',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'timestamp',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'timestamp_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'price_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint8',\r\n        name: 'v_',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'r_',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 's_',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'updatePrice',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  // for old offchain oracle\r\n  {\r\n    inputs: [],\r\n    name: 'signatory',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\r\n\r\nexport class OffChainOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async price() {\r\n  //    const res = await this._call('price', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async signer() {\r\n    await this._init()\r\n    //const res = await this._call('signer', [])\r\n    const res = await this.contract.methods.signer().call()\r\n    return deleteIndexedKey(res)\r\n  }\r\n  // for old offchain oracle\r\n  async signatory() {\r\n    await this._init()\r\n    //const res = await this._call('signatory',[])\r\n    const res = await this.contract.methods.signatory().call()\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\r\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const offChainVolatilityOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"delayAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getVolatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setDelayAllowance\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setSigner\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"signer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"volatility_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"v_\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"r_\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"s_\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"updateVolatility\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"volatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\r\n\r\nexport class OffChainVolatilityOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getVolatility() {\r\n    const res = await this._call('getVolatility', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async signer() {\r\n    const res = await this._call('signer', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async volatility() {\r\n  //    const res = await this._call('volatility', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\r\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const TERC20MintLimitAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerBurn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerMint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintAmount\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mintTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintAmount\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\r\n\r\nexport class TERC20MintLimit extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20MintLimitAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf() {\r\n    return await this._call('balanceOf', [])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async mintAmount() {\r\n  //    const res = await this._call('mintAmount', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintPeriod() {\r\n  //    const res = await this._call('mintPeriod', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintTimestamp() {\r\n  //    const res = await this._call('mintTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress) {\r\n  //    return await this._transact('burn', [], accountAddress)\r\n  //  }\r\n  //  async controllerBurn(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async controllerMint(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async setMintAmount(accountAddress, amount) {\r\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\r\n  //  }\r\n  //  async setMintPeriod(accountAddress, period) {\r\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const bTokenOracle1Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pair_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"quote_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"base_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isQuoteToken0_\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"bDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"base\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"isQuoteToken0\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pair\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"priceCumulativeLast1\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"priceCumulativeLast2\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"qDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"quote\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestampLast1\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestampLast2\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\r\n\r\nexport class BTokenOracle1 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, bTokenOracle1Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async bDecimals() {\r\n    const res = await this._call('bDecimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async base() {\r\n  //    const res = await this._call('base', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isQuoteToken0() {\r\n    const res = await this._call('isQuoteToken0', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async pair() {\r\n    const res = await this._call('pair', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async priceCumulativeLast1() {\r\n    const res = await this._call('priceCumulativeLast1', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async priceCumulativeLast2() {\r\n    const res = await this._call('priceCumulativeLast2', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async qDecimals() {\r\n    const res = await this._call('qDecimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async quote() {\r\n  //    const res = await this._call('quote', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async timestampLast1() {\r\n    const res = await this._call('timestampLast1', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async timestampLast2() {\r\n    const res = await this._call('timestampLast2', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async getPrice(accountAddress) {\r\n  //    return await this._transact('getPrice', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\r\nimport { ERC20Adapter, chainlinkOracleAdapter, offChainOracleAdapter, offChainVolatilityOracleAdapter, bTokenSwapper1Adapter, pancakePairAdapter, bTokenOracle1Adapter } from './adapter.js';\r\n\r\nimport { TERC20 } from './gen/TERC20.js';\r\nimport { ERC20 } from './gen/ERC20.js';\r\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\r\nimport { OffChainOracle} from './gen/OffChainOracle.js';\r\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\r\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\r\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\r\nimport { PancakePair } from './gen/PancakePair.js';\r\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\r\n\r\n// ERC20\r\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\r\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\r\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\r\n\r\n\r\n// oracle\r\nexport const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\r\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\r\nexport const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\r\n\r\n// swapper\r\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\r\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\r\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\r\n\r\n","// versions\r\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\r\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\r\nexport const VERSIONS = ['v2', ...LITE_AND_OPTION_VERSIONS];\r\nexport const ALL_EXCEPT_OPEN_VERSIONS = [\r\n  'v2',\r\n  'v2_lite',\r\n  'option',\r\n];\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://polygon-rpc.com',\r\n        //'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        //'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { chainlinkFeedAbi } from './abis';\r\n\r\nexport class ChainlinkFeed extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, chainlinkFeedAbi);\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('description');\r\n    return res.split('/').map((s) => s.trim()).join('')\r\n  }\r\n}\r\n","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\r\n\r\nexport class OracleFactoryChainlink extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getFeed(symbol) {\r\n    const res = await this._call('getFeed', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol) {\r\n    return await this._transact('createOracle', [symbol], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryOffChainAbi = [\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateVolatilityOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\r\n\r\nexport class OracleFactoryOffChain extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getVolatilityOracle(symbol) {\r\n    const res = await this._call('getVolatilityOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import {\r\n  bTokenFactory,\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n} from '../../shared';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async init() {\r\n    await this._init();\r\n    if (!this.pTokenAddress|| !this.pToken ) {\r\n      await  this.updateAddresses()\r\n      // console.log(this.addresses, this.parameters)\r\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\r\n\r\n    }\r\n  }\r\n\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress || !this.pTokenAddress) {\r\n     const res = await this._call('getAddresses');\r\n    // update this state\r\n     this.bTokenAddress = res.bTokenAddress;\r\n     this.lTokenAddress= res.lTokenAddress;\r\n     this.pTokenAddress= res.pTokenAddress;\r\n    }\r\n  }\r\n\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses()\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols\r\n  }\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses()\r\n    if (!this.bToken) {\r\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol()\r\n    return this.bTokenSymbol\r\n  }\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\r\n    const res = await fetchJson(url)\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data\r\n    } else {\r\n\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\r\n      return  {\r\n        block_number: '1000000000',\r\n        version: '',\r\n      }\r\n    }\r\n  }\r\n  async getConfig() {\r\n    const [bToken, symbols, extraInfo] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n    ])\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock:extraInfo.block_number,\r\n      type: 'perpetual',\r\n      version:extraInfo.version,\r\n      versionId: 'v2_lite',\r\n      chainId: this.chainId,\r\n    }\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress)\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\r\nimport { ChainlinkFeed } from './contract/chainlink_feed'\r\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\r\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\r\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\r\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\r\n\r\n\r\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\r\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray]);\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { VERSIONS } from './version';\r\n\r\nexport const getJsonConfig = (version, env) => {\r\n  env = env || DeriEnv.get();\r\n  // for browser and nodejs\r\n  let configs =\r\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && VERSIONS.includes(version)) {\r\n    configs = configs[version];\r\n    if (['prod', 'dev', 'testnet'].includes(env)) {\r\n      if (configs && configs[env]) {\r\n        return configs[env];\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n    );\r\n  }\r\n};\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { symbolOracleOffChainAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils';\r\n\r\nexport class SymbolOracleOffChain extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, symbolOracleOffChainAbi);\r\n  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', []);\r\n    return deriToNatural(res);\r\n  }\r\n  async signer() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signer']().call();\r\n    return res;\r\n  }\r\n  async signatory() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signatory']().call();\r\n    return res;\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wooOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    //console.log('hit woo oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\r\nimport { WooOracle } from '../contract/oracle/woo_oracle';\r\n\r\nconst wooOracleAddresses = [\r\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\r\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\r\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\r\n]\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (wooOracleAddresses.includes(address)) {\r\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\nexport const wooOracleFactory = factory(WooOracle);\r\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\r\n","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { DeriEnv } from \"../../shared/config/env\"\r\nimport { getJsonConfig } from \"../../shared/config/config\"\r\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\r\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\r\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\r\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\r\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\r\n\r\nexport const getPoolOpenConfigList = async (...args) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds()\r\n      configs = await chainIds.reduce(async (acc, chainId) => {\r\n        //console.log('chainId', chainId)\r\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\r\n          chainId\r\n        );\r\n        const poolManager = perpetualPoolLiteManagerFactory(\r\n          chainId,\r\n          poolManagerAddress\r\n        );\r\n        // get pool numbers\r\n        const poolNums = parseInt(await poolManager.getNumPools());\r\n        const numsArray = [...Array(poolNums).keys()];\r\n        // get pool addresses\r\n        const addresses = await Promise.all(\r\n          numsArray.reduce(\r\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\r\n            []\r\n          )\r\n        );\r\n        // get pools config\r\n        const res = await Promise.all(\r\n          addresses.reduce(\r\n            (acc, address) =>\r\n              acc.concat([\r\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n        return acc.concat(res);\r\n      }, []);\r\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\r\n    },\r\n    args,\r\n    'getPoolOpenConfigList',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenOracleList = async(...args) => {\r\n  return catchApiError(\r\n    async (chainId, accountAddress) => {\r\n    chainId = normalizeChainId(chainId)\r\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n    const oracleFactory = oracleFactoryChainlinkFactory(\r\n      chainId,\r\n      oracleFactoryConfig.address\r\n    );\r\n    await oracleFactory._init()\r\n    let eventBlock, oracles= [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\r\n    );\r\n    if (res && res.success) {\r\n      eventBlock = parseInt(res.data.eventBlock);\r\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\r\n        oracles = res.data.oracles;\r\n      }\r\n      if (eventBlock === 0) {\r\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\r\n      }\r\n      const toBlock = await getBlockInfo(chainId, 'latest');\r\n      // fetch online\r\n      let events = await getPastEvents(\r\n        chainId,\r\n        oracleFactory.contract,\r\n        'CreateOracle',\r\n        {},\r\n        eventBlock,\r\n        toBlock.number\r\n      );\r\n      if (events.length > 0) {\r\n        for (let i = 0; i < events.length; i++) {\r\n          const event = events[i];\r\n          const info = event.returnValues;\r\n          oracles.push({\r\n            chainId,\r\n            symbol: info.symbol,\r\n            address: info.oracle,\r\n            blockNumber: event.blockNumber,\r\n          });\r\n        }\r\n        return oracles\r\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\r\n          .reduce((acc, i) => {\r\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\r\n          }, []);\r\n      } else {\r\n        return oracles\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    args,\r\n    'getPoolOpenOracleInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPoolLite.controller();\r\n    },\r\n    [chainId, poolAddress],\r\n    'getPoolController',\r\n    ''\r\n  );\r\n}\r\nexport const isPoolController = async (chainId, poolAddress, controller) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress, controller) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const poolController = await perpetualPoolLite.controller();\r\n      return (\r\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\r\n      );\r\n    },\r\n    [chainId, poolAddress, controller],\r\n    'isPoolController',\r\n    false\r\n  );\r\n};\r\n\r\nexport const getExpandedPoolOpenConfigList = async () => {\r\n  const env = DeriEnv.get()\r\n  const version = 'v2_lite_open'\r\n  let config = getJsonConfig(version, env);\r\n\r\n  config.pools =  await getPoolOpenConfigList()\r\n  const pools = config.pools\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  return expandPoolConfigV2LiteOpen(config);\r\n}\r\n\r\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\r\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\r\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\r\n    },\r\n    [chainId.toString(), poolAddress],\r\n    'getPoolAllSymbolNames ',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolAcitveSymbolIds = async (...args) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      chainId = chainId.toString()\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPoolLite.init()\r\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\r\n    },\r\n    args,\r\n    'getPoolActiveSymbolIds',\r\n    []\r\n  );\r\n};\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      const oldData = cache.data\r\n      try {\r\n        if (Date.now()/1000 - cache.timestamp >= 10) {\r\n        //if (Date.now()/1000 - cache.timestamp > 60) {\r\n          cache.data = await getPoolOpenConfigList()\r\n          cache.timestamp = Date.now()/1000\r\n          //res = 'v2 lite open config list is updated'\r\n        }\r\n      } catch(err) {\r\n        console.log(err)\r\n        cache.data = oldData\r\n        //res = `v2 lite open config list updating with error: ${err}`\r\n      }\r\n      // res && console.log(res)\r\n      return cache.data\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp\r\n    },\r\n    get() {\r\n      return cache.data\r\n    }\r\n  }\r\n})()\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseActivityFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseDeriVoteFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address =\r\n      DeriEnv.get() === 'prod'\r\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\r\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  let pending = {}\r\n  let walletChainId = null\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        //console.log('hit web3 cache')\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        //console.log('new ethereum web3 cache')\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        if (pending[chainId]) {\r\n          // wait for init\r\n          let retry = 8\r\n          while (retry > 0) {\r\n            await delay(500)\r\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n              // console.log('hit web3 cache')\r\n              return web3InstanceMap[chainId];\r\n            } else {\r\n              retry -= 1\r\n            }\r\n          }\r\n          // timeout\r\n          const providerUrl = await getChainProviderUrl(chainId);\r\n          //console.log('new web3 cache')\r\n          web3InstanceMap[chainId] = new Web3(\r\n            new Web3.providers.HttpProvider(providerUrl)\r\n          );\r\n          return web3InstanceMap[chainId];\r\n        } else {\r\n          // first init\r\n          pending[chainId] = true\r\n          try {\r\n            const providerUrl = await getChainProviderUrl(chainId);\r\n            //console.log('new web3 cache')\r\n            web3InstanceMap[chainId] = new Web3(\r\n              new Web3.providers.HttpProvider(providerUrl)\r\n            );\r\n          } catch(err) {\r\n            console.log(err.toString())\r\n          } finally {\r\n            delete pending[chainId]\r\n          }\r\n          return web3InstanceMap[chainId];\r\n        }\r\n      }\r\n    },\r\n  };\r\n})();","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { DeriEnv } from \"../shared/config/env\";\r\nimport { normalizeChainId } from \"../shared/utils/validate\";\r\n\r\nexport const openPoolChainIds = () => {\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n    testnet: ['97'],\r\n  }\r\n  const env = DeriEnv.get()\r\n  if (Array.isArray(configs[env])) {\r\n    return configs[env]\r\n  } else {\r\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n    testnet: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\r\n        initialBlock: '11017943',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\r\n        initialBlock: '12440610',\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport {\r\n  isUsedRestOracle,\r\n  mapToBToken,\r\n  mapToSymbol,\r\n  getVolatilitySymbols,\r\n} from './token';\r\n\r\nconst validatePoolV2 = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['bTokens'], 'bTokens');\r\n  pool['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processPoolV2 = (pool) => {\r\n  // process pool \r\n  pool['bTokenCount'] = pool['bTokens'].length;\r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validatePoolV2Lite = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n};\r\n\r\nconst processPoolV2Lite = (pool) => {\r\n  // process pool\r\n  if (!pool['symbolCount']) {\r\n    pool['symbolCount'] = pool['symbols'].length;\r\n  }\r\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\r\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validateConfigV2LiteOpen = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2LiteOpen = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validatePoolOption = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      // 'pricer',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      // 'offchainSymbolIds',\r\n      // 'offchainSymbols',\r\n      'symbolCount',\r\n      'volatilitySymbols',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\r\n};\r\n\r\nconst processPoolOption = (pool) => {\r\n  // process pool \r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  if (!pool['volatilitySymbols']) {\r\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['volatilitySymbols'] = getVolatilitySymbols(\r\n      pool['symbols'].map((s) => s.symbol)\r\n    ); \r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nexport const poolProcessor = {\r\n  v2: processPoolV2,\r\n  v2_lite: processPoolV2Lite,\r\n  v2_lite_open: processConfigV2LiteOpen,\r\n  option: processPoolOption,\r\n};\r\n\r\nexport const poolValidator = {\r\n  v2: validatePoolV2,\r\n  v2_lite: validatePoolV2Lite,\r\n  v2_lite_open: validateConfigV2LiteOpen,\r\n  option: validatePoolOption,\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { mapToSymbolInternal } from './token';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getJsonConfig(version, env || DeriEnv.get())\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { TERC20Factory } from \"..\"\r\nimport { catchTxApiError, normalizeChainId } from \"../utils\"\r\n\r\nexport const mintTERC20 = async (chainId, bTokenAddress, accountAddress) => {\r\n  const args = [chainId, bTokenAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, bTokenAddress, accountAddress) => {\r\n    chainId = normalizeChainId(chainId);\r\n    const testERC20 = TERC20Factory(chainId, bTokenAddress);\r\n    // send tx\r\n    return await testERC20.mint(accountAddress);\r\n  }, args);\r\n};","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  // pick 2 random urls\r\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    // console.log('hit wrapped oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","// v2 lite\r\nexport * from './perpetual_pool';\r\nexport * from './l_token';\r\nexport * from './p_token';\r\nexport * from './perpetual_pool_lite_viewer';\r\n","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport {equalIgnoreCase } from \"../utils/utils\";\r\n\r\nclass WebSocket {\r\n  constructor(){\r\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\r\n      transports: ['websocket'],\r\n      withCredentials: true\r\n    })\r\n    this.events = [];\r\n    this.socket.on('connect', () => {\r\n      console.log('connect')\r\n      this.events.forEach(event => {\r\n        this.socket.emit(event[0],event[1]);\r\n      })\r\n    })\r\n    this.socket.on('disconnect',event => {\r\n      console.log('web socket disconnect,will reconnect auto')\r\n    })\r\n  }\r\n\r\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\r\n    this.socket.on(listener,data => {\r\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\r\n        onMessage(data)\r\n      }\r\n    })\r\n    this.socket.emit(event, params)\r\n    if(this.findEvent(event,params) === -1){\r\n      this.events.push([event,params])\r\n    }\r\n  }\r\n\r\n  findEvent(event,params){\r\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\r\n  }\r\n\r\n  unsubscribe(event,params = {}){\r\n    this.socket.emit(event,params)\r\n    const pos = this.findEvent(event,params)\r\n    this.events.splice(pos,1)\r\n  }\r\n}\r\nexport default new WebSocket()","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 2,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  async load(version,isOptions){\r\n    let current = version && version.current;\r\n    if(isOptions){\r\n      current = 'option'\r\n    }\r\n    if(current === 'v2_lite_open'){\r\n       await openConfigListCache.update()\r\n    }\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(isOptions){\r\n      configs = sortOptionSymbols(configs)\r\n    }\r\n    if(!isOptions && version){\r\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","var map = {\n\t\"./de/Signin.json\": 608,\n\t\"./de/bridge.json\": 609,\n\t\"./de/broker.json\": 610,\n\t\"./de/dip-history-two.json\": 611,\n\t\"./de/dip-history.json\": 612,\n\t\"./de/dip-two.json\": 613,\n\t\"./de/faucet.json\": 614,\n\t\"./de/footer.json\": 615,\n\t\"./de/governance.json\": 616,\n\t\"./de/header.json\": 617,\n\t\"./de/home.json\": 618,\n\t\"./de/lite.json\": 619,\n\t\"./de/mining.json\": 620,\n\t\"./de/mobile-lite.json\": 621,\n\t\"./de/nuls.json\": 622,\n\t\"./de/permission.json\": 623,\n\t\"./de/pro.json\": 624,\n\t\"./de/team.json\": 625,\n\t\"./de/trading-mining.json\": 626,\n\t\"./en/Signin.json\": 627,\n\t\"./en/bridge.json\": 628,\n\t\"./en/broker.json\": 629,\n\t\"./en/dip-history-two.json\": 630,\n\t\"./en/dip-history.json\": 631,\n\t\"./en/dip-two.json\": 632,\n\t\"./en/faucet.json\": 633,\n\t\"./en/footer.json\": 634,\n\t\"./en/governance.json\": 635,\n\t\"./en/header.json\": 636,\n\t\"./en/home.json\": 637,\n\t\"./en/lite.json\": 638,\n\t\"./en/mining.json\": 639,\n\t\"./en/mobile-lite.json\": 640,\n\t\"./en/nuls.json\": 641,\n\t\"./en/permission.json\": 642,\n\t\"./en/pro.json\": 643,\n\t\"./en/team.json\": 644,\n\t\"./en/trading-mining.json\": 645,\n\t\"./fr/Signin.json\": 646,\n\t\"./fr/bridge.json\": 647,\n\t\"./fr/broker.json\": 648,\n\t\"./fr/dip-history-two.json\": 649,\n\t\"./fr/dip-history.json\": 650,\n\t\"./fr/dip-two.json\": 651,\n\t\"./fr/faucet.json\": 652,\n\t\"./fr/footer.json\": 653,\n\t\"./fr/governance.json\": 654,\n\t\"./fr/header.json\": 655,\n\t\"./fr/home.json\": 656,\n\t\"./fr/lite.json\": 657,\n\t\"./fr/mining.json\": 658,\n\t\"./fr/mobile-lite.json\": 659,\n\t\"./fr/nuls.json\": 660,\n\t\"./fr/permission.json\": 661,\n\t\"./fr/pro.json\": 662,\n\t\"./fr/team.json\": 663,\n\t\"./fr/trading-mining.json\": 664,\n\t\"./zh/Signin.json\": 665,\n\t\"./zh/bridge.json\": 666,\n\t\"./zh/broker.json\": 667,\n\t\"./zh/dip-history-two.json\": 668,\n\t\"./zh/dip-history.json\": 669,\n\t\"./zh/dip-two.json\": 670,\n\t\"./zh/faucet.json\": 671,\n\t\"./zh/footer.json\": 672,\n\t\"./zh/governance.json\": 673,\n\t\"./zh/header.json\": 674,\n\t\"./zh/home.json\": 675,\n\t\"./zh/lite.json\": 676,\n\t\"./zh/mining.json\": 677,\n\t\"./zh/mobile-lite.json\": 678,\n\t\"./zh/nuls.json\": 679,\n\t\"./zh/permission.json\": 680,\n\t\"./zh/pro.json\": 681,\n\t\"./zh/team.json\": 682,\n\t\"./zh/trading-mining.json\": 683\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 607;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport type from './model/Type'\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\nconst getIsDesktop = () => window.screen.width > 1024;\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\r\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\r\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\r\n  const isOption = isOptionsLite || isOptionsPro\r\n  const catagory = isOption ? 'option' : 'future'\r\n  type.setCurrent(catagory)\r\n\r\n  // useEffect(() => {\r\n  //   const onResize = () => {\r\n  //     if(getIsDesktop() !== isDesktop){\r\n  //       window.location.reload()\r\n  //     }\r\n  //   }\r\n  //   window.addEventListener(\"resize\", onResize);\r\n  //   return () => window.removeEventListener(\"resize\", onResize)\r\n  // },[]);\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  } else {\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport { equalIgnoreCase } from \"../utils/utils\";\r\nimport webSocket from \"./WebSocket\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n  load(symbol,timeType = 'min'){\r\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\r\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\r\n        this.setIndex(data.close)\r\n        for(const key of Object.keys(this.listeners)){\r\n          if(typeof this.listeners[key] === 'function'){\r\n            this.listeners[key](data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol)\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n  unsubscribeBars(symbol){\r\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\r\n  }\r\n\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  clean(){\r\n    this.unsubscribeBars(this.symbol);\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\r\nimport { eqInNumber } from '../utils/utils';\r\nimport type from \"./Type\";\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n   counter = 0\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     this.wallet= wallet; \r\n     this.spec = spec\r\n     if(callback){\r\n      this.callback = callback\r\n     }\r\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      if(position){\r\n        if(this.callback){\r\n          this.callback(position)\r\n        }\r\n      }\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback){\r\n    this.wallet= wallet; \r\n    this.spec = spec\r\n    if(callback){\r\n     this.callbackALL = callback\r\n    }\r\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      let positions = [] \r\n      if(res.length) {\r\n        positions = res.map(item => {\r\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n          return item\r\n        })\r\n      }\r\n      if(positions){\r\n        if(this.callbackALL){\r\n          this.callbackALL(positions)\r\n        }\r\n      }\r\n      return positions;\r\n    }\r\n   } \r\n\r\n   startAll(){\r\n    this.paused = false;\r\n    if(!this.started){\r\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\r\n    }\r\n    this.started = true\r\n  }\r\n\r\n   start(){   \r\n    this.paused = false;\r\n    if(!this.startedAll){\r\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\r\n    }\r\n    this.startedAll = true\r\n   }\r\n\r\n   runInAction(action){\r\n    this.timer = window.setTimeout(async () => {\r\n      if(!this.paused){\r\n        const position = await action();\r\n        if(position) {\r\n          this.runInAction(action);\r\n        }\r\n      }\r\n    },3000)\r\n   }\r\n\r\n   pause(){\r\n    this.paused = true\r\n   }\r\n\r\n   resume(){\r\n    this.clean();\r\n    this.start(this.callback)\r\n   }\r\n\r\n   clean(){\r\n     this.started = false;\r\n     this.startedAll = false;\r\n     this.paused = false;\r\n     this.timer = null;\r\n   }\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      if(type.isOption){\r\n        spec.underlier = this.getUnderlierStrike(spec).underlier\r\n        spec.strike = this.getUnderlierStrike(spec).strike\r\n        spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport   type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\nimport Type from \"./Type\";\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      positions : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setOptionConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setPositions : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      optionFundingRateTip : computed,\r\n      initialMarginRatioTip : computed,\r\n      maintenanceMarginRatioTip : computed,\r\n      TransactionFeeTip : computed,\r\n      dpmmFundingRateTip :computed,\r\n      fundingCoefficientTip :computed,\r\n      rateTip:computed,\r\n      multiplierTip : computed,\r\n      TotalNetPositionTip:computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,finishedCallback){  \r\n    const isOption = Type.isOption\r\n    const all = await this.configInfo.load(version,isOption);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version,isOption);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback,isOption){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback,isOption)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback,isOption){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    } else{\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,(position) => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet,config,isOption)\r\n        }),\r\n        this.contractInfo.load(wallet,config,isOption),\r\n        this.loadFundingRate(wallet,config,isOption),\r\n        this.historyInfo.load(wallet,config,isOption),\r\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\r\n      ]).then(results => {\r\n        if(results.length === 5){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n          results[4] && this.setPositions(results[4]);\r\n          // this.refreshCache();\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n        this.oracle.load(getFormatSymbol(config.symbol,config,true))\r\n        this.positionInfo.start()\r\n        this.positionInfo.startAll();\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  refreshCache(){\r\n    const {pool} = this.config;\r\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool,symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n \r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    this.positionInfo.load(this.wallet,this.config, position  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    this.positionInfo.loadAll(this.wallet,this.config,positions => this.setPositions(positions))\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.positionInfo.start();\r\n    this.positionInfo.startAll();\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume();\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    if(type.isOption){\r\n      this.setOptionConfigs(configs)\r\n    } \r\n    this.configs = configs\r\n  }\r\n\r\n  setOptionConfigs(configs){\r\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  }\r\n\r\n  groupConfigBySymbol(configs = []){\r\n    return configs.reduce((total,config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if(!total[symbol]){\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    },[])\r\n  }\r\n\r\n  setConfig(config){\r\n    //just for v2 and lite version in futrue\r\n    if(type.isFuture && (version.isV2 || version.isV2Lite)){\r\n      // config.markpriceSymbol = `${config.symbol}-MARKPRICE`\r\n      config.markpriceSymbolFormat = getMarkpriceSymbol(config)\r\n    }\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions){\r\n    if(positions){\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      // let volume =  increment / (price * this.contract.multiplier * MarginRatio);\r\n      let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\r\n      // if(type.isOption){\r\n        volume = +volume * +this.contract.multiplier\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length \r\n        let value = volume.toString()\r\n        if(value.indexOf(\".\") !== -1){\r\n          value = value.substring(0,value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      // }else{\r\n      //   this.setVolume(volume.toFixed(0))\r\n      // }\r\n    }\r\n  }\r\n\r\n  clean(){\r\n    this.oracle.clean();\r\n    this.positionInfo.clean();\r\n    this.version = null;\r\n    this.configs = [] \r\n    this.config = null;\r\n    this.index = ''\r\n    this.volume = ''\r\n    this.fundingRate = {}\r\n    this.position = {}\r\n    this.positions = []\r\n    this.contract = {}\r\n    this.history = []\r\n    this.userSelectedDirection = 'long'\r\n    this.optionsConfigs = {}\r\n  }\r\n\r\n  get volumeDisplay(){\r\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    let optionVolume = (+initVolume / +this.contract.multiplier);\r\n    const volume = optionVolume\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = (+totalVolume) * price \r\n    const curContractValue = (+this.volumeDisplay) * price\r\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\r\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1); \r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage,\r\n      afterLeverage : afterLeverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config,isOption){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n  get dpmmFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.fundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get rateTip(){\r\n    if(this.fundingRate && this.fundingRate.funding0 && this.position.markPrice){\r\n      return `${Intl.get('lite','rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.position.markPrice) ).times(bg(100)).toString()}% ${Intl.get('lite','rate-hover-two')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get fundingCoefficientTip(){\r\n    if(this.contract && this.contract.fundingRateCoefficient && this.config.unit){\r\n     if(Intl.locale === 'zh'){\r\n      return `1${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-one')} ${Intl.get('lite','funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\r\n      `\r\n     }else{\r\n      return `${Intl.get('lite','funding-coefficient-hove-one')} ${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\r\n      `\r\n     }\r\n      \r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip(){\r\n    if(this.contract && this.contract.initialMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip(){\r\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip(){\r\n    if(this.contract && this.config){\r\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip(){\r\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\r\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\r\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\r\n    }\r\n    return ''\r\n  }\r\n  get TotalNetPositionTip(){\r\n    if(this.contract && this.fundingRate.tradersNetVolume && this.config){\r\n        return `${Intl.get('lite','notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n}"],"sourceRoot":""}